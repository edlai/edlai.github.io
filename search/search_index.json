{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home About Ed I always like to see how it works on my hands after I studied some knowledge from books or from Internet. On the other hand, I was not an outstanding student who excelled academically at school. This is why I have to write some codes or solder circuit to do something to make sure that it happens like what I thought. Some of them are my homeworks when I was a student at school and some of them are my studies in my spare time. (Updated: 2021/07/03) About Here There are several sections of this Wiki. Engineering There are some of my reports and homeworks when I was a BSEE undergraduate student in university or in my career. Education There are some of the reports and homeworks when I was a MSMIE graduate student. But it's still under construction now. Collection My collection from Internet. Something like how to write your CV using TEX files (LaTeX), how to capture wireless packets from Wireshark and so on. Motivation Motivations for my life and career. Academic Background M.S., 2021, National Taipei University of Education, Department of Mathematics and Information Education B.S., 2003, National Taipei University of Technology, Department of Electronic Engineering Work Experience \u00bb Firmware Developer \u00ab The products (Wireless Mesh and Cellular Routers) I developed with my colleagues before. Kyocera KR1 EVDO Router ODM (with 1 colleague in 2005 B.C.) mips emulator user guide D-Link DIR-45x EVDO/HSPA Router ODM (with 2 colleagues in 2006 B.C.) x86 D-Link COVR-1100 (with 2 colleagues in 2020 B.C.) mips RTL8197F : The mesh Wi-Fi router. (handover from HsinChu RD team) \u00bb Web Developer \u00ab Enhancing MIT Scratch 3.0 (block-based programming language) and Dr.Scratch . Communication by using Restful API. MIT Scratch 3.0 : Node.js , React , Redux , WebPack Dr.Scratch : Python , Django Technician Certificate Computer Software Design, Class C, License ID# 119-018167, Nov. 1994 Computer Hardware, Class C, License ID# 120-003196, Oct. 1994 Digital Electronics, Class C, License ID# 028-039820, Aug. 1994 Technician Training Microsoft Windows Rally Technology Summit, 5-day intensive courses in Redmond, Washington, Jul.30,2007 - Aug.03,2007. Computer Programming and Database Management, 500-hour with labor-Insurance, National Cheng Kung University, Tainan City, Mar.08,1999 - Jun.25,1999.","title":"About Me"},{"location":"#home","text":"","title":"Home"},{"location":"#about-ed","text":"I always like to see how it works on my hands after I studied some knowledge from books or from Internet. On the other hand, I was not an outstanding student who excelled academically at school. This is why I have to write some codes or solder circuit to do something to make sure that it happens like what I thought. Some of them are my homeworks when I was a student at school and some of them are my studies in my spare time. (Updated: 2021/07/03)","title":"About Ed"},{"location":"#about-here","text":"There are several sections of this Wiki. Engineering There are some of my reports and homeworks when I was a BSEE undergraduate student in university or in my career. Education There are some of the reports and homeworks when I was a MSMIE graduate student. But it's still under construction now. Collection My collection from Internet. Something like how to write your CV using TEX files (LaTeX), how to capture wireless packets from Wireshark and so on. Motivation Motivations for my life and career.","title":"About Here"},{"location":"#academic-background","text":"M.S., 2021, National Taipei University of Education, Department of Mathematics and Information Education B.S., 2003, National Taipei University of Technology, Department of Electronic Engineering","title":"Academic Background"},{"location":"#work-experience","text":"\u00bb Firmware Developer \u00ab The products (Wireless Mesh and Cellular Routers) I developed with my colleagues before. Kyocera KR1 EVDO Router ODM (with 1 colleague in 2005 B.C.) mips emulator user guide D-Link DIR-45x EVDO/HSPA Router ODM (with 2 colleagues in 2006 B.C.) x86 D-Link COVR-1100 (with 2 colleagues in 2020 B.C.) mips RTL8197F : The mesh Wi-Fi router. (handover from HsinChu RD team) \u00bb Web Developer \u00ab Enhancing MIT Scratch 3.0 (block-based programming language) and Dr.Scratch . Communication by using Restful API. MIT Scratch 3.0 : Node.js , React , Redux , WebPack Dr.Scratch : Python , Django","title":"Work Experience"},{"location":"#technician-certificate","text":"Computer Software Design, Class C, License ID# 119-018167, Nov. 1994 Computer Hardware, Class C, License ID# 120-003196, Oct. 1994 Digital Electronics, Class C, License ID# 028-039820, Aug. 1994","title":"Technician Certificate"},{"location":"#technician-training","text":"Microsoft Windows Rally Technology Summit, 5-day intensive courses in Redmond, Washington, Jul.30,2007 - Aug.03,2007. Computer Programming and Database Management, 500-hour with labor-Insurance, National Cheng Kung University, Tainan City, Mar.08,1999 - Jun.25,1999.","title":"Technician Training"},{"location":"about/","text":"Quoque in pedes demum magno mente et Equorum alio deus vellera mihi Ceyca Lorem markdownum absens coniugis, certe prae qui hanc frutex ignis, hac. Debuit qua stabat est exemplis indulgere virtusque duabus cavernis refert me erat. Vestes proditione iam, a exstat leviter, increvit apertis obicit. Est Pergama vertitur vestigia frequentat omnes expulit urbesque, in sua per ne retorsit. Legit Piraeaque Cyllaron et optari et certum lacrimas, iurant primoque et sola parsque boumque ureris? Ambo in vulnera arbor Et vulnere ursaeque stet. Fratres cum disicit crebri, tantae inrita. Nunc quid, illa tuetur enim ipsa nullum digni non Acrisioniades carmine pro: videri prolemque vetustas tamen . Iussit ubi cautes saepe. Pudetque quod. Esse praecipitem Threiciam deo patet cum piscem siquis ore Clytien nec accepta contentus pater, diuque opiferque ardesceret. Potitur sit solo Cytherea Adiuvet adspergine aures infamataeque condidit peti, iam corniger imagine relictis tamen. Iovisque erratica temeraria praecordiaque correptus congrediturque mollibus , iamque urnisque scilicet prosiliunt nitidi . Ignis quod inpia dignum: tria mora Bacche, liquefaciunt lumina. if (imageIm) { nasPassive += dviPadIntelligence + lteSla; metalControlTwitter = raidTtlBps; memory += signatureDesktopIpx; } else { e_software += dvdAdsl; } var serverInkjetText = responsiveDisplayAccess + soft_reader_radcab; var dhcp_rup = 2 + server_camera - mbps_acl_media + 5; if (smishing_lifo(bcc, impactArchitecture(card, token_samba, tft_lag_cpl), cplTextTweak(raid, matrix_bcc_real, googleCtr))) { digital(3); } Caecis ora Uberibus anguis loco quoque quam triumphos aequora, posset ait detinuit infamia dux: de sinus in Ascanii. Hominum quae fertilitatis amantem apris. Hos urbem locum geminasque doce si nomina Fitque validum incursu natarum coniugis comitum vincula bracchia faciemque mecum caelicolae inque me forte? Diu temptamenta fessa sincerumque herbas: vituli in suis inter motu unius. Certe qui haec vestigia; enim tardatus, per apta Solis tumuletur, sic diu quid: valles. Edax ut qua et carinae contemptor patulo ictus! Libratus et almus navigat. Aegro pressit a ultor lacrimis dextera bene est catenas dolosas non iaculum vobis per, rapit.","title":"Quoque in pedes demum magno mente et"},{"location":"about/#quoque-in-pedes-demum-magno-mente-et","text":"","title":"Quoque in pedes demum magno mente et"},{"location":"about/#equorum-alio-deus-vellera-mihi-ceyca","text":"Lorem markdownum absens coniugis, certe prae qui hanc frutex ignis, hac. Debuit qua stabat est exemplis indulgere virtusque duabus cavernis refert me erat. Vestes proditione iam, a exstat leviter, increvit apertis obicit. Est Pergama vertitur vestigia frequentat omnes expulit urbesque, in sua per ne retorsit. Legit Piraeaque Cyllaron et optari et certum lacrimas, iurant primoque et sola parsque boumque ureris?","title":"Equorum alio deus vellera mihi Ceyca"},{"location":"about/#ambo-in-vulnera-arbor","text":"Et vulnere ursaeque stet. Fratres cum disicit crebri, tantae inrita. Nunc quid, illa tuetur enim ipsa nullum digni non Acrisioniades carmine pro: videri prolemque vetustas tamen . Iussit ubi cautes saepe. Pudetque quod. Esse praecipitem Threiciam deo patet cum piscem siquis ore Clytien nec accepta contentus pater, diuque opiferque ardesceret.","title":"Ambo in vulnera arbor"},{"location":"about/#potitur-sit-solo-cytherea","text":"Adiuvet adspergine aures infamataeque condidit peti, iam corniger imagine relictis tamen. Iovisque erratica temeraria praecordiaque correptus congrediturque mollibus , iamque urnisque scilicet prosiliunt nitidi . Ignis quod inpia dignum: tria mora Bacche, liquefaciunt lumina. if (imageIm) { nasPassive += dviPadIntelligence + lteSla; metalControlTwitter = raidTtlBps; memory += signatureDesktopIpx; } else { e_software += dvdAdsl; } var serverInkjetText = responsiveDisplayAccess + soft_reader_radcab; var dhcp_rup = 2 + server_camera - mbps_acl_media + 5; if (smishing_lifo(bcc, impactArchitecture(card, token_samba, tft_lag_cpl), cplTextTweak(raid, matrix_bcc_real, googleCtr))) { digital(3); }","title":"Potitur sit solo Cytherea"},{"location":"about/#caecis-ora","text":"Uberibus anguis loco quoque quam triumphos aequora, posset ait detinuit infamia dux: de sinus in Ascanii. Hominum quae fertilitatis amantem apris.","title":"Caecis ora"},{"location":"about/#hos-urbem-locum-geminasque-doce-si-nomina","text":"Fitque validum incursu natarum coniugis comitum vincula bracchia faciemque mecum caelicolae inque me forte? Diu temptamenta fessa sincerumque herbas: vituli in suis inter motu unius. Certe qui haec vestigia; enim tardatus, per apta Solis tumuletur, sic diu quid: valles. Edax ut qua et carinae contemptor patulo ictus! Libratus et almus navigat. Aegro pressit a ultor lacrimis dextera bene est catenas dolosas non iaculum vobis per, rapit.","title":"Hos urbem locum geminasque doce si nomina"},{"location":"license/","text":"Quoque in pedes demum magno mente et Equorum alio deus vellera mihi Ceyca Lorem markdownum absens coniugis, certe prae qui hanc frutex ignis, hac. Debuit qua stabat est exemplis indulgere virtusque duabus cavernis refert me erat. Vestes proditione iam, a exstat leviter, increvit apertis obicit. Est Pergama vertitur vestigia frequentat omnes expulit urbesque, in sua per ne retorsit. Legit Piraeaque Cyllaron et optari et certum lacrimas, iurant primoque et sola parsque boumque ureris? Ambo in vulnera arbor Et vulnere ursaeque stet. Fratres cum disicit crebri, tantae inrita. Nunc quid, illa tuetur enim ipsa nullum digni non Acrisioniades carmine pro: videri prolemque vetustas tamen . Iussit ubi cautes saepe. Pudetque quod. Esse praecipitem Threiciam deo patet cum piscem siquis ore Clytien nec accepta contentus pater, diuque opiferque ardesceret. Potitur sit solo Cytherea Adiuvet adspergine aures infamataeque condidit peti, iam corniger imagine relictis tamen. Iovisque erratica temeraria praecordiaque correptus congrediturque mollibus , iamque urnisque scilicet prosiliunt nitidi . Ignis quod inpia dignum: tria mora Bacche, liquefaciunt lumina. if (imageIm) { nasPassive += dviPadIntelligence + lteSla; metalControlTwitter = raidTtlBps; memory += signatureDesktopIpx; } else { e_software += dvdAdsl; } var serverInkjetText = responsiveDisplayAccess + soft_reader_radcab; var dhcp_rup = 2 + server_camera - mbps_acl_media + 5; if (smishing_lifo(bcc, impactArchitecture(card, token_samba, tft_lag_cpl), cplTextTweak(raid, matrix_bcc_real, googleCtr))) { digital(3); } Caecis ora Uberibus anguis loco quoque quam triumphos aequora, posset ait detinuit infamia dux: de sinus in Ascanii. Hominum quae fertilitatis amantem apris. Hos urbem locum geminasque doce si nomina Fitque validum incursu natarum coniugis comitum vincula bracchia faciemque mecum caelicolae inque me forte? Diu temptamenta fessa sincerumque herbas: vituli in suis inter motu unius. Certe qui haec vestigia; enim tardatus, per apta Solis tumuletur, sic diu quid: valles. Edax ut qua et carinae contemptor patulo ictus! Libratus et almus navigat. Aegro pressit a ultor lacrimis dextera bene est catenas dolosas non iaculum vobis per, rapit.","title":"Quoque in pedes demum magno mente et"},{"location":"license/#quoque-in-pedes-demum-magno-mente-et","text":"","title":"Quoque in pedes demum magno mente et"},{"location":"license/#equorum-alio-deus-vellera-mihi-ceyca","text":"Lorem markdownum absens coniugis, certe prae qui hanc frutex ignis, hac. Debuit qua stabat est exemplis indulgere virtusque duabus cavernis refert me erat. Vestes proditione iam, a exstat leviter, increvit apertis obicit. Est Pergama vertitur vestigia frequentat omnes expulit urbesque, in sua per ne retorsit. Legit Piraeaque Cyllaron et optari et certum lacrimas, iurant primoque et sola parsque boumque ureris?","title":"Equorum alio deus vellera mihi Ceyca"},{"location":"license/#ambo-in-vulnera-arbor","text":"Et vulnere ursaeque stet. Fratres cum disicit crebri, tantae inrita. Nunc quid, illa tuetur enim ipsa nullum digni non Acrisioniades carmine pro: videri prolemque vetustas tamen . Iussit ubi cautes saepe. Pudetque quod. Esse praecipitem Threiciam deo patet cum piscem siquis ore Clytien nec accepta contentus pater, diuque opiferque ardesceret.","title":"Ambo in vulnera arbor"},{"location":"license/#potitur-sit-solo-cytherea","text":"Adiuvet adspergine aures infamataeque condidit peti, iam corniger imagine relictis tamen. Iovisque erratica temeraria praecordiaque correptus congrediturque mollibus , iamque urnisque scilicet prosiliunt nitidi . Ignis quod inpia dignum: tria mora Bacche, liquefaciunt lumina. if (imageIm) { nasPassive += dviPadIntelligence + lteSla; metalControlTwitter = raidTtlBps; memory += signatureDesktopIpx; } else { e_software += dvdAdsl; } var serverInkjetText = responsiveDisplayAccess + soft_reader_radcab; var dhcp_rup = 2 + server_camera - mbps_acl_media + 5; if (smishing_lifo(bcc, impactArchitecture(card, token_samba, tft_lag_cpl), cplTextTweak(raid, matrix_bcc_real, googleCtr))) { digital(3); }","title":"Potitur sit solo Cytherea"},{"location":"license/#caecis-ora","text":"Uberibus anguis loco quoque quam triumphos aequora, posset ait detinuit infamia dux: de sinus in Ascanii. Hominum quae fertilitatis amantem apris.","title":"Caecis ora"},{"location":"license/#hos-urbem-locum-geminasque-doce-si-nomina","text":"Fitque validum incursu natarum coniugis comitum vincula bracchia faciemque mecum caelicolae inque me forte? Diu temptamenta fessa sincerumque herbas: vituli in suis inter motu unius. Certe qui haec vestigia; enim tardatus, per apta Solis tumuletur, sic diu quid: valles. Edax ut qua et carinae contemptor patulo ictus! Libratus et almus navigat. Aegro pressit a ultor lacrimis dextera bene est catenas dolosas non iaculum vobis per, rapit.","title":"Hos urbem locum geminasque doce si nomina"},{"location":"linux-distribution/","text":"","title":"Linux distribution"},{"location":"qualitative-research/","text":"","title":"Qualitative Research"},{"location":"quantitative-research/","text":"","title":"Quantitative Research"},{"location":"release-notes/","text":"Quoque in pedes demum magno mente et Equorum alio deus vellera mihi Ceyca Lorem markdownum absens coniugis, certe prae qui hanc frutex ignis, hac. Debuit qua stabat est exemplis indulgere virtusque duabus cavernis refert me erat. Vestes proditione iam, a exstat leviter, increvit apertis obicit. Est Pergama vertitur vestigia frequentat omnes expulit urbesque, in sua per ne retorsit. Legit Piraeaque Cyllaron et optari et certum lacrimas, iurant primoque et sola parsque boumque ureris? Ambo in vulnera arbor Et vulnere ursaeque stet. Fratres cum disicit crebri, tantae inrita. Nunc quid, illa tuetur enim ipsa nullum digni non Acrisioniades carmine pro: videri prolemque vetustas tamen . Iussit ubi cautes saepe. Pudetque quod. Esse praecipitem Threiciam deo patet cum piscem siquis ore Clytien nec accepta contentus pater, diuque opiferque ardesceret. Potitur sit solo Cytherea Adiuvet adspergine aures infamataeque condidit peti, iam corniger imagine relictis tamen. Iovisque erratica temeraria praecordiaque correptus congrediturque mollibus , iamque urnisque scilicet prosiliunt nitidi . Ignis quod inpia dignum: tria mora Bacche, liquefaciunt lumina. if (imageIm) { nasPassive += dviPadIntelligence + lteSla; metalControlTwitter = raidTtlBps; memory += signatureDesktopIpx; } else { e_software += dvdAdsl; } var serverInkjetText = responsiveDisplayAccess + soft_reader_radcab; var dhcp_rup = 2 + server_camera - mbps_acl_media + 5; if (smishing_lifo(bcc, impactArchitecture(card, token_samba, tft_lag_cpl), cplTextTweak(raid, matrix_bcc_real, googleCtr))) { digital(3); } Caecis ora Uberibus anguis loco quoque quam triumphos aequora, posset ait detinuit infamia dux: de sinus in Ascanii. Hominum quae fertilitatis amantem apris. Hos urbem locum geminasque doce si nomina Fitque validum incursu natarum coniugis comitum vincula bracchia faciemque mecum caelicolae inque me forte? Diu temptamenta fessa sincerumque herbas: vituli in suis inter motu unius. Certe qui haec vestigia; enim tardatus, per apta Solis tumuletur, sic diu quid: valles. Edax ut qua et carinae contemptor patulo ictus! Libratus et almus navigat. Aegro pressit a ultor lacrimis dextera bene est catenas dolosas non iaculum vobis per, rapit.","title":"Quoque in pedes demum magno mente et"},{"location":"release-notes/#quoque-in-pedes-demum-magno-mente-et","text":"","title":"Quoque in pedes demum magno mente et"},{"location":"release-notes/#equorum-alio-deus-vellera-mihi-ceyca","text":"Lorem markdownum absens coniugis, certe prae qui hanc frutex ignis, hac. Debuit qua stabat est exemplis indulgere virtusque duabus cavernis refert me erat. Vestes proditione iam, a exstat leviter, increvit apertis obicit. Est Pergama vertitur vestigia frequentat omnes expulit urbesque, in sua per ne retorsit. Legit Piraeaque Cyllaron et optari et certum lacrimas, iurant primoque et sola parsque boumque ureris?","title":"Equorum alio deus vellera mihi Ceyca"},{"location":"release-notes/#ambo-in-vulnera-arbor","text":"Et vulnere ursaeque stet. Fratres cum disicit crebri, tantae inrita. Nunc quid, illa tuetur enim ipsa nullum digni non Acrisioniades carmine pro: videri prolemque vetustas tamen . Iussit ubi cautes saepe. Pudetque quod. Esse praecipitem Threiciam deo patet cum piscem siquis ore Clytien nec accepta contentus pater, diuque opiferque ardesceret.","title":"Ambo in vulnera arbor"},{"location":"release-notes/#potitur-sit-solo-cytherea","text":"Adiuvet adspergine aures infamataeque condidit peti, iam corniger imagine relictis tamen. Iovisque erratica temeraria praecordiaque correptus congrediturque mollibus , iamque urnisque scilicet prosiliunt nitidi . Ignis quod inpia dignum: tria mora Bacche, liquefaciunt lumina. if (imageIm) { nasPassive += dviPadIntelligence + lteSla; metalControlTwitter = raidTtlBps; memory += signatureDesktopIpx; } else { e_software += dvdAdsl; } var serverInkjetText = responsiveDisplayAccess + soft_reader_radcab; var dhcp_rup = 2 + server_camera - mbps_acl_media + 5; if (smishing_lifo(bcc, impactArchitecture(card, token_samba, tft_lag_cpl), cplTextTweak(raid, matrix_bcc_real, googleCtr))) { digital(3); }","title":"Potitur sit solo Cytherea"},{"location":"release-notes/#caecis-ora","text":"Uberibus anguis loco quoque quam triumphos aequora, posset ait detinuit infamia dux: de sinus in Ascanii. Hominum quae fertilitatis amantem apris.","title":"Caecis ora"},{"location":"release-notes/#hos-urbem-locum-geminasque-doce-si-nomina","text":"Fitque validum incursu natarum coniugis comitum vincula bracchia faciemque mecum caelicolae inque me forte? Diu temptamenta fessa sincerumque herbas: vituli in suis inter motu unius. Certe qui haec vestigia; enim tardatus, per apta Solis tumuletur, sic diu quid: valles. Edax ut qua et carinae contemptor patulo ictus! Libratus et almus navigat. Aegro pressit a ultor lacrimis dextera bene est catenas dolosas non iaculum vobis per, rapit.","title":"Hos urbem locum geminasque doce si nomina"},{"location":"collections/","text":"My Collection Documentation MkDocs : My Wiki is made by using mkdocs. Awesome CV : You can write your CV using LaTeX format then product to PDF document. Technology Wi-Fi Filters In Wireshark And tcpdump : good instruction to show you around how to capture WiFi packets from Wireshark and tcpdump and how to filter it. Blog DEEPLYEMBEDDED Kitsprout (\u56db\u8ef8\u98db\u884c\u5668) Steward (Framebuffer) Cabinet.79 (I2C) \u7a0b\u5f0f\u4e82\u4e82\u5beb \u5927\u5bb6\u4e00\u8d77\u4f86\u73a9 Linux funBroad SoC veryarm IoT Bolt Iot Luma.OLED Project Farm Bot Hades simulation framework Online Tool Codebeautify DiffNow Online Book mooInk Ubuntu Basic Skill UI/UX AXURE Restful RESTful API Design \u6dfa\u8ac7RESTful API\u8a8d\u8b49 Token\u6a5f\u5236\u4f7f\u7528\u7d93\u9a57\u5206\u4eab Interview \u95dc\u65bc\u5c65\u6b77\u8868, \u6211\u60f3\u8aaa\u7684\u5176\u5be6\u662f... Powerbi Misc","title":"Collections"},{"location":"collections/#my-collection","text":"","title":"My Collection"},{"location":"collections/#documentation","text":"MkDocs : My Wiki is made by using mkdocs. Awesome CV : You can write your CV using LaTeX format then product to PDF document.","title":"Documentation"},{"location":"collections/#technology","text":"Wi-Fi Filters In Wireshark And tcpdump : good instruction to show you around how to capture WiFi packets from Wireshark and tcpdump and how to filter it.","title":"Technology"},{"location":"collections/#blog","text":"DEEPLYEMBEDDED Kitsprout (\u56db\u8ef8\u98db\u884c\u5668) Steward (Framebuffer) Cabinet.79 (I2C) \u7a0b\u5f0f\u4e82\u4e82\u5beb \u5927\u5bb6\u4e00\u8d77\u4f86\u73a9 Linux funBroad","title":"Blog"},{"location":"collections/#soc","text":"veryarm","title":"SoC"},{"location":"collections/#iot","text":"Bolt Iot Luma.OLED","title":"IoT"},{"location":"collections/#project","text":"Farm Bot Hades simulation framework","title":"Project"},{"location":"collections/#online-tool","text":"Codebeautify DiffNow","title":"Online Tool"},{"location":"collections/#online-book","text":"mooInk Ubuntu Basic Skill","title":"Online Book"},{"location":"collections/#uiux","text":"AXURE","title":"UI/UX"},{"location":"collections/#restful","text":"RESTful API Design \u6dfa\u8ac7RESTful API\u8a8d\u8b49 Token\u6a5f\u5236\u4f7f\u7528\u7d93\u9a57\u5206\u4eab","title":"Restful"},{"location":"collections/#interview","text":"\u95dc\u65bc\u5c65\u6b77\u8868, \u6211\u60f3\u8aaa\u7684\u5176\u5be6\u662f... Powerbi","title":"Interview"},{"location":"collections/#misc","text":"","title":"Misc"},{"location":"dev/accessories/","text":"Accessories for Firmware Development USB-to-RS232 console cable PL2303 Try to buy it from Taobao . It is not very expensive. FTDI chipsets It is expensive than PL2303. Wi-Fi Adaptor There are some Wi-Fi USB dongle which can capture wireless packets in Linux OS, but MTK chipsets may have problem to capture RTS packets. Clear syslog using dmesg -c then plug the dongle and run lsusb , dmesg and ifconfig to make sure this device is enabled in your machine. MTK 7601U chipset(2717:4106) $ sudo lsusb Bus 003 Device 025: ID 2717:4106 $ sudo dmesg [ 2548.559092] usb 3-1: new high-speed USB device number 26 using xhci_hcd [ 2548.718886] usb 3-1: New USB device found, idVendor=2717, idProduct=4106, bcdDevice= 0.00 [ 2548.718893] usb 3-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [ 2548.718896] usb 3-1: Product: MI WLAN Adapter [ 2548.718898] usb 3-1: Manufacturer: MediaTek [ 2548.718900] usb 3-1: SerialNumber: 1.0 [ 2548.847525] usb 3-1: reset high-speed USB device number 26 using xhci_hcd [ 2549.002214] mt7601u 3-1:1.0: ASIC revision: 76010001 MAC revision: 76010500 [ 2549.002965] mt7601u 3-1:1.0: firmware: direct-loading firmware mt7601u.bin [ 2549.002976] mt7601u 3-1:1.0: Firmware Version: 0.1.00 Build: 7640 Build time: 201302052146____ [ 2549.396105] mt7601u 3-1:1.0: EEPROM ver:0d fae:00 [ 2549.396357] mt7601u 3-1:1.0: EEPROM country region 01 (channels 1-13) [ 2549.603889] ieee80211 phy12: Selected rate control algorithm 'minstrel_ht' [ 2549.619008] mt7601u 3-1:1.0 wlx8c00001900aa: renamed from wlan0 $ sudo ifconfig wlx8c00001900aa: flags=4099<UP,BROADCAST,MULTICAST> mtu 1500 unspec 3A-A8-A0-8F-E9-47-30-3A-00-00-00-00-00-00-00-00 txqueuelen 1000 (UNSPEC) RX packets 9148 bytes 1749086 (1.6 MiB) RX errors 0 dropped 6499 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 MTK 7610 chipset(0e8d:7610) $ sudo lsusb Bus 003 Device 020: ID 0e8d:7610 MediaTek Inc. $ sudo dmesg [ 1563.661561] usb 3-1: new high-speed USB device number 20 using xhci_hcd [ 1563.825615] usb 3-1: New USB device found, idVendor=0e8d, idProduct=7610, bcdDevice= 1.00 [ 1563.825622] usb 3-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [ 1563.825625] usb 3-1: Product: WiFi [ 1563.825627] usb 3-1: Manufacturer: MediaTek [ 1563.825629] usb 3-1: SerialNumber: 1.0 [ 1563.954061] usb 3-1: reset high-speed USB device number 20 using xhci_hcd [ 1564.107474] mt76x0u 3-1:1.0: ASIC revision: 76100002 MAC revision: 76502000 [ 1564.109431] mt76x0u 3-1:1.0: firmware: direct-loading firmware mediatek/mt7610e.bin [ 1565.092770] mt76x0u 3-1:1.0: EEPROM ver:02 fae:04 [ 1565.113101] ieee80211 phy4: Selected rate control algorithm 'minstrel_ht' [ 1565.124601] mt76x0u 3-1:1.0 wlx001122340147: renamed from wlan0 $ sudo ifconfig wlx001122340147: flags=4099<UP,BROADCAST,MULTICAST> mtu 1500 ether f2:16:11:d2:7f:e3 txqueuelen 1000 (Ethernet) RX packets 0 bytes 0 (0.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 MTK 7612 chipset(0e8d:7612) Without SD function $ sudo lsusb Bus 004 Device 004: ID 0e8d:7612 MediaTek Inc. $ sudo dmesg [ 1386.531768] usb 4-1: new SuperSpeed Gen 1 USB device number 3 using xhci_hcd [ 1386.553264] usb 4-1: New USB device found, idVendor=0e8d, idProduct=7612, bcdDevice= 1.00 [ 1386.553271] usb 4-1: New USB device strings: Mfr=2, Product=3, SerialNumber=4 [ 1386.553274] usb 4-1: Product: Wireless [ 1386.553276] usb 4-1: Manufacturer: MediaTek Inc. [ 1386.553278] usb 4-1: SerialNumber: 000000000 [ 1386.684289] usb 4-1: reset SuperSpeed Gen 1 USB device number 3 using xhci_hcd [ 1386.705420] mt76x2u 4-1:1.0: ASIC revision: 76120044 [ 1386.728319] mt76x2u 4-1:1.0: firmware: direct-loading firmware mt7662_rom_patch.bin [ 1386.728329] mt76x2u 4-1:1.0: ROM patch build: 20141115060606a [ 1386.860075] mt76x2u 4-1:1.0: firmware: direct-loading firmware mt7662.bin [ 1386.860085] mt76x2u 4-1:1.0: Firmware Version: 0.0.00 [ 1386.860087] mt76x2u 4-1:1.0: Build: 1 [ 1386.860089] mt76x2u 4-1:1.0: Build Time: 201507311614____ [ 1387.590772] ieee80211 phy2: Selected rate control algorithm 'minstrel_ht' [ 1387.609803] mt76x2u 4-1:1.0 wlx008e86000266: renamed from wlan0 $ sudo ifconfig wlx008e86000266: flags=4099<UP,BROADCAST,MULTICAST> mtu 1500 ether 32:62:0a:a0:25:57 txqueuelen 1000 (Ethernet) RX packets 0 bytes 0 (0.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 With SD function (0e8d:2870) $ lsusb Bus 003 Device 021: ID 0e8d:2870 MediaTek Inc. $ sudo dmesg [ 1805.548111] usb 3-1: new high-speed USB device number 22 using xhci_hcd [ 1805.697239] usb 3-1: New USB device found, idVendor=0e8d, idProduct=2870, bcdDevice= 0.01 [ 1805.697246] usb 3-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [ 1805.697249] usb 3-1: Product: \u0409 [ 1805.697251] usb 3-1: Manufacturer: \u0409 [ 1805.697253] usb 3-1: SerialNumber: \u0409 [ 1805.698411] usb-storage 3-1:1.0: USB Mass Storage device detected [ 1805.699041] scsi host7: usb-storage 3-1:1.0 [ 1806.709016] scsi 7:0:0:0: CD-ROM MediaTek Flash autorun 0.01 PQ: 0 ANSI: 0 CCS [ 1806.710264] sr 7:0:0:0: [sr0] scsi3-mmc drive: 52x/52x cd/rw xa/form2 cdda tray [ 1806.732682] sr 7:0:0:0: Attached scsi CD-ROM sr0 [ 1806.732813] sr 7:0:0:0: Attached scsi generic sg2 type 5 $ sudo eject /dev/sr0 not an sg device, or old sg driver eject: unable to eject, last error: No such device $ sudo dmesg -c [ 2046.451311] usb 3-1: USB disconnect, device number 23 [ 2046.458221] scsi 7:0:0:0: rejecting I/O to dead device [ 2047.210411] usb 4-1: new SuperSpeed Gen 1 USB device number 7 using xhci_hcd [ 2047.231867] usb 4-1: New USB device found, idVendor=0e8d, idProduct=7612, bcdDevice= 1.00 [ 2047.231875] usb 4-1: New USB device strings: Mfr=2, Product=3, SerialNumber=4 [ 2047.231878] usb 4-1: Product: Wireless [ 2047.231880] usb 4-1: Manufacturer: MediaTek Inc. [ 2047.231882] usb 4-1: SerialNumber: 000000000 [ 2047.362927] usb 4-1: reset SuperSpeed Gen 1 USB device number 7 using xhci_hcd [ 2047.384075] mt76x2u 4-1:1.0: ASIC revision: 76120044 [ 2047.407061] mt76x2u 4-1:1.0: firmware: direct-loading firmware mt7662_rom_patch.bin [ 2047.407071] mt76x2u 4-1:1.0: ROM patch build: 20141115060606a [ 2047.538679] mt76x2u 4-1:1.0: firmware: direct-loading firmware mt7662.bin [ 2047.538688] mt76x2u 4-1:1.0: Firmware Version: 0.0.00 [ 2047.538690] mt76x2u 4-1:1.0: Build: 1 [ 2047.538693] mt76x2u 4-1:1.0: Build Time: 201507311614____ [ 2048.269551] ieee80211 phy8: Selected rate control algorithm 'minstrel_ht' [ 2048.283783] mt76x2u 4-1:1.0 wlx0013ef5f0f65: renamed from wlan0 $ sudo lsusb Bus 004 Device 009: ID 0e8d:7612 MediaTek Inc. $ sudo ifconfig wlx0013ef5f0f65: flags=4099<UP,BROADCAST,MULTICAST> mtu 1500 ether 1a:71:52:85:55:49 txqueuelen 1000 (Ethernet) RX packets 0 bytes 0 (0.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 Ralink RT5372 chipset (2001:3c20) D-Link DWA-140 rev D1 (rt2800usb) $ dmesg [ 7355.421533] usb 2-2: new high-speed USB device number 11 using xhci_hcd [ 7355.586303] usb 2-2: New USB device found, idVendor=2001, idProduct=3c20, bcdDevice= 1.01 [ 7355.586309] usb 2-2: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [ 7355.586313] usb 2-2: Product: 802.11 n WLAN [ 7355.586315] usb 2-2: Manufacturer: Ralink [ 7355.586317] usb 2-2: SerialNumber: 1.0 [ 7355.713930] usb 2-2: reset high-speed USB device number 11 using xhci_hcd [ 7355.871253] ieee80211 phy8: rt2x00_set_rt: Info - RT chipset 5392, rev 0222 detected [ 7355.884821] ieee80211 phy8: rt2x00_set_rf: Info - RF chipset 5372 detected [ 7355.884997] ieee80211 phy8: Selected rate control algorithm 'minstrel_ht' [ 7355.899487] rt2800usb 2-2:1.0 wlxd8fee3d7ae29: renamed from wlan0 [ 7355.919436] ieee80211 phy8: rt2x00lib_request_firmware: Info - Loading firmware file 'rt2870.bin' [ 7355.919471] rt2800usb 2-2:1.0: firmware: direct-loading firmware rt2870.bin [ 7355.919475] ieee80211 phy8: rt2x00lib_request_firmware: Info - Firmware detected - version: 0.36 $ sudo ifconfig wlxd8fee3d7ae29: flags=4099<UP,BROADCAST,MULTICAST> mtu 1500 ether 96:4f:c3:ae:3b:c2 txqueuelen 1000 (Ethernet) RX packets 0 bytes 0 (0.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 Bluetooth Adaptor Install BLE tools $ sudo apt-get update $ sudo apt-get install bluetooth bluez bluez-hcidump CP2102/CP2109 UART Bridge(10c4:ea60) $ lsusb Bus 003 Device 027: ID 10c4:ea60 Cygnal Integrated Products, Inc. CP2102/CP2109 UART Bridge Controller [CP210x family] $ dmesg [ 3743.253835] usb 3-1: new full-speed USB device number 28 using xhci_hcd [ 3743.433358] usb 3-1: New USB device found, idVendor=10c4, idProduct=ea60, bcdDevice= 1.00 [ 3743.433364] usb 3-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [ 3743.433367] usb 3-1: Product: CP2102 USB to UART Bridge Controller [ 3743.433370] usb 3-1: Manufacturer: Silicon Labs [ 3743.433372] usb 3-1: SerialNumber: 0001 [ 3743.442472] cp210x 3-1:1.0: cp210x converter detected [ 3743.444720] usb 3-1: cp210x converter now attached to ttyUSB0 Cambridge Bluetooth Dongle(0a12:0001) $ lsusb Bus 003 Device 034: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode) $ dmesg -c [ 3849.277478] usb 3-1: new full-speed USB device number 33 using xhci_hcd [ 3849.405514] usb 3-1: device descriptor read/64, error -71 [ 3849.641504] usb 3-1: device descriptor read/64, error -71 [ 3849.877474] usb 3-1: new full-speed USB device number 34 using xhci_hcd [ 3850.081071] usb 3-1: New USB device found, idVendor=0a12, idProduct=0001, bcdDevice=88.91 [ 3850.081077] usb 3-1: New USB device strings: Mfr=0, Product=0, SerialNumber=0 [ 3850.083788] Bluetooth: hci1: unexpected event for opcode 0x0000 $ sudo hcitool dev Devices: hci1 00:1A:7D:DA:71:15 hci0 68:94:23:EB:7A:63","title":"Accessories"},{"location":"dev/accessories/#accessories-for-firmware-development","text":"","title":"Accessories for Firmware Development"},{"location":"dev/accessories/#usb-to-rs232-console-cable","text":"","title":"USB-to-RS232 console cable"},{"location":"dev/accessories/#pl2303","text":"Try to buy it from Taobao . It is not very expensive.","title":"PL2303"},{"location":"dev/accessories/#ftdi-chipsets","text":"It is expensive than PL2303.","title":"FTDI chipsets"},{"location":"dev/accessories/#wi-fi-adaptor","text":"There are some Wi-Fi USB dongle which can capture wireless packets in Linux OS, but MTK chipsets may have problem to capture RTS packets. Clear syslog using dmesg -c then plug the dongle and run lsusb , dmesg and ifconfig to make sure this device is enabled in your machine.","title":"Wi-Fi Adaptor"},{"location":"dev/accessories/#mtk-7601u-chipset27174106","text":"$ sudo lsusb Bus 003 Device 025: ID 2717:4106 $ sudo dmesg [ 2548.559092] usb 3-1: new high-speed USB device number 26 using xhci_hcd [ 2548.718886] usb 3-1: New USB device found, idVendor=2717, idProduct=4106, bcdDevice= 0.00 [ 2548.718893] usb 3-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [ 2548.718896] usb 3-1: Product: MI WLAN Adapter [ 2548.718898] usb 3-1: Manufacturer: MediaTek [ 2548.718900] usb 3-1: SerialNumber: 1.0 [ 2548.847525] usb 3-1: reset high-speed USB device number 26 using xhci_hcd [ 2549.002214] mt7601u 3-1:1.0: ASIC revision: 76010001 MAC revision: 76010500 [ 2549.002965] mt7601u 3-1:1.0: firmware: direct-loading firmware mt7601u.bin [ 2549.002976] mt7601u 3-1:1.0: Firmware Version: 0.1.00 Build: 7640 Build time: 201302052146____ [ 2549.396105] mt7601u 3-1:1.0: EEPROM ver:0d fae:00 [ 2549.396357] mt7601u 3-1:1.0: EEPROM country region 01 (channels 1-13) [ 2549.603889] ieee80211 phy12: Selected rate control algorithm 'minstrel_ht' [ 2549.619008] mt7601u 3-1:1.0 wlx8c00001900aa: renamed from wlan0 $ sudo ifconfig wlx8c00001900aa: flags=4099<UP,BROADCAST,MULTICAST> mtu 1500 unspec 3A-A8-A0-8F-E9-47-30-3A-00-00-00-00-00-00-00-00 txqueuelen 1000 (UNSPEC) RX packets 9148 bytes 1749086 (1.6 MiB) RX errors 0 dropped 6499 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0","title":"MTK 7601U chipset(2717:4106)"},{"location":"dev/accessories/#mtk-7610-chipset0e8d7610","text":"$ sudo lsusb Bus 003 Device 020: ID 0e8d:7610 MediaTek Inc. $ sudo dmesg [ 1563.661561] usb 3-1: new high-speed USB device number 20 using xhci_hcd [ 1563.825615] usb 3-1: New USB device found, idVendor=0e8d, idProduct=7610, bcdDevice= 1.00 [ 1563.825622] usb 3-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [ 1563.825625] usb 3-1: Product: WiFi [ 1563.825627] usb 3-1: Manufacturer: MediaTek [ 1563.825629] usb 3-1: SerialNumber: 1.0 [ 1563.954061] usb 3-1: reset high-speed USB device number 20 using xhci_hcd [ 1564.107474] mt76x0u 3-1:1.0: ASIC revision: 76100002 MAC revision: 76502000 [ 1564.109431] mt76x0u 3-1:1.0: firmware: direct-loading firmware mediatek/mt7610e.bin [ 1565.092770] mt76x0u 3-1:1.0: EEPROM ver:02 fae:04 [ 1565.113101] ieee80211 phy4: Selected rate control algorithm 'minstrel_ht' [ 1565.124601] mt76x0u 3-1:1.0 wlx001122340147: renamed from wlan0 $ sudo ifconfig wlx001122340147: flags=4099<UP,BROADCAST,MULTICAST> mtu 1500 ether f2:16:11:d2:7f:e3 txqueuelen 1000 (Ethernet) RX packets 0 bytes 0 (0.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0","title":"MTK 7610 chipset(0e8d:7610)"},{"location":"dev/accessories/#mtk-7612-chipset0e8d7612","text":"","title":"MTK 7612 chipset(0e8d:7612)"},{"location":"dev/accessories/#without-sd-function","text":"$ sudo lsusb Bus 004 Device 004: ID 0e8d:7612 MediaTek Inc. $ sudo dmesg [ 1386.531768] usb 4-1: new SuperSpeed Gen 1 USB device number 3 using xhci_hcd [ 1386.553264] usb 4-1: New USB device found, idVendor=0e8d, idProduct=7612, bcdDevice= 1.00 [ 1386.553271] usb 4-1: New USB device strings: Mfr=2, Product=3, SerialNumber=4 [ 1386.553274] usb 4-1: Product: Wireless [ 1386.553276] usb 4-1: Manufacturer: MediaTek Inc. [ 1386.553278] usb 4-1: SerialNumber: 000000000 [ 1386.684289] usb 4-1: reset SuperSpeed Gen 1 USB device number 3 using xhci_hcd [ 1386.705420] mt76x2u 4-1:1.0: ASIC revision: 76120044 [ 1386.728319] mt76x2u 4-1:1.0: firmware: direct-loading firmware mt7662_rom_patch.bin [ 1386.728329] mt76x2u 4-1:1.0: ROM patch build: 20141115060606a [ 1386.860075] mt76x2u 4-1:1.0: firmware: direct-loading firmware mt7662.bin [ 1386.860085] mt76x2u 4-1:1.0: Firmware Version: 0.0.00 [ 1386.860087] mt76x2u 4-1:1.0: Build: 1 [ 1386.860089] mt76x2u 4-1:1.0: Build Time: 201507311614____ [ 1387.590772] ieee80211 phy2: Selected rate control algorithm 'minstrel_ht' [ 1387.609803] mt76x2u 4-1:1.0 wlx008e86000266: renamed from wlan0 $ sudo ifconfig wlx008e86000266: flags=4099<UP,BROADCAST,MULTICAST> mtu 1500 ether 32:62:0a:a0:25:57 txqueuelen 1000 (Ethernet) RX packets 0 bytes 0 (0.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0","title":"Without SD function"},{"location":"dev/accessories/#with-sd-function-0e8d2870","text":"$ lsusb Bus 003 Device 021: ID 0e8d:2870 MediaTek Inc. $ sudo dmesg [ 1805.548111] usb 3-1: new high-speed USB device number 22 using xhci_hcd [ 1805.697239] usb 3-1: New USB device found, idVendor=0e8d, idProduct=2870, bcdDevice= 0.01 [ 1805.697246] usb 3-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [ 1805.697249] usb 3-1: Product: \u0409 [ 1805.697251] usb 3-1: Manufacturer: \u0409 [ 1805.697253] usb 3-1: SerialNumber: \u0409 [ 1805.698411] usb-storage 3-1:1.0: USB Mass Storage device detected [ 1805.699041] scsi host7: usb-storage 3-1:1.0 [ 1806.709016] scsi 7:0:0:0: CD-ROM MediaTek Flash autorun 0.01 PQ: 0 ANSI: 0 CCS [ 1806.710264] sr 7:0:0:0: [sr0] scsi3-mmc drive: 52x/52x cd/rw xa/form2 cdda tray [ 1806.732682] sr 7:0:0:0: Attached scsi CD-ROM sr0 [ 1806.732813] sr 7:0:0:0: Attached scsi generic sg2 type 5 $ sudo eject /dev/sr0 not an sg device, or old sg driver eject: unable to eject, last error: No such device $ sudo dmesg -c [ 2046.451311] usb 3-1: USB disconnect, device number 23 [ 2046.458221] scsi 7:0:0:0: rejecting I/O to dead device [ 2047.210411] usb 4-1: new SuperSpeed Gen 1 USB device number 7 using xhci_hcd [ 2047.231867] usb 4-1: New USB device found, idVendor=0e8d, idProduct=7612, bcdDevice= 1.00 [ 2047.231875] usb 4-1: New USB device strings: Mfr=2, Product=3, SerialNumber=4 [ 2047.231878] usb 4-1: Product: Wireless [ 2047.231880] usb 4-1: Manufacturer: MediaTek Inc. [ 2047.231882] usb 4-1: SerialNumber: 000000000 [ 2047.362927] usb 4-1: reset SuperSpeed Gen 1 USB device number 7 using xhci_hcd [ 2047.384075] mt76x2u 4-1:1.0: ASIC revision: 76120044 [ 2047.407061] mt76x2u 4-1:1.0: firmware: direct-loading firmware mt7662_rom_patch.bin [ 2047.407071] mt76x2u 4-1:1.0: ROM patch build: 20141115060606a [ 2047.538679] mt76x2u 4-1:1.0: firmware: direct-loading firmware mt7662.bin [ 2047.538688] mt76x2u 4-1:1.0: Firmware Version: 0.0.00 [ 2047.538690] mt76x2u 4-1:1.0: Build: 1 [ 2047.538693] mt76x2u 4-1:1.0: Build Time: 201507311614____ [ 2048.269551] ieee80211 phy8: Selected rate control algorithm 'minstrel_ht' [ 2048.283783] mt76x2u 4-1:1.0 wlx0013ef5f0f65: renamed from wlan0 $ sudo lsusb Bus 004 Device 009: ID 0e8d:7612 MediaTek Inc. $ sudo ifconfig wlx0013ef5f0f65: flags=4099<UP,BROADCAST,MULTICAST> mtu 1500 ether 1a:71:52:85:55:49 txqueuelen 1000 (Ethernet) RX packets 0 bytes 0 (0.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0","title":"With SD function (0e8d:2870)"},{"location":"dev/accessories/#ralink-rt5372-chipset-20013c20","text":"D-Link DWA-140 rev D1 (rt2800usb) $ dmesg [ 7355.421533] usb 2-2: new high-speed USB device number 11 using xhci_hcd [ 7355.586303] usb 2-2: New USB device found, idVendor=2001, idProduct=3c20, bcdDevice= 1.01 [ 7355.586309] usb 2-2: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [ 7355.586313] usb 2-2: Product: 802.11 n WLAN [ 7355.586315] usb 2-2: Manufacturer: Ralink [ 7355.586317] usb 2-2: SerialNumber: 1.0 [ 7355.713930] usb 2-2: reset high-speed USB device number 11 using xhci_hcd [ 7355.871253] ieee80211 phy8: rt2x00_set_rt: Info - RT chipset 5392, rev 0222 detected [ 7355.884821] ieee80211 phy8: rt2x00_set_rf: Info - RF chipset 5372 detected [ 7355.884997] ieee80211 phy8: Selected rate control algorithm 'minstrel_ht' [ 7355.899487] rt2800usb 2-2:1.0 wlxd8fee3d7ae29: renamed from wlan0 [ 7355.919436] ieee80211 phy8: rt2x00lib_request_firmware: Info - Loading firmware file 'rt2870.bin' [ 7355.919471] rt2800usb 2-2:1.0: firmware: direct-loading firmware rt2870.bin [ 7355.919475] ieee80211 phy8: rt2x00lib_request_firmware: Info - Firmware detected - version: 0.36 $ sudo ifconfig wlxd8fee3d7ae29: flags=4099<UP,BROADCAST,MULTICAST> mtu 1500 ether 96:4f:c3:ae:3b:c2 txqueuelen 1000 (Ethernet) RX packets 0 bytes 0 (0.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0","title":"Ralink RT5372 chipset (2001:3c20)"},{"location":"dev/accessories/#bluetooth-adaptor","text":"Install BLE tools $ sudo apt-get update $ sudo apt-get install bluetooth bluez bluez-hcidump","title":"Bluetooth Adaptor"},{"location":"dev/accessories/#cp2102cp2109-uart-bridge10c4ea60","text":"$ lsusb Bus 003 Device 027: ID 10c4:ea60 Cygnal Integrated Products, Inc. CP2102/CP2109 UART Bridge Controller [CP210x family] $ dmesg [ 3743.253835] usb 3-1: new full-speed USB device number 28 using xhci_hcd [ 3743.433358] usb 3-1: New USB device found, idVendor=10c4, idProduct=ea60, bcdDevice= 1.00 [ 3743.433364] usb 3-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3 [ 3743.433367] usb 3-1: Product: CP2102 USB to UART Bridge Controller [ 3743.433370] usb 3-1: Manufacturer: Silicon Labs [ 3743.433372] usb 3-1: SerialNumber: 0001 [ 3743.442472] cp210x 3-1:1.0: cp210x converter detected [ 3743.444720] usb 3-1: cp210x converter now attached to ttyUSB0","title":"CP2102/CP2109 UART Bridge(10c4:ea60)"},{"location":"dev/accessories/#cambridge-bluetooth-dongle0a120001","text":"$ lsusb Bus 003 Device 034: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode) $ dmesg -c [ 3849.277478] usb 3-1: new full-speed USB device number 33 using xhci_hcd [ 3849.405514] usb 3-1: device descriptor read/64, error -71 [ 3849.641504] usb 3-1: device descriptor read/64, error -71 [ 3849.877474] usb 3-1: new full-speed USB device number 34 using xhci_hcd [ 3850.081071] usb 3-1: New USB device found, idVendor=0a12, idProduct=0001, bcdDevice=88.91 [ 3850.081077] usb 3-1: New USB device strings: Mfr=0, Product=0, SerialNumber=0 [ 3850.083788] Bluetooth: hci1: unexpected event for opcode 0x0000 $ sudo hcitool dev Devices: hci1 00:1A:7D:DA:71:15 hci0 68:94:23:EB:7A:63","title":"Cambridge Bluetooth Dongle(0a12:0001)"},{"location":"dev/auto/","text":"Automation and Crawler Automation Telnet The sample code shows how to login Router and execute ls command. import time import telnetlib import struct from telnetlib import DO , DONT , IAC , WILL , WONT , NAWS , SB , SE MAX_WINDOW_WIDTH = 65000 # Max Value: 65535 MAX_WINDOW_HEIGHT = 5000 def set_max_window_size ( tsocket , command , option ): \"\"\" Set Window size to resolve line width issue Set Windows size command: IAC SB NAWS <16-bit value> <16-bit value> IAC SE --> inform the Telnet server of the window width and height. Refer to https://www.ietf.org/rfc/rfc1073.txt :param tsocket: telnet socket object :param command: telnet Command :param option: telnet option :return: None \"\"\" if option == NAWS : print ( \">>>>>>>>>>>>>>>>>> NAWS\" ) width = struct . pack ( 'H' , MAX_WINDOW_WIDTH ) height = struct . pack ( 'H' , MAX_WINDOW_HEIGHT ) tsocket . send ( IAC + WILL + NAWS ) tsocket . send ( IAC + SB + NAWS + width + height + IAC + SE ) # -- below code taken from telnetlib source elif command in ( DO , DONT ): print ( \">>>>>>>>>>>>>>>>>> WONT\" ) tsocket . send ( IAC + WONT + option ) elif command in ( WILL , WONT ): print ( \">>>>>>>>>>>>>>>>>> DONT\" ) tsocket . send ( IAC + DONT + option ) host = \"192.168.2.1\" user = \"root\" passwd = \"11111111\" def set_max_window_size ( tsocket , command , option ): \"\"\" Set Window size to resolve line width issue Set Windows size command: IAC SB NAWS <16-bit value> <16-bit value> IAC SE --> inform the Telnet server of the window width and height. Refer to https://www.ietf.org/rfc/rfc1073.txt :param tsocket: telnet socket object :param command: telnet Command :param option: telnet option :return: None \"\"\" if option == NAWS : print ( \">>>>>>>>>>>>>>>>>> NAWS\" ) width = struct . pack ( 'H' , MAX_WINDOW_WIDTH ) height = struct . pack ( 'H' , MAX_WINDOW_HEIGHT ) tsocket . send ( IAC + WILL + NAWS ) tsocket . send ( IAC + SB + NAWS + width + height + IAC + SE ) # -- below code taken from telnetlib source elif command in ( DO , DONT ): print ( \">>>>>>>>>>>>>>>>>> WONT\" ) tsocket . send ( IAC + WONT + option ) elif command in ( WILL , WONT ): print ( \">>>>>>>>>>>>>>>>>> DONT\" ) tsocket . send ( IAC + DONT + option ) host = \"192.168.2.1\" user = \"root\" passwd = \"1111qqqq@Wrsdd2019\" command_arr = [ \"ls -ls\" , \"exit\" ] tn = telnetlib . Telnet ( host , 23 , 5 ) tn . set_debuglevel ( 2 ) tsocket = tn . get_socket () tn . set_option_negotiation_callback ( set_max_window_size ) tn . read_until ( \"login:\" ) tn . write ( user + \" \\n \" ) tn . read_until ( \"Password: \" ) tn . write ( passwd + \" \\n \" ) for command in command_arr : tn . write ( command + \" \\n \" ) print ( tn . read_all ()) tn . close () SSH The sample code shows how to login Server and execute ls command. #!/usr/bin/env python3 import paramiko username = \"ed\" password = \"11111111\" hostname = \"127.0.0.1\" port = 22 try : client = paramiko . SSHClient () client . set_missing_host_key_policy ( paramiko . AutoAddPolicy ()) client . connect ( hostname , port , username , password ) t = client . get_transport () sftp = paramiko . SFTPClient . from_transport ( t ) stdin , stdout , stderr = client . exec_command ( 'ls -al' ) result = stdout . readlines () print ( result ) except Exception : print ( 'Exception!!' ) raise ~ TBD ~","title":"Automation and Crawler"},{"location":"dev/auto/#automation-and-crawler","text":"","title":"Automation and Crawler"},{"location":"dev/auto/#automation","text":"","title":"Automation"},{"location":"dev/auto/#telnet","text":"The sample code shows how to login Router and execute ls command. import time import telnetlib import struct from telnetlib import DO , DONT , IAC , WILL , WONT , NAWS , SB , SE MAX_WINDOW_WIDTH = 65000 # Max Value: 65535 MAX_WINDOW_HEIGHT = 5000 def set_max_window_size ( tsocket , command , option ): \"\"\" Set Window size to resolve line width issue Set Windows size command: IAC SB NAWS <16-bit value> <16-bit value> IAC SE --> inform the Telnet server of the window width and height. Refer to https://www.ietf.org/rfc/rfc1073.txt :param tsocket: telnet socket object :param command: telnet Command :param option: telnet option :return: None \"\"\" if option == NAWS : print ( \">>>>>>>>>>>>>>>>>> NAWS\" ) width = struct . pack ( 'H' , MAX_WINDOW_WIDTH ) height = struct . pack ( 'H' , MAX_WINDOW_HEIGHT ) tsocket . send ( IAC + WILL + NAWS ) tsocket . send ( IAC + SB + NAWS + width + height + IAC + SE ) # -- below code taken from telnetlib source elif command in ( DO , DONT ): print ( \">>>>>>>>>>>>>>>>>> WONT\" ) tsocket . send ( IAC + WONT + option ) elif command in ( WILL , WONT ): print ( \">>>>>>>>>>>>>>>>>> DONT\" ) tsocket . send ( IAC + DONT + option ) host = \"192.168.2.1\" user = \"root\" passwd = \"11111111\" def set_max_window_size ( tsocket , command , option ): \"\"\" Set Window size to resolve line width issue Set Windows size command: IAC SB NAWS <16-bit value> <16-bit value> IAC SE --> inform the Telnet server of the window width and height. Refer to https://www.ietf.org/rfc/rfc1073.txt :param tsocket: telnet socket object :param command: telnet Command :param option: telnet option :return: None \"\"\" if option == NAWS : print ( \">>>>>>>>>>>>>>>>>> NAWS\" ) width = struct . pack ( 'H' , MAX_WINDOW_WIDTH ) height = struct . pack ( 'H' , MAX_WINDOW_HEIGHT ) tsocket . send ( IAC + WILL + NAWS ) tsocket . send ( IAC + SB + NAWS + width + height + IAC + SE ) # -- below code taken from telnetlib source elif command in ( DO , DONT ): print ( \">>>>>>>>>>>>>>>>>> WONT\" ) tsocket . send ( IAC + WONT + option ) elif command in ( WILL , WONT ): print ( \">>>>>>>>>>>>>>>>>> DONT\" ) tsocket . send ( IAC + DONT + option ) host = \"192.168.2.1\" user = \"root\" passwd = \"1111qqqq@Wrsdd2019\" command_arr = [ \"ls -ls\" , \"exit\" ] tn = telnetlib . Telnet ( host , 23 , 5 ) tn . set_debuglevel ( 2 ) tsocket = tn . get_socket () tn . set_option_negotiation_callback ( set_max_window_size ) tn . read_until ( \"login:\" ) tn . write ( user + \" \\n \" ) tn . read_until ( \"Password: \" ) tn . write ( passwd + \" \\n \" ) for command in command_arr : tn . write ( command + \" \\n \" ) print ( tn . read_all ()) tn . close ()","title":"Telnet"},{"location":"dev/auto/#ssh","text":"The sample code shows how to login Server and execute ls command. #!/usr/bin/env python3 import paramiko username = \"ed\" password = \"11111111\" hostname = \"127.0.0.1\" port = 22 try : client = paramiko . SSHClient () client . set_missing_host_key_policy ( paramiko . AutoAddPolicy ()) client . connect ( hostname , port , username , password ) t = client . get_transport () sftp = paramiko . SFTPClient . from_transport ( t ) stdin , stdout , stderr = client . exec_command ( 'ls -al' ) result = stdout . readlines () print ( result ) except Exception : print ( 'Exception!!' ) raise ~ TBD ~","title":"SSH"},{"location":"dev/bss/","text":"Software Defined Radio and R&S CMW500 ~~ TBD ~~","title":"Software Defined Radio and R&S CMW500"},{"location":"dev/bss/#software-defined-radio-and-rs-cmw500","text":"~~ TBD ~~","title":"Software Defined Radio and R&amp;S CMW500"},{"location":"dev/diag/","text":"Diagnostic Tools Wireshare Download Ubuntu 20.10 from Ubuntu Website . Check the current Linux Kernel version, it's 5.8.x now. $ uname -a Linux ed-ThinkPad-X230 5.8.0-59-generic #66-Ubuntu SMP Thu Jun 17 00:46:01 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux Install Wireshark and so on. $ sudo rm -rf /bin/sh && sudo ln -s /bin/bash /bin/sh $ sudo apt-get update && sudo apt-get upgrade $ sudo apt-get install openssh-server vim net-tools wireshark $ sudo apt-get install -y build-essential libncurses-dev bison flex libssl-dev libelf-dev $ sudo apt-get install -y git fakeroot ncurses-dev xz-utils bc libtool $ sudo apt-get install -y software-properties-common rsync $ sudo apt-get install -y libncurses5-dev gcc grub2 wget dwarves tree curl Check Wi-Fi channel and so on Plug Wi-Fi dongle and confirm its interface name. The PID/VID is 0e8d:7612 . and the interface name is wlx008e86000266 in my case. $ lsusb Bus 002 Device 003: ID 0e8d:7612 MediaTek Inc. $ sudo ifconfig wlx008e86000266: flags=4099<UP,BROADCAST,MULTICAST> mtu 1500 ether 1e:a4:80:77:09:f3 txqueuelen 1000 (Ethernet) RX packets 0 bytes 0 (0.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 Install aircrack-ng and run airodump-ng to check Wi-Fi channel. Better to use aircrack-ng 1.6 to support WPA3-SAE. $ git clone https://github.com/aircrack-ng/aircrack-ng.git $ cd aircrack-ng $ ./autogen.sh $ ./configure $ make $ sudo make install $ sudo ldconfig Run airodump-ng $ sudo airodump-ng wlx008e86000266 CH 8 ][ Elapsed: 12 s ][ 2021-07-05 19:24 ][ Are you sure you want to quit? Press Q again to quit. BSSID PWR Beacons #Data, #/s CH MB ENC CIPHER AUTH ESSID C4:E9:0A:6F:A5:1A -20 12 0 0 13 270 WPA2 CCMP PSK AP1 BSSID STATION PWR Rate Lost Frames Notes Probes C4:E9:0A:2F:03:A2 40:31:3C:D1:BD:C9 -41 0 - 6 0 1 as a result, SSID AP1 works on Channel 13 . Enable Monitor Mode Enable Monitor Mode, use below script then press ./set_mon.sh wlx008e86000266 13 set_mon.sh # !/bin/sh if [ $# -lt 2 ]; then echo \"Usage: $0 [DEV_NAME] [CHANNEL]\" exit 1 fi dev=$1 ch=$2 sudo ifconfig ${dev} down sudo iwconfig ${dev} mode monitor sudo ifconfig ${dev} up sudo iwconfig ${dev} channel ${ch} Run Wireshark Run Wireshark Select Menu/View/Wireless Toolbar Set Filter to display beacon Frame. there is a sample filter if you would like to capture. Filter: MAC address: C4:E9:0A:6F:A5:1A, Association Req/Rep Reassociation Req/Rep Probe Req/Rep Beacon ((wlan.fc.type_subtype <= 0x0008)), Four way handshark (wlan.fc.type == 0x0002). you need to put below combination to the Filter rule. wlan.addr[4:2] == A5:1A and (wlan.fc.type_subtype < 0x0005 || wlan.fc.type == 0x0002) Vendor Specific IEEE 802.11 Information Element run ./set_ie.sh \"000a00\" \"01234567\" to add new MTK IE element to RTL AP. set_ie.sh # !/bin/sh if [ $# -lt 1 ]; then echo \"Usage: $0 [OUI] [CONTENT]\" exit 1 fi oui=$1 content=$2 echo \"set IE\" echo \" - OUI: $oui\" echo \" - CONTENT: $content\" iwpriv wlan1 setCIE ${oui},${content} echo \"Set WLAN IE done\" There is what we saw from Wireshark (Click Packet \u2192 Copy \u2192 All Visible Selected Tree Items ) Tag: Vendor Specific: Mediatek Corp. Tag Number: Vendor Specific (221) Tag length: 10 OUI: 00:0a:00 (Mediatek Corp.) Vendor Specific OUI Type: 48 Vendor Specific Data: 30313233343536 Reference Books Wireshark & Ethereal Network Protocol Analyzer Toolkit/CH6-Wireless Sniffing with Wireshark Network Analysis Using Wireshark Cookbook tshark Install $ sudo apt-get install tshark Command to capture Beacon frame $ sudo tshark -i wlx008e86000266 -f \"type mgt subtype beacon\" tcpdump Install tcpdump $ sudo apt-get install tcpdump VLAN packets VLAN belongs to layer2, use below command to dump VLAN packets -e : Prints the link-level header on each dump line. -n : Blocks converting the host addresses, and the port numbers to names. -X : Prints each packet (minus its link level header) in hexadecimal and ASCII. This is very handy for analyzing new protocols. $ sudo tcpdump -i enp0s25 -en -XX PPPoE packets 0x8863 : PPPoE Discovery Stage 0x8864 : PPPoE Session Stage $ sudo tcpdump -i enp0s25 -en -XX ether [ 0x0c:2 ]== 0x8863 or ether [ 0x0c:2 ]== 0x8864 Qualcomm QxDM ~~ TBD ~~ MTK Catcher ~~ TBD ~~ Appendix Wireless Display Filter Reference Wireshark Most Common 802.11 Filters v1.1 Frame Name Field Name Management frame wlan.fc.type == 0 Control frame wlan.fc.type == 1 Data frame wlan.fc.type == 2 Association request wlan.fc.type_subtype == 0x00 Association response wlan.fc.type_subtype == 0x01 Reassociation request wlan.fc.type_subtype == 0x02 Reassociation response wlan.fc.type_subtype == 0x03 Probe request wlan.fc.type_subtype == 0x04 Probe response wlan.fc.type_subtype == 0x05 Beacon wlan.fc.type_subtype == 0x08 Disassociate wlan.fc.type_subtype == 0x0A Authentication wlan.fc.type_subtype == 0x0B Deauthentication wlan.fc.type_subtype == 0x0C Action frame wlan.fc.type_subtype == 0x0D Block ACK requests wlan.fc.type_subtype == 0x18 Block ACK wlan.fc.type_subtype == 0x19 Power save poll wlan.fc.type_subtype == 0x1A Request to send wlan.fc.type_subtype == 0x1B Clear to send wlan.fc.type_subtype == 0x1C ACK wlan.fc.type_subtype == 0x1D Contention free period end wlan.fc.type_subtype == 0x1E NULL data wlan.fc.type_subtype == 0x24 QoS data wlan.fc.type_subtype == 0x28 Null QoS data wlan.fc.type_subtype == 0x2C Promiscuous Mode Enable Promiscuous Mode $ sudo ifconfig enp0s25 promisc $ sudo ifconfig enp0s25 enp0s25: flags=4419<UP,BROADCAST,RUNNING,PROMISC,MULTICAST> mtu 1500 # < = PROMISC inet 192.168.2.242 netmask 255.255.255.0 broadcast 192.168.2.255 inet6 fe80::74fa:d87f:c697:6bff prefixlen 64 scopeid 0x20<link> ether 3c:97:0e:51:72:df txqueuelen 1000 (Ethernet) RX packets 309505 bytes 241920726 (230.7 MiB) RX errors 0 dropped 1 overruns 0 frame 0 TX packets 279294 bytes 36722749 (35.0 MiB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 264 device interrupt 20 memory 0xf2600000-f2620000 Disable Promiscuous Mode $ sudo ifconfig enp0s25 -promisc $ sudo ifconfig enp0s25 enp0s25: flags=4163<UP,BROADCAST,RUNNING,MULTICAST> mtu 1500 inet 192.168.2.242 netmask 255.255.255.0 broadcast 192.168.2.255 inet6 fe80::74fa:d87f:c697:6bff prefixlen 64 scopeid 0x20<link> ether 3c:97:0e:51:72:df txqueuelen 1000 (Ethernet) RX packets 309890 bytes 241950545 (230.7 MiB) RX errors 0 dropped 1 overruns 0 frame 0 TX packets 279816 bytes 36788444 (35.0 MiB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 266 device interrupt 20 memory 0xf2600000-f2620000","title":"Diagnostic Tools"},{"location":"dev/diag/#diagnostic-tools","text":"","title":"Diagnostic Tools"},{"location":"dev/diag/#wireshare","text":"Download Ubuntu 20.10 from Ubuntu Website . Check the current Linux Kernel version, it's 5.8.x now. $ uname -a Linux ed-ThinkPad-X230 5.8.0-59-generic #66-Ubuntu SMP Thu Jun 17 00:46:01 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux Install Wireshark and so on. $ sudo rm -rf /bin/sh && sudo ln -s /bin/bash /bin/sh $ sudo apt-get update && sudo apt-get upgrade $ sudo apt-get install openssh-server vim net-tools wireshark $ sudo apt-get install -y build-essential libncurses-dev bison flex libssl-dev libelf-dev $ sudo apt-get install -y git fakeroot ncurses-dev xz-utils bc libtool $ sudo apt-get install -y software-properties-common rsync $ sudo apt-get install -y libncurses5-dev gcc grub2 wget dwarves tree curl","title":"Wireshare"},{"location":"dev/diag/#check-wi-fi-channel-and-so-on","text":"Plug Wi-Fi dongle and confirm its interface name. The PID/VID is 0e8d:7612 . and the interface name is wlx008e86000266 in my case. $ lsusb Bus 002 Device 003: ID 0e8d:7612 MediaTek Inc. $ sudo ifconfig wlx008e86000266: flags=4099<UP,BROADCAST,MULTICAST> mtu 1500 ether 1e:a4:80:77:09:f3 txqueuelen 1000 (Ethernet) RX packets 0 bytes 0 (0.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 Install aircrack-ng and run airodump-ng to check Wi-Fi channel. Better to use aircrack-ng 1.6 to support WPA3-SAE. $ git clone https://github.com/aircrack-ng/aircrack-ng.git $ cd aircrack-ng $ ./autogen.sh $ ./configure $ make $ sudo make install $ sudo ldconfig Run airodump-ng $ sudo airodump-ng wlx008e86000266 CH 8 ][ Elapsed: 12 s ][ 2021-07-05 19:24 ][ Are you sure you want to quit? Press Q again to quit. BSSID PWR Beacons #Data, #/s CH MB ENC CIPHER AUTH ESSID C4:E9:0A:6F:A5:1A -20 12 0 0 13 270 WPA2 CCMP PSK AP1 BSSID STATION PWR Rate Lost Frames Notes Probes C4:E9:0A:2F:03:A2 40:31:3C:D1:BD:C9 -41 0 - 6 0 1 as a result, SSID AP1 works on Channel 13 .","title":"Check Wi-Fi channel and so on"},{"location":"dev/diag/#enable-monitor-mode","text":"Enable Monitor Mode, use below script then press ./set_mon.sh wlx008e86000266 13 set_mon.sh # !/bin/sh if [ $# -lt 2 ]; then echo \"Usage: $0 [DEV_NAME] [CHANNEL]\" exit 1 fi dev=$1 ch=$2 sudo ifconfig ${dev} down sudo iwconfig ${dev} mode monitor sudo ifconfig ${dev} up sudo iwconfig ${dev} channel ${ch}","title":"Enable Monitor Mode"},{"location":"dev/diag/#run-wireshark","text":"Run Wireshark Select Menu/View/Wireless Toolbar Set Filter to display beacon Frame. there is a sample filter if you would like to capture. Filter: MAC address: C4:E9:0A:6F:A5:1A, Association Req/Rep Reassociation Req/Rep Probe Req/Rep Beacon ((wlan.fc.type_subtype <= 0x0008)), Four way handshark (wlan.fc.type == 0x0002). you need to put below combination to the Filter rule. wlan.addr[4:2] == A5:1A and (wlan.fc.type_subtype < 0x0005 || wlan.fc.type == 0x0002)","title":"Run Wireshark"},{"location":"dev/diag/#vendor-specific-ieee-80211-information-element","text":"run ./set_ie.sh \"000a00\" \"01234567\" to add new MTK IE element to RTL AP. set_ie.sh # !/bin/sh if [ $# -lt 1 ]; then echo \"Usage: $0 [OUI] [CONTENT]\" exit 1 fi oui=$1 content=$2 echo \"set IE\" echo \" - OUI: $oui\" echo \" - CONTENT: $content\" iwpriv wlan1 setCIE ${oui},${content} echo \"Set WLAN IE done\" There is what we saw from Wireshark (Click Packet \u2192 Copy \u2192 All Visible Selected Tree Items ) Tag: Vendor Specific: Mediatek Corp. Tag Number: Vendor Specific (221) Tag length: 10 OUI: 00:0a:00 (Mediatek Corp.) Vendor Specific OUI Type: 48 Vendor Specific Data: 30313233343536","title":"Vendor Specific IEEE 802.11 Information Element"},{"location":"dev/diag/#reference-books","text":"Wireshark & Ethereal Network Protocol Analyzer Toolkit/CH6-Wireless Sniffing with Wireshark Network Analysis Using Wireshark Cookbook","title":"Reference Books"},{"location":"dev/diag/#tshark","text":"Install $ sudo apt-get install tshark Command to capture Beacon frame $ sudo tshark -i wlx008e86000266 -f \"type mgt subtype beacon\"","title":"tshark"},{"location":"dev/diag/#tcpdump","text":"Install tcpdump $ sudo apt-get install tcpdump","title":"tcpdump"},{"location":"dev/diag/#vlan-packets","text":"VLAN belongs to layer2, use below command to dump VLAN packets -e : Prints the link-level header on each dump line. -n : Blocks converting the host addresses, and the port numbers to names. -X : Prints each packet (minus its link level header) in hexadecimal and ASCII. This is very handy for analyzing new protocols. $ sudo tcpdump -i enp0s25 -en -XX","title":"VLAN packets"},{"location":"dev/diag/#pppoe-packets","text":"0x8863 : PPPoE Discovery Stage 0x8864 : PPPoE Session Stage $ sudo tcpdump -i enp0s25 -en -XX ether [ 0x0c:2 ]== 0x8863 or ether [ 0x0c:2 ]== 0x8864","title":"PPPoE packets"},{"location":"dev/diag/#qualcomm-qxdm","text":"~~ TBD ~~","title":"Qualcomm QxDM"},{"location":"dev/diag/#mtk-catcher","text":"~~ TBD ~~","title":"MTK Catcher"},{"location":"dev/diag/#appendix","text":"","title":"Appendix"},{"location":"dev/diag/#wireless-display-filter-reference","text":"Wireshark Most Common 802.11 Filters v1.1 Frame Name Field Name Management frame wlan.fc.type == 0 Control frame wlan.fc.type == 1 Data frame wlan.fc.type == 2 Association request wlan.fc.type_subtype == 0x00 Association response wlan.fc.type_subtype == 0x01 Reassociation request wlan.fc.type_subtype == 0x02 Reassociation response wlan.fc.type_subtype == 0x03 Probe request wlan.fc.type_subtype == 0x04 Probe response wlan.fc.type_subtype == 0x05 Beacon wlan.fc.type_subtype == 0x08 Disassociate wlan.fc.type_subtype == 0x0A Authentication wlan.fc.type_subtype == 0x0B Deauthentication wlan.fc.type_subtype == 0x0C Action frame wlan.fc.type_subtype == 0x0D Block ACK requests wlan.fc.type_subtype == 0x18 Block ACK wlan.fc.type_subtype == 0x19 Power save poll wlan.fc.type_subtype == 0x1A Request to send wlan.fc.type_subtype == 0x1B Clear to send wlan.fc.type_subtype == 0x1C ACK wlan.fc.type_subtype == 0x1D Contention free period end wlan.fc.type_subtype == 0x1E NULL data wlan.fc.type_subtype == 0x24 QoS data wlan.fc.type_subtype == 0x28 Null QoS data wlan.fc.type_subtype == 0x2C","title":"Wireless Display Filter Reference"},{"location":"dev/diag/#promiscuous-mode","text":"Enable Promiscuous Mode $ sudo ifconfig enp0s25 promisc $ sudo ifconfig enp0s25 enp0s25: flags=4419<UP,BROADCAST,RUNNING,PROMISC,MULTICAST> mtu 1500 # < = PROMISC inet 192.168.2.242 netmask 255.255.255.0 broadcast 192.168.2.255 inet6 fe80::74fa:d87f:c697:6bff prefixlen 64 scopeid 0x20<link> ether 3c:97:0e:51:72:df txqueuelen 1000 (Ethernet) RX packets 309505 bytes 241920726 (230.7 MiB) RX errors 0 dropped 1 overruns 0 frame 0 TX packets 279294 bytes 36722749 (35.0 MiB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 264 device interrupt 20 memory 0xf2600000-f2620000 Disable Promiscuous Mode $ sudo ifconfig enp0s25 -promisc $ sudo ifconfig enp0s25 enp0s25: flags=4163<UP,BROADCAST,RUNNING,MULTICAST> mtu 1500 inet 192.168.2.242 netmask 255.255.255.0 broadcast 192.168.2.255 inet6 fe80::74fa:d87f:c697:6bff prefixlen 64 scopeid 0x20<link> ether 3c:97:0e:51:72:df txqueuelen 1000 (Ethernet) RX packets 309890 bytes 241950545 (230.7 MiB) RX errors 0 dropped 1 overruns 0 frame 0 TX packets 279816 bytes 36788444 (35.0 MiB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 266 device interrupt 20 memory 0xf2600000-f2620000","title":"Promiscuous Mode"},{"location":"dev/doc/","text":"Documentation CHANGELOG RELEASENOTE Markdown markdown to pdf. $ echo \"test\" > doc.md $ pandoc doc.md reStructuredText rst to pdf. $ echo \"test\" > doc.rst $ rst2pdf doc.rst Swagger : API Documentation & Design Tools for Teams ~ TBD ~","title":"Documentation"},{"location":"dev/doc/#documentation","text":"CHANGELOG RELEASENOTE","title":"Documentation"},{"location":"dev/doc/#markdown","text":"markdown to pdf. $ echo \"test\" > doc.md $ pandoc doc.md","title":"Markdown"},{"location":"dev/doc/#restructuredtext","text":"rst to pdf. $ echo \"test\" > doc.rst $ rst2pdf doc.rst","title":"reStructuredText"},{"location":"dev/doc/#swagger-api-documentation-design-tools-for-teams","text":"~ TBD ~","title":"Swagger: API Documentation &amp; Design Tools for Teams"},{"location":"dev/docker/","text":"Docker and Macvlan under construction... Docker Macvlan","title":"Docker and Macvlan"},{"location":"dev/docker/#docker-and-macvlan","text":"under construction...","title":"Docker and Macvlan"},{"location":"dev/docker/#docker","text":"","title":"Docker"},{"location":"dev/docker/#macvlan","text":"","title":"Macvlan"},{"location":"dev/equipments/","text":"Equipments Network Hub (Optional) If you don't to want to spend your time to set Port Mirror to Network Switch, please consider to buy ancient Hub for packet sniffing. LINKSYS EW5HUB Instant Ethernet Workgroup 10M 5-port Hub D-Link DE-805TP 10Mbps Ethernet Mini Hub 5-Port Network Switch better to have Port Mirroring function for the Network Switch. DGS-1210-10P VigorSwitch G1080 Default IP: 192.168.1.224 Default Password: admin Port Mirroring: Ethernet Router MikroTik RB750Gr3 hEX RouterOS is the nice operating system which has good cost performance ratio. Config PPPoE server with VLAN support Interfaces > VLAN > Name: vlan2 , VLAN ID: 2, Interface: eth3 IP > Pool > Name: PPPoE_Pool, Address: 10.1.1.2-10.1.1.254 PPP > Profiles > Name: PPPoE_profile, Local Address: 10.1.1.1, Remote Address: PPPoE_Pool PPP > PPPoE Server > Interface: vlan2; Default Profile: PPPoE profile Reference MikroTik RouterOS \u5efa\u7f6e PPPoE Server \u9632\u6b62 ARP \u653b\u64ca (\u623f\u6771\u5fc5\u5099) MIKROTIK:-PPPoE configuration On VLAN Interface","title":"Networking Equipments"},{"location":"dev/equipments/#equipments","text":"","title":"Equipments"},{"location":"dev/equipments/#network-hub-optional","text":"If you don't to want to spend your time to set Port Mirror to Network Switch, please consider to buy ancient Hub for packet sniffing. LINKSYS EW5HUB Instant Ethernet Workgroup 10M 5-port Hub D-Link DE-805TP 10Mbps Ethernet Mini Hub 5-Port","title":"Network Hub (Optional)"},{"location":"dev/equipments/#network-switch","text":"better to have Port Mirroring function for the Network Switch.","title":"Network Switch"},{"location":"dev/equipments/#dgs-1210-10p","text":"","title":"DGS-1210-10P"},{"location":"dev/equipments/#vigorswitch-g1080","text":"Default IP: 192.168.1.224 Default Password: admin Port Mirroring:","title":"VigorSwitch G1080"},{"location":"dev/equipments/#ethernet-router","text":"","title":"Ethernet Router"},{"location":"dev/equipments/#mikrotik-rb750gr3-hex","text":"RouterOS is the nice operating system which has good cost performance ratio.","title":"MikroTik RB750Gr3 hEX"},{"location":"dev/equipments/#config-pppoe-server-with-vlan-support","text":"Interfaces > VLAN > Name: vlan2 , VLAN ID: 2, Interface: eth3 IP > Pool > Name: PPPoE_Pool, Address: 10.1.1.2-10.1.1.254 PPP > Profiles > Name: PPPoE_profile, Local Address: 10.1.1.1, Remote Address: PPPoE_Pool PPP > PPPoE Server > Interface: vlan2; Default Profile: PPPoE profile","title":"Config PPPoE server with VLAN support"},{"location":"dev/equipments/#reference","text":"MikroTik RouterOS \u5efa\u7f6e PPPoE Server \u9632\u6b62 ARP \u653b\u64ca (\u623f\u6771\u5fc5\u5099) MIKROTIK:-PPPoE configuration On VLAN Interface","title":"Reference"},{"location":"dev/git/","text":"Git and Build Machine Gitlab you can just apply a free account from GitHub or GitLab . Useful Git commands Basic Git commands $ git log $ git status $ git diff <FILENAME> Get Git log time git log -1 --format=%cd Get current Branch $ git branch | grep \\* Get current Git commit hash $ git rev-parse HEAD $ git rev-parse --short HEAD Get all Git commits since last tag $ git log $( git describe --tags --abbrev = 0 ) ..HEAD --oneline --date = format: '%Y-%m-%d %H:%M:%S' --format = \"%<(19,trunc)%cd %s (%an) (%h)\" Get Remote URL $ git config --get remote.origin.url Run Gitlab in Docker use docker-gitlab from sameersbn(Sameer Naik) . Git runner Azure DevOps Nginx","title":"Git and Build Machine"},{"location":"dev/git/#git-and-build-machine","text":"","title":"Git and Build Machine"},{"location":"dev/git/#gitlab","text":"you can just apply a free account from GitHub or GitLab .","title":"Gitlab"},{"location":"dev/git/#useful-git-commands","text":"Basic Git commands $ git log $ git status $ git diff <FILENAME> Get Git log time git log -1 --format=%cd Get current Branch $ git branch | grep \\* Get current Git commit hash $ git rev-parse HEAD $ git rev-parse --short HEAD Get all Git commits since last tag $ git log $( git describe --tags --abbrev = 0 ) ..HEAD --oneline --date = format: '%Y-%m-%d %H:%M:%S' --format = \"%<(19,trunc)%cd %s (%an) (%h)\" Get Remote URL $ git config --get remote.origin.url","title":"Useful Git commands"},{"location":"dev/git/#run-gitlab-in-docker","text":"use docker-gitlab from sameersbn(Sameer Naik) .","title":"Run Gitlab in Docker"},{"location":"dev/git/#git-runner","text":"","title":"Git runner"},{"location":"dev/git/#azure-devops","text":"","title":"Azure DevOps"},{"location":"dev/git/#nginx","text":"","title":"Nginx"},{"location":"dev/perf/","text":"Performance Measurement Networking Performance iperf iPerf : The ultimate speed test tool for TCP, UDP and SCTP $ sudo apt-get install iperf3 ~~ TBD ~~ Bandwidth Monitor bmon Bandwidth Monitor SNMP ~~ TBD ~~","title":"Performance Measurement"},{"location":"dev/perf/#performance-measurement","text":"","title":"Performance  Measurement"},{"location":"dev/perf/#networking-performance","text":"","title":"Networking Performance"},{"location":"dev/perf/#iperf","text":"iPerf : The ultimate speed test tool for TCP, UDP and SCTP $ sudo apt-get install iperf3 ~~ TBD ~~","title":"iperf"},{"location":"dev/perf/#bandwidth-monitor","text":"bmon Bandwidth Monitor","title":"Bandwidth Monitor"},{"location":"dev/perf/#snmp","text":"~~ TBD ~~","title":"SNMP"},{"location":"dev/prog/","text":"Computer Programmer Skills ANSI C autofree strtol v.s. atoi the weakless of atoi int val ; printf ( \"abc to int =\" , atoi ( \"abc\" )); printf ( \"string 0 to int =\" , atoi ( \"0\" )); the advantage of strtol errno = 0 ; /* To distinguish success/failure after call */ val = strtol ( str , & endptr , base ); /* Check for various possible errors */ if (( errno == ERANGE && ( val == LONG_MAX || val == LONG_MIN )) || ( errno != 0 && val == 0 )) { perror ( \"strtol\" ); exit ( EXIT_FAILURE ); } strtol support different base(hex, dec and so on) #include <stdlib.h> int atoi ( const char * nptr ); #include <stdlib.h> long int strtol ( const char * nptr , char ** endptr , int base ); strdupa v.s. strdup snprintf v.s. sprintf Memory Leak gethostbyname/gethostbyaddr v.s getaddrinfo/getnameinfo IPv6 Memory Overflow v.s. Memory Leak Function Point Flexible Array SQLite evhttp/libevent XOR swap algorithm XOR swap algorithm How does XOR variable swapping work? Reverse an array in C [Reverse an array in C]https://www.techiedelight.com/reverse-array-c/ tcpdump LeetCode LeetCode 30 days LeetCode Note Reference ~~ TBD ~~","title":"Programmer Skills"},{"location":"dev/prog/#computer-programmer-skills","text":"","title":"Computer Programmer Skills"},{"location":"dev/prog/#ansi-c","text":"","title":"ANSI C"},{"location":"dev/prog/#autofree","text":"","title":"autofree"},{"location":"dev/prog/#strtol-vs-atoi","text":"the weakless of atoi int val ; printf ( \"abc to int =\" , atoi ( \"abc\" )); printf ( \"string 0 to int =\" , atoi ( \"0\" )); the advantage of strtol errno = 0 ; /* To distinguish success/failure after call */ val = strtol ( str , & endptr , base ); /* Check for various possible errors */ if (( errno == ERANGE && ( val == LONG_MAX || val == LONG_MIN )) || ( errno != 0 && val == 0 )) { perror ( \"strtol\" ); exit ( EXIT_FAILURE ); } strtol support different base(hex, dec and so on) #include <stdlib.h> int atoi ( const char * nptr ); #include <stdlib.h> long int strtol ( const char * nptr , char ** endptr , int base );","title":"strtol v.s. atoi"},{"location":"dev/prog/#strdupa-vs-strdup","text":"","title":"strdupa v.s. strdup"},{"location":"dev/prog/#snprintf-vs-sprintf","text":"Memory Leak","title":"snprintf v.s. sprintf"},{"location":"dev/prog/#gethostbynamegethostbyaddr-vs-getaddrinfogetnameinfo","text":"IPv6","title":"gethostbyname/gethostbyaddr v.s getaddrinfo/getnameinfo"},{"location":"dev/prog/#memory-overflow-vs-memory-leak","text":"","title":"Memory Overflow v.s. Memory Leak"},{"location":"dev/prog/#function-point","text":"","title":"Function Point"},{"location":"dev/prog/#flexible-array","text":"","title":"Flexible Array"},{"location":"dev/prog/#sqlite","text":"","title":"SQLite"},{"location":"dev/prog/#evhttplibevent","text":"","title":"evhttp/libevent"},{"location":"dev/prog/#xor-swap-algorithm","text":"XOR swap algorithm How does XOR variable swapping work?","title":"XOR swap algorithm"},{"location":"dev/prog/#reverse-an-array-in-c","text":"[Reverse an array in C]https://www.techiedelight.com/reverse-array-c/","title":"Reverse an array in C"},{"location":"dev/prog/#tcpdump","text":"","title":"tcpdump"},{"location":"dev/prog/#leetcode","text":"LeetCode 30 days LeetCode Note","title":"LeetCode"},{"location":"dev/prog/#reference","text":"~~ TBD ~~","title":"Reference"},{"location":"dev/shell/","text":"String to HEX $ echo hello | hexdump -v -e '/1 \"%02X \"' ; echo","title":"Index"},{"location":"dev/shell/#string-to-hex","text":"$ echo hello | hexdump -v -e '/1 \"%02X \"' ; echo","title":"String to HEX"},{"location":"dev/softwares/","text":"Software Tools for Firmware Development This chapter introduces some software development tools. Code Editor Visual Studio Code Instead of vi , highly recommended to use Visual Studio Code(VSC) as a firmware development tools. First of all, just install Visual Studio Code as a foundation of code editor then don't forget to install its Recommended extensions as following as well. VSC Extensions Visual Studio Code Remote - SSH (Highly Recommended) C/C++ for Visual Studio Code (Highly Recommended) GitLens : easy to check git history and so on. Git Graph Trailing Space BookMark Bracket Pair Colorizer 2 Indent one space XML (Red Hat) shell-format Peacock PlantUML ToDo Tree better to enlarge max_user_watches also. $ echo fs.inotify.max_user_watches = 524288 >> /etc/sysctl.conf $ cat /proc/sys/fs/inotify/max_user_watches $ sudo sysctl -p There is Visual Studio Code Keyboard shortcuts for Windows and it userful shortcuts as following Deleting tabs when using tabs as spaces: \u21e7 Shift + \u21e5 Tab Switch to next Tab: Ctrl + \u21e5 Tab Go back / forward: Alt + \u2190 / \u2192 BookMark: CTRL + ALT + J / L Toggle BookMark: CTRL + ALT + K Code Server VSC also provides Web IDE called Code Server , use below command to install Code Server. $ curl -fsSL https://code-server.dev/install.sh | sh Its setting file is in ~/.config/code-server/config.yaml . You can revise Bind-addr and Password to allow external access (user needs to run code-server to product this config file). Bind-addr: 0.0.0.0:9786 # < = Use IP 0.0.0.0 and port 9786 to allow external access Password: 11111111 # < = define your password, this case is 11111111 Now, you can run code server with below command. $ code-server . WSL2 By the way, if you use Windows 10 OS, this OS also provides WSL2 after Windows 10 Versions 1903 and 1909 . Install Windows 10 and WSL 2 with Remote - WSL extension . You can develop your code in VSC via WSL2 also. Get started using Python for web development on Windows Install Node.js on Windows Subsystem for Linux (WSL2) Get started with C++ and C Terminal Tools ZOC : SSH Client and Terminal Emulator for Windows and macOS. Xshell : The Industry's Most Powerful SSH Client. MobaXterm : Enhanced terminal for tabbed SSH client, network tools and so on. Services TFTP Server There are some TFTP tools, most of all I use tftp64 beacuse my development environment is Windows 10. tftp64 : for Windows OS, it includes tftp server, client and syslog server. tftpd-hpa (Optional): for Linux OS. TftpServer for Mac (Optional): for Mac OS. HTTP File Server (Optional) There is HTTP file server which can run in Windows OS. HFS Server : HTTP file server. LiteServe : Web, Mail, FTP, and Telnet server Code Comparer Code Compare : a free compare tool designed to compare and merge differing files and folders. Coding Convention Suggest to use default coding configuration by clang-format of Visual Studio Code. ClangFormat : the default formattering tool in VSC. Below script format main.c by clang-format . $ sudo apt-get install clang-format $ clang-format -i main.c AStyle : code formatter for the C, C++, C\u200b++/CLI, Objective\u2011C, C# and Java. Install astyle and there is a case for coding convention as following to format main.c or *.c and *.h files style: K&R , and Indent: 2 $ sudo apt-get install astyle $ astyle --style=kr --indent=spaces=2 -p -U -f main.c - OR - $ astyle --style=kr --indent=spaces=2 -p -U -f *.c *.h Below script can help use to fomat all *.c , *.h and java files. # !/bin/sh echo \"running this script for doing code convention\" astyle -V for f in $(find ../ -name '*.c' -or -name '*.cpp' -or -name '*.h' -type f) do astyle --style=kr --indent=spaces=2 -p -U -f $f done for f in $(find ../ -name '*.java' -type f) do astyle --style=java --indent=spaces=2 -p -U -f $f done # after formate the code,we need to rm '*.orig' file for f in $(find ../ -name '*.orig' -type f) do rm -rf $f done Source Code Tagging System Use hostapd as an example, fetch the code and untar it. $ wget https://w1.fi/releases/hostapd-2.9.tar.gz $ tar xvf hostapd-2.9.tar.gz $ cd hostapd-2.9 CScope : a developer's tool for browsing source code. $ sudo apt-get install exuberant-ctags cscope $ ctags --version $ cscope --version $ find ./ -name \"*.c\" -or -name \"*.h\" -or -name \"*.cpp\" -or -name \"*.S\" | cscope -Rbq # - OR - $ cscope -R GNU Global : source code tagging system. Install global $ sudo apt-get install global $ sudo ldconfig $ global Usage: global [-adEFGilMnNqrstTvx][-S dir][-e] pattern global -c[dFiIMoOPrsT] prefix global -f[adlnqrstvx][-L file-list][-S dir] files global -g[aEGilMnoOqtvVx][-L file-list][-S dir][-e] pattern [files] global -I[ailMnqtvx][-S dir][-e] pattern global -P[aEGilMnoOqtvVx][-S dir][-e] pattern global -p[qrv] global -u[qv] $ gtags --help Usage: gtags [-ciIOqvw][-d tag-file][-f file][dbpath] Options: --accept-dotfiles Accept files and directories whose names begin with a dot. By default, gtags ignores them. -c, --compact Make GTAGS in compact format. This option does not influence GRTAGS, because that is always made in compact format. --config[=name] Print the value of config variable name. If name is not specified then print all names and values. In addition to the variables listed in the ENVIRONMENT section, you can refer to install directories by read only variables: bindir, libdir, datadir, localstatedir and sysconfdir. ... in short, the usage of global is $ global ( find definition of pattern ) $ global -r ( find references of pattern ) $ global -x ( shows the detail ) $ global -xg ( locates the lines which have specified pattern ) Run gtags, make sure it products GPATH , GRTAGS and GTAGS files. $ gtags $ ls CONTRIBUTIONS COPYING GPATH GRTAGS GTAGS hostapd README src Find definition of pattern $ global eloop_sock src/utils/eloop.c src/utils/eloop_win.c Update database. $ global -u product HTML file and copy to HTTP folder. $ htags -ffnsa # < = w/. Searching $ sudo cp -r HTML/ /var/www/html/hostapd Doxygen : Generate documentation from source code. An example for hostapd to generate Doxygen document $ sudo apt-get install doxygen $ sudo apt-get install graphviz $ sudo ldconfig # -- PRODUCT CONFIGURATION -- $ doxygen -g Doxygen # -- REVISE CONFIGURATION -- # HAVE_DOT = YES # CALL_GRAPH = YES # CALLER_GRAPH = YES # RECURSIVE = YES # INLINE_SOURCE = YES # --- RUN -- $ doxygen Doxygen # -- MOVE TO HTTPD FILE FOLDER --- # sudo mv html/ /var/www/html/hostapd For more detail, please check this blog Searching Tools grep $ grep -rsni eloop_register_read_sock * ack Install $ sudo apt-get install ack-grep $ sudo ldconfig Usage $ ack eloop_register_read_sock Code Analysis Tools Static Code Analysis Tools clang-tidy : a clang-based C++ \u201clinter\u201d tool. CPPCheck : A tool for static C/C++ code analysis # - INSTALL - $ sudo apt-get update -y; sudo apt-get install cppcheck # - RUN - $ cppcheck -j 3 ~/Project # < = open 3 threads to check source code from Project folder\uff0c--enable==error by default $ cppcheck -j 3 --enable=all ~/Project $ cppcheck -j 3 --enable=all --xml 2>err.xml ./ # < = Get Report splint : a tool for statically checking C programs for security vulnerabilities and coding mistakes. $ sudo apt-get update -y; sudo apt-get install -y splint $ splint test.c +bounds -varuse # bounds: check memory leak CodeQL Dynamic Code Analysis Tools Valgrind : an instrumentation framework for building dynamic analysis tools. Terminal Multiplexer Tmux Terminal : a terminal multiplexer. # - INSTALL - $ sudo apt-get install tmux # - USAGE - $ tmux # - RUN BELOW COMMANDS THEN EXIT - $ ping 8 .8.8.8 $ tmux deattach # - RUN BELOW COMMAND TO ATTACH AGAIN - $ tmux attach GNU Screen : a full-screen window manager that multiplexes a physical terminal. Wi-Fi Tools InSSIDer 5 : fast WiFi scanning, and packet capture capabilities. wifiinfoview : WiFi Scanner for Windows 10/7/8/Vista. airodump-ng : packet capturing of raw 802.11 frames. Wireshark/tshark : network protocol analyzer. Web Debugging Proxy Fiddler : web Debugging Proxy and Troubleshooting Solutions.","title":"Softwares Tools"},{"location":"dev/softwares/#software-tools-for-firmware-development","text":"This chapter introduces some software development tools.","title":"Software Tools for Firmware Development"},{"location":"dev/softwares/#code-editor","text":"","title":"Code Editor"},{"location":"dev/softwares/#visual-studio-code","text":"Instead of vi , highly recommended to use Visual Studio Code(VSC) as a firmware development tools. First of all, just install Visual Studio Code as a foundation of code editor then don't forget to install its Recommended extensions as following as well.","title":"Visual Studio Code"},{"location":"dev/softwares/#vsc-extensions","text":"Visual Studio Code Remote - SSH (Highly Recommended) C/C++ for Visual Studio Code (Highly Recommended) GitLens : easy to check git history and so on. Git Graph Trailing Space BookMark Bracket Pair Colorizer 2 Indent one space XML (Red Hat) shell-format Peacock PlantUML ToDo Tree better to enlarge max_user_watches also. $ echo fs.inotify.max_user_watches = 524288 >> /etc/sysctl.conf $ cat /proc/sys/fs/inotify/max_user_watches $ sudo sysctl -p There is Visual Studio Code Keyboard shortcuts for Windows and it userful shortcuts as following Deleting tabs when using tabs as spaces: \u21e7 Shift + \u21e5 Tab Switch to next Tab: Ctrl + \u21e5 Tab Go back / forward: Alt + \u2190 / \u2192 BookMark: CTRL + ALT + J / L Toggle BookMark: CTRL + ALT + K","title":"VSC Extensions"},{"location":"dev/softwares/#code-server","text":"VSC also provides Web IDE called Code Server , use below command to install Code Server. $ curl -fsSL https://code-server.dev/install.sh | sh Its setting file is in ~/.config/code-server/config.yaml . You can revise Bind-addr and Password to allow external access (user needs to run code-server to product this config file). Bind-addr: 0.0.0.0:9786 # < = Use IP 0.0.0.0 and port 9786 to allow external access Password: 11111111 # < = define your password, this case is 11111111 Now, you can run code server with below command. $ code-server .","title":"Code Server"},{"location":"dev/softwares/#wsl2","text":"By the way, if you use Windows 10 OS, this OS also provides WSL2 after Windows 10 Versions 1903 and 1909 . Install Windows 10 and WSL 2 with Remote - WSL extension . You can develop your code in VSC via WSL2 also. Get started using Python for web development on Windows Install Node.js on Windows Subsystem for Linux (WSL2) Get started with C++ and C","title":"WSL2"},{"location":"dev/softwares/#terminal-tools","text":"ZOC : SSH Client and Terminal Emulator for Windows and macOS. Xshell : The Industry's Most Powerful SSH Client. MobaXterm : Enhanced terminal for tabbed SSH client, network tools and so on.","title":"Terminal Tools"},{"location":"dev/softwares/#services","text":"","title":"Services"},{"location":"dev/softwares/#tftp-server","text":"There are some TFTP tools, most of all I use tftp64 beacuse my development environment is Windows 10. tftp64 : for Windows OS, it includes tftp server, client and syslog server. tftpd-hpa (Optional): for Linux OS. TftpServer for Mac (Optional): for Mac OS.","title":"TFTP Server"},{"location":"dev/softwares/#http-file-server-optional","text":"There is HTTP file server which can run in Windows OS. HFS Server : HTTP file server. LiteServe : Web, Mail, FTP, and Telnet server","title":"HTTP File Server (Optional)"},{"location":"dev/softwares/#code-comparer","text":"Code Compare : a free compare tool designed to compare and merge differing files and folders.","title":"Code Comparer"},{"location":"dev/softwares/#coding-convention","text":"Suggest to use default coding configuration by clang-format of Visual Studio Code. ClangFormat : the default formattering tool in VSC. Below script format main.c by clang-format . $ sudo apt-get install clang-format $ clang-format -i main.c AStyle : code formatter for the C, C++, C\u200b++/CLI, Objective\u2011C, C# and Java. Install astyle and there is a case for coding convention as following to format main.c or *.c and *.h files style: K&R , and Indent: 2 $ sudo apt-get install astyle $ astyle --style=kr --indent=spaces=2 -p -U -f main.c - OR - $ astyle --style=kr --indent=spaces=2 -p -U -f *.c *.h Below script can help use to fomat all *.c , *.h and java files. # !/bin/sh echo \"running this script for doing code convention\" astyle -V for f in $(find ../ -name '*.c' -or -name '*.cpp' -or -name '*.h' -type f) do astyle --style=kr --indent=spaces=2 -p -U -f $f done for f in $(find ../ -name '*.java' -type f) do astyle --style=java --indent=spaces=2 -p -U -f $f done # after formate the code,we need to rm '*.orig' file for f in $(find ../ -name '*.orig' -type f) do rm -rf $f done","title":"Coding Convention"},{"location":"dev/softwares/#source-code-tagging-system","text":"Use hostapd as an example, fetch the code and untar it. $ wget https://w1.fi/releases/hostapd-2.9.tar.gz $ tar xvf hostapd-2.9.tar.gz $ cd hostapd-2.9 CScope : a developer's tool for browsing source code. $ sudo apt-get install exuberant-ctags cscope $ ctags --version $ cscope --version $ find ./ -name \"*.c\" -or -name \"*.h\" -or -name \"*.cpp\" -or -name \"*.S\" | cscope -Rbq # - OR - $ cscope -R GNU Global : source code tagging system. Install global $ sudo apt-get install global $ sudo ldconfig $ global Usage: global [-adEFGilMnNqrstTvx][-S dir][-e] pattern global -c[dFiIMoOPrsT] prefix global -f[adlnqrstvx][-L file-list][-S dir] files global -g[aEGilMnoOqtvVx][-L file-list][-S dir][-e] pattern [files] global -I[ailMnqtvx][-S dir][-e] pattern global -P[aEGilMnoOqtvVx][-S dir][-e] pattern global -p[qrv] global -u[qv] $ gtags --help Usage: gtags [-ciIOqvw][-d tag-file][-f file][dbpath] Options: --accept-dotfiles Accept files and directories whose names begin with a dot. By default, gtags ignores them. -c, --compact Make GTAGS in compact format. This option does not influence GRTAGS, because that is always made in compact format. --config[=name] Print the value of config variable name. If name is not specified then print all names and values. In addition to the variables listed in the ENVIRONMENT section, you can refer to install directories by read only variables: bindir, libdir, datadir, localstatedir and sysconfdir. ... in short, the usage of global is $ global ( find definition of pattern ) $ global -r ( find references of pattern ) $ global -x ( shows the detail ) $ global -xg ( locates the lines which have specified pattern ) Run gtags, make sure it products GPATH , GRTAGS and GTAGS files. $ gtags $ ls CONTRIBUTIONS COPYING GPATH GRTAGS GTAGS hostapd README src Find definition of pattern $ global eloop_sock src/utils/eloop.c src/utils/eloop_win.c Update database. $ global -u product HTML file and copy to HTTP folder. $ htags -ffnsa # < = w/. Searching $ sudo cp -r HTML/ /var/www/html/hostapd Doxygen : Generate documentation from source code. An example for hostapd to generate Doxygen document $ sudo apt-get install doxygen $ sudo apt-get install graphviz $ sudo ldconfig # -- PRODUCT CONFIGURATION -- $ doxygen -g Doxygen # -- REVISE CONFIGURATION -- # HAVE_DOT = YES # CALL_GRAPH = YES # CALLER_GRAPH = YES # RECURSIVE = YES # INLINE_SOURCE = YES # --- RUN -- $ doxygen Doxygen # -- MOVE TO HTTPD FILE FOLDER --- # sudo mv html/ /var/www/html/hostapd For more detail, please check this blog","title":"Source Code Tagging System"},{"location":"dev/softwares/#searching-tools","text":"grep $ grep -rsni eloop_register_read_sock * ack Install $ sudo apt-get install ack-grep $ sudo ldconfig Usage $ ack eloop_register_read_sock","title":"Searching Tools"},{"location":"dev/softwares/#code-analysis-tools","text":"","title":"Code Analysis Tools"},{"location":"dev/softwares/#static-code-analysis-tools","text":"clang-tidy : a clang-based C++ \u201clinter\u201d tool. CPPCheck : A tool for static C/C++ code analysis # - INSTALL - $ sudo apt-get update -y; sudo apt-get install cppcheck # - RUN - $ cppcheck -j 3 ~/Project # < = open 3 threads to check source code from Project folder\uff0c--enable==error by default $ cppcheck -j 3 --enable=all ~/Project $ cppcheck -j 3 --enable=all --xml 2>err.xml ./ # < = Get Report splint : a tool for statically checking C programs for security vulnerabilities and coding mistakes. $ sudo apt-get update -y; sudo apt-get install -y splint $ splint test.c +bounds -varuse # bounds: check memory leak CodeQL","title":"Static Code Analysis Tools"},{"location":"dev/softwares/#dynamic-code-analysis-tools","text":"","title":"Dynamic Code Analysis Tools"},{"location":"dev/softwares/#valgrind-an-instrumentation-framework-for-building-dynamic-analysis-tools","text":"","title":"Valgrind: an instrumentation framework for building dynamic analysis tools."},{"location":"dev/softwares/#terminal-multiplexer","text":"Tmux Terminal : a terminal multiplexer. # - INSTALL - $ sudo apt-get install tmux # - USAGE - $ tmux # - RUN BELOW COMMANDS THEN EXIT - $ ping 8 .8.8.8 $ tmux deattach # - RUN BELOW COMMAND TO ATTACH AGAIN - $ tmux attach GNU Screen : a full-screen window manager that multiplexes a physical terminal.","title":"Terminal Multiplexer"},{"location":"dev/softwares/#wi-fi-tools","text":"InSSIDer 5 : fast WiFi scanning, and packet capture capabilities. wifiinfoview : WiFi Scanner for Windows 10/7/8/Vista. airodump-ng : packet capturing of raw 802.11 frames. Wireshark/tshark : network protocol analyzer.","title":"Wi-Fi Tools"},{"location":"dev/softwares/#web-debugging-proxy","text":"Fiddler : web Debugging Proxy and Troubleshooting Solutions.","title":"Web Debugging Proxy"},{"location":"dev/wifi/","text":"IxVeriWave and OctoBox RF Fresnel zone Fresnel Zone Calculator","title":"IxVeriWave and OctoBox"},{"location":"dev/wifi/#ixveriwave-and-octobox","text":"","title":"IxVeriWave and OctoBox"},{"location":"dev/wifi/#rf","text":"","title":"RF"},{"location":"dev/wifi/#fresnel-zone","text":"","title":"Fresnel zone"},{"location":"dev/wifi/#fresnel-zone-calculator","text":"","title":"Fresnel Zone Calculator"},{"location":"distro/debian10/","text":"Debian 10.10 This chapter describes how to upgrade and rebuild Linux Kernel in Debian 10.10. how to insert and remove Linux Device Driver. Rebuild Linux Kernel Download and install Wireshark from Internet.For Debian 10.10 , becasue its Linux Kernel version is 4.x, we need to upgrade to Linux Kernel 5.x which can support more WiFi dongles. There are the steps as following to upgrade Linux Kernel from 4.x to 5.x in Debian 10.10. Programming Live CD, in my case I choose debian-live-10.10.0-amd64-xfce.iso Check the current Linux Kernel version. # uname -a config-4.19.0-17-amd64 Upgrade the essential packages for wireless capture $ sudo apt-get update && sudo apt-get upgrade $ sudo apt-get install -y openssh-server vim net-tools usbutils pciutils $ sudo apt-get install -y build-essential libncurses-dev bison flex libssl-dev libelf-dev $ sudo apt-get install -y git fakeroot ncurses-dev xz-utils bc $ sudo apt-get install -y software-properties-common rsync $ sudo apt-get install -y libncurses5-dev gcc grub2 wget dwarves tree curl $ sudo service sshd restart Add apt repository to support linux-image-5.10.0 $ sudo add-apt-repository 'deb http://deb.debian.org/debian buster-backports main' $ sudo apt-get update $ sudo apt-get install linux-image-5.10.0-0.bpo.7-amd64 $ sync reboot After rebooted. Check current Linux version to make sure its Linux Kernel 5.10 # uname -a Linux vultr.guest 5.10.0-0.bpo.7-amd64 #1 SMP Debian 5.10.40-1~bpo10+1 (2021-06-04) x86_64 GNU/Linux Add apt repository to support firmware-misc-nonfree (Optional) $ sudo add-apt-repository 'deb http://ftp.de.debian.org/debian stretch main non-free' $ sudo apt-get update $ sudo apt-get install firmware-misc-nonfree $ sync ; sudo reboot Rebuild the kernel $ sudo apt-get update ; sudo apt-get upgrade ; sudo apt autoremove $ sudo apt-cache search kernel | grep source | grep 5 .10 linux-source-5.10 - Linux kernel source for version 5.10 with Debian patches $ sudo apt-get install linux-source-5.10 $ sudo cp /usr/src/linux-source-5.10.tar.xz . $ sudo chgrp ed linux-source-5.10.tar.xz $ sudo chown ed linux-source-5.10.tar.xz $ tar xvf linux-source-5.10.tar.xz $ cd linux-source-5.10/ $ cp /boot/config- $( uname -r ) .config $ scripts/config --set-str SYSTEM_TRUSTED_KEYS \"\" Revise CONFIG_DEBUG_INFO_BTF to avoid build error CONFIG_DEBUG_INFO_BTF=n Compile and Install the Kernel $ sudo add-apt-repository 'deb http://http.us.debian.org/debian/ buster main contrib non-free' $ sudo make -j $( nproc ) V = 99 deb-pkg 2 > & 1 | tee build.log | grep -i error $ cd .. Result $ ls -lah | grep deb -rw-r--r-- 1 ed ed 7.7M Jul 8 23:56 linux-headers-5.10.40_5.10.40-5_amd64.deb -rw-r--r-- 1 ed ed 50M Jul 8 23:58 linux-image-5.10.40_5.10.40-5_amd64.deb -rw-r--r-- 1 ed ed 893M Jul 9 00:25 linux-image-5.10.40-dbg_5.10.40-5_amd64.deb -rw-r--r-- 1 ed ed 1.1M Jul 8 23:57 linux-libc-dev_5.10.40-5_amd64.deb Install $ sudo dpkg -i linux-image-5.10.40_5.10.40-5_amd64.deb $ sudo dpkg -i linux-headers-5.10.40_5.10.40-5_amd64.deb $ sync $ sudo reboot Verification $ uname -a $ Linux ed-pc 5 .10.40 #5 SMP Thu Jul 8 21:17:59 CST 2021 x86_64 GNU/Linux Linux Kernel Module Hello, World C 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include <linux/init.h> #include <linux/module.h> MODULE_LICENSE ( \"Dual BSD/GPL\" ); static int hello_init ( void ) { printk ( KERN_INFO \"Hello, world \\n \" ); return 0 ; } static void hello_exit ( void ) { printk ( KERN_INFO \"Goodbye, Hello world \\n \" ); } module_init ( hello_init ); module_exit ( hello_exit ); Makefile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 PWD := $( shell pwd ) KVERSION := $( shell uname -r ) KERNEL_DIR = /usr/src/linux-headers- $( KVERSION ) / MODULE_NAME = hello obj-m := $( MODULE_NAME ) .o all : make -C $( KERNEL_DIR ) M = $( PWD ) modules test : dmesg -c sudo insmod ./hello.ko sudo lsmod | grep hello cat /proc/modules | grep hello sudo rmmod hello clean : make -C $( KERNEL_DIR ) M = $( PWD ) clean Build the module $ make make -C /usr/src/linux-headers-5.10.40/ M=/home/ed/hello modules make[1]: Entering directory '/usr/src/linux-headers-5.10.40' CC [M] /home/ed/hello/hello.o MODPOST /home/ed/hello/Module.symvers LD [M] /home/ed/hello/hello.ko make[1]: Leaving directory '/usr/src/linux-headers-5.10.40' Project Layout (As a result) $ tree . \u251c\u2500\u2500 hello.c \u251c\u2500\u2500 hello.ko \u251c\u2500\u2500 hello.mod \u251c\u2500\u2500 hello.mod.c \u251c\u2500\u2500 hello.mod.o \u251c\u2500\u2500 hello.o \u251c\u2500\u2500 Makefile \u251c\u2500\u2500 modules.order \u2514\u2500\u2500 Module.symvers 0 directories, 9 files Verification $ make test [ 5163.936243] hello: loading out-of-tree module taints kernel. [ 5163.936708] Hello world ! hello 16384 0 hello 16384 0 - Live 0x0000000000000000 (OE) [ 5360.557612] Bye ! Proc Filesystem \ud83d\udcdd Functions: \u2b9a struct proc_dir_entry *proc_mkdir(const char *name, struct proc_dir_entry *parent)\uff1b \u2b9a static inline struct proc_dir_entry *proc_create(const char *name, umode_t mode,struct proc_dir_entry *parent, const struct file_operations *proc_fops); \u2b9a unsigned long copy_to_user(void __user * to, const void * from, unsigned long n); \u2b9a int copy_from_user_toio(volatile void __iomem * dst, const void __user * src, size_t count); C 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 #include <linux/kernel.h> /* We're doing kernel work */ #include <linux/module.h> /* Specifically, a module */ #include <linux/proc_fs.h> /* Necessary because we use the proc fs */ #include <asm/uaccess.h> /* for copy_from_user */ #include <linux/fs.h> #include <linux/seq_file.h> #include <linux/slab.h> #include \"hello.h\" #define PROCFS_MAX_SIZE 1024 #define PROCFS_NAME \"hello\" static char procfs_buffer [ PROCFS_MAX_SIZE ]; static unsigned long procfs_buffer_size = 0 ; static struct proc_dir_entry * entry ; static struct proc_dir_entry * parent ; /** * This function is called when the /proc file is read. */ static ssize_t procfile_read ( struct file * file , char __user * buffer , size_t count , loff_t * offset ) { if ( * offset > 0 || count < PROCFS_MAX_SIZE ) /* we have finished to read, return 0 */ return 0 ; /* fill the buffer, return the buffer size */ if ( copy_to_user ( buffer , procfs_buffer , procfs_buffer_size )) return - EFAULT ; * offset = procfs_buffer_size ; return procfs_buffer_size ; } /** * This function is called when the /proc file is written */ static ssize_t procfile_write ( struct file * file , const char __user * buffer , size_t count , loff_t * f_pos ){ int tlen ; char * tmp = kzalloc (( count + 1 ), GFP_KERNEL ); if ( ! tmp ) return - ENOMEM ; if ( copy_from_user ( tmp , buffer , count )){ kfree ( tmp ); return EFAULT ; } tlen = PROCFS_MAX_SIZE ; if ( count < PROCFS_MAX_SIZE ) tlen = count ; memcpy ( & procfs_buffer , tmp , tlen ); procfs_buffer_size = tlen ; kfree ( tmp ); printk ( \"Procfs Input: %s \\n \" , procfs_buffer ); return tlen ; } static int procfile_show ( struct seq_file * m , void * v ){ static char * str = NULL ; seq_printf ( m , \"%s \\n \" , str ); return 0 ; } /** * Open the procfile */ static int procfile_open ( struct inode * inode , struct file * file ){ return single_open ( file , procfile_show , NULL ); } static struct proc_ops proc_fops = { . proc_lseek = seq_lseek , . proc_open = procfile_open , . proc_read = procfile_read , . proc_release = single_release , . proc_write = procfile_write , }; /** *This function is called from main.c when the module is loaded */ int __init my_proc_init ( void ) { parent = proc_mkdir ( PROCFS_NAME , NULL ); entry = proc_create ( \"system\" , 0777 , parent , & proc_fops ); if ( ! entry ) { printk ( KERN_INFO \"unable to create /proc/hello/system\" ); return -1 ; } printk ( KERN_INFO \"/proc/hello/system is created\" ); return 0 ; } /** *This function is called from main.c when the module is unloaded */ void __exit my_proc_cleanup ( void ) { remove_proc_entry ( \"system\" , parent ); remove_proc_entry ( PROCFS_NAME , NULL ); } static int __init hello_init ( void ) { int rc ; printk ( KERN_INFO \"Hello, Procfs! \\n \" ); /* create the /proc file */ rc = my_proc_init (); if ( rc == -1 ) return -1 ; return 0 ; } static void __exit hello_exit ( void ) { my_proc_cleanup (); printk ( KERN_INFO \"Goodbye, Procfs! \\n \" ); } module_init ( hello_init ); module_exit ( hello_exit ); MODULE_LICENSE ( \"GPL\" ); MODULE_DESCRIPTION ( \"Hello Procfs example.\" ); MODULE_SUPPORTED_DEVICE ( \"hello\" ); Makefile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 PWD := $( shell pwd ) KVERSION := $( shell uname -r ) KERNEL_DIR = /usr/src/linux-headers- $( KVERSION ) / MODULE_NAME = hello obj-m := $( MODULE_NAME ) .o all : make -C $( KERNEL_DIR ) M = $( PWD ) modules test : sudo dmesg -c sudo insmod ./hello.ko echo \"procfs hello test\" >> /proc/hello/system sudo dmesg -c sudo rmmod hello.ko clean : make -C $( KERNEL_DIR ) M = $( PWD ) clean ~~ TBD ~~ Accessing IO Port #include <linux/ioport.h> struct resource * request_region ( unsigned long first , unsigned long n , const char * name ); void release_region ( unsigned long start , unsigned long n ); Port-mapped I/O (PMIO) Memory-mapped I/O (MMIO) Framwbuffer Function seq_file interface BPF Precondition $ sudo apt-get install clang Hello, BPF a.c int f(int x) { return x + 1; } Make $ clang -c -S -emit-llvm a.c # < = a.ll (LLVM IR) $ clang -c -S -target bpf a.c # < = a.s (eBPF) $ clang -c -target bpf a.c # < = a.o (eBPF bytecode) $ objcopy -I elf64-little -O binary a.o a.bin # < = Extract eBPF bytecode ~~ TBD ~~ Coredump Reference Kernel Module Snippets \u2013 Part 1 \u2013 Hello World Linux \u6838\u5fc3\u8a2d\u8a08: \u900f\u904e eBPF \u89c0\u5bdf\u4f5c\u696d\u7cfb\u7d71\u884c\u70ba I/O access and Interrupts Linux Device Drivers, Third Edition","title":"Debian 10.10"},{"location":"distro/debian10/#debian-1010","text":"This chapter describes how to upgrade and rebuild Linux Kernel in Debian 10.10. how to insert and remove Linux Device Driver.","title":"Debian 10.10"},{"location":"distro/debian10/#rebuild-linux-kernel","text":"Download and install Wireshark from Internet.For Debian 10.10 , becasue its Linux Kernel version is 4.x, we need to upgrade to Linux Kernel 5.x which can support more WiFi dongles. There are the steps as following to upgrade Linux Kernel from 4.x to 5.x in Debian 10.10. Programming Live CD, in my case I choose debian-live-10.10.0-amd64-xfce.iso Check the current Linux Kernel version. # uname -a config-4.19.0-17-amd64 Upgrade the essential packages for wireless capture $ sudo apt-get update && sudo apt-get upgrade $ sudo apt-get install -y openssh-server vim net-tools usbutils pciutils $ sudo apt-get install -y build-essential libncurses-dev bison flex libssl-dev libelf-dev $ sudo apt-get install -y git fakeroot ncurses-dev xz-utils bc $ sudo apt-get install -y software-properties-common rsync $ sudo apt-get install -y libncurses5-dev gcc grub2 wget dwarves tree curl $ sudo service sshd restart Add apt repository to support linux-image-5.10.0 $ sudo add-apt-repository 'deb http://deb.debian.org/debian buster-backports main' $ sudo apt-get update $ sudo apt-get install linux-image-5.10.0-0.bpo.7-amd64 $ sync reboot After rebooted. Check current Linux version to make sure its Linux Kernel 5.10 # uname -a Linux vultr.guest 5.10.0-0.bpo.7-amd64 #1 SMP Debian 5.10.40-1~bpo10+1 (2021-06-04) x86_64 GNU/Linux Add apt repository to support firmware-misc-nonfree (Optional) $ sudo add-apt-repository 'deb http://ftp.de.debian.org/debian stretch main non-free' $ sudo apt-get update $ sudo apt-get install firmware-misc-nonfree $ sync ; sudo reboot Rebuild the kernel $ sudo apt-get update ; sudo apt-get upgrade ; sudo apt autoremove $ sudo apt-cache search kernel | grep source | grep 5 .10 linux-source-5.10 - Linux kernel source for version 5.10 with Debian patches $ sudo apt-get install linux-source-5.10 $ sudo cp /usr/src/linux-source-5.10.tar.xz . $ sudo chgrp ed linux-source-5.10.tar.xz $ sudo chown ed linux-source-5.10.tar.xz $ tar xvf linux-source-5.10.tar.xz $ cd linux-source-5.10/ $ cp /boot/config- $( uname -r ) .config $ scripts/config --set-str SYSTEM_TRUSTED_KEYS \"\" Revise CONFIG_DEBUG_INFO_BTF to avoid build error CONFIG_DEBUG_INFO_BTF=n Compile and Install the Kernel $ sudo add-apt-repository 'deb http://http.us.debian.org/debian/ buster main contrib non-free' $ sudo make -j $( nproc ) V = 99 deb-pkg 2 > & 1 | tee build.log | grep -i error $ cd .. Result $ ls -lah | grep deb -rw-r--r-- 1 ed ed 7.7M Jul 8 23:56 linux-headers-5.10.40_5.10.40-5_amd64.deb -rw-r--r-- 1 ed ed 50M Jul 8 23:58 linux-image-5.10.40_5.10.40-5_amd64.deb -rw-r--r-- 1 ed ed 893M Jul 9 00:25 linux-image-5.10.40-dbg_5.10.40-5_amd64.deb -rw-r--r-- 1 ed ed 1.1M Jul 8 23:57 linux-libc-dev_5.10.40-5_amd64.deb Install $ sudo dpkg -i linux-image-5.10.40_5.10.40-5_amd64.deb $ sudo dpkg -i linux-headers-5.10.40_5.10.40-5_amd64.deb $ sync $ sudo reboot Verification $ uname -a $ Linux ed-pc 5 .10.40 #5 SMP Thu Jul 8 21:17:59 CST 2021 x86_64 GNU/Linux","title":"Rebuild Linux Kernel"},{"location":"distro/debian10/#linux-kernel-module","text":"","title":"Linux Kernel Module"},{"location":"distro/debian10/#hello-world","text":"C 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include <linux/init.h> #include <linux/module.h> MODULE_LICENSE ( \"Dual BSD/GPL\" ); static int hello_init ( void ) { printk ( KERN_INFO \"Hello, world \\n \" ); return 0 ; } static void hello_exit ( void ) { printk ( KERN_INFO \"Goodbye, Hello world \\n \" ); } module_init ( hello_init ); module_exit ( hello_exit ); Makefile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 PWD := $( shell pwd ) KVERSION := $( shell uname -r ) KERNEL_DIR = /usr/src/linux-headers- $( KVERSION ) / MODULE_NAME = hello obj-m := $( MODULE_NAME ) .o all : make -C $( KERNEL_DIR ) M = $( PWD ) modules test : dmesg -c sudo insmod ./hello.ko sudo lsmod | grep hello cat /proc/modules | grep hello sudo rmmod hello clean : make -C $( KERNEL_DIR ) M = $( PWD ) clean Build the module $ make make -C /usr/src/linux-headers-5.10.40/ M=/home/ed/hello modules make[1]: Entering directory '/usr/src/linux-headers-5.10.40' CC [M] /home/ed/hello/hello.o MODPOST /home/ed/hello/Module.symvers LD [M] /home/ed/hello/hello.ko make[1]: Leaving directory '/usr/src/linux-headers-5.10.40' Project Layout (As a result) $ tree . \u251c\u2500\u2500 hello.c \u251c\u2500\u2500 hello.ko \u251c\u2500\u2500 hello.mod \u251c\u2500\u2500 hello.mod.c \u251c\u2500\u2500 hello.mod.o \u251c\u2500\u2500 hello.o \u251c\u2500\u2500 Makefile \u251c\u2500\u2500 modules.order \u2514\u2500\u2500 Module.symvers 0 directories, 9 files Verification $ make test [ 5163.936243] hello: loading out-of-tree module taints kernel. [ 5163.936708] Hello world ! hello 16384 0 hello 16384 0 - Live 0x0000000000000000 (OE) [ 5360.557612] Bye !","title":"Hello, World"},{"location":"distro/debian10/#proc-filesystem","text":"\ud83d\udcdd Functions: \u2b9a struct proc_dir_entry *proc_mkdir(const char *name, struct proc_dir_entry *parent)\uff1b \u2b9a static inline struct proc_dir_entry *proc_create(const char *name, umode_t mode,struct proc_dir_entry *parent, const struct file_operations *proc_fops); \u2b9a unsigned long copy_to_user(void __user * to, const void * from, unsigned long n); \u2b9a int copy_from_user_toio(volatile void __iomem * dst, const void __user * src, size_t count); C 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 #include <linux/kernel.h> /* We're doing kernel work */ #include <linux/module.h> /* Specifically, a module */ #include <linux/proc_fs.h> /* Necessary because we use the proc fs */ #include <asm/uaccess.h> /* for copy_from_user */ #include <linux/fs.h> #include <linux/seq_file.h> #include <linux/slab.h> #include \"hello.h\" #define PROCFS_MAX_SIZE 1024 #define PROCFS_NAME \"hello\" static char procfs_buffer [ PROCFS_MAX_SIZE ]; static unsigned long procfs_buffer_size = 0 ; static struct proc_dir_entry * entry ; static struct proc_dir_entry * parent ; /** * This function is called when the /proc file is read. */ static ssize_t procfile_read ( struct file * file , char __user * buffer , size_t count , loff_t * offset ) { if ( * offset > 0 || count < PROCFS_MAX_SIZE ) /* we have finished to read, return 0 */ return 0 ; /* fill the buffer, return the buffer size */ if ( copy_to_user ( buffer , procfs_buffer , procfs_buffer_size )) return - EFAULT ; * offset = procfs_buffer_size ; return procfs_buffer_size ; } /** * This function is called when the /proc file is written */ static ssize_t procfile_write ( struct file * file , const char __user * buffer , size_t count , loff_t * f_pos ){ int tlen ; char * tmp = kzalloc (( count + 1 ), GFP_KERNEL ); if ( ! tmp ) return - ENOMEM ; if ( copy_from_user ( tmp , buffer , count )){ kfree ( tmp ); return EFAULT ; } tlen = PROCFS_MAX_SIZE ; if ( count < PROCFS_MAX_SIZE ) tlen = count ; memcpy ( & procfs_buffer , tmp , tlen ); procfs_buffer_size = tlen ; kfree ( tmp ); printk ( \"Procfs Input: %s \\n \" , procfs_buffer ); return tlen ; } static int procfile_show ( struct seq_file * m , void * v ){ static char * str = NULL ; seq_printf ( m , \"%s \\n \" , str ); return 0 ; } /** * Open the procfile */ static int procfile_open ( struct inode * inode , struct file * file ){ return single_open ( file , procfile_show , NULL ); } static struct proc_ops proc_fops = { . proc_lseek = seq_lseek , . proc_open = procfile_open , . proc_read = procfile_read , . proc_release = single_release , . proc_write = procfile_write , }; /** *This function is called from main.c when the module is loaded */ int __init my_proc_init ( void ) { parent = proc_mkdir ( PROCFS_NAME , NULL ); entry = proc_create ( \"system\" , 0777 , parent , & proc_fops ); if ( ! entry ) { printk ( KERN_INFO \"unable to create /proc/hello/system\" ); return -1 ; } printk ( KERN_INFO \"/proc/hello/system is created\" ); return 0 ; } /** *This function is called from main.c when the module is unloaded */ void __exit my_proc_cleanup ( void ) { remove_proc_entry ( \"system\" , parent ); remove_proc_entry ( PROCFS_NAME , NULL ); } static int __init hello_init ( void ) { int rc ; printk ( KERN_INFO \"Hello, Procfs! \\n \" ); /* create the /proc file */ rc = my_proc_init (); if ( rc == -1 ) return -1 ; return 0 ; } static void __exit hello_exit ( void ) { my_proc_cleanup (); printk ( KERN_INFO \"Goodbye, Procfs! \\n \" ); } module_init ( hello_init ); module_exit ( hello_exit ); MODULE_LICENSE ( \"GPL\" ); MODULE_DESCRIPTION ( \"Hello Procfs example.\" ); MODULE_SUPPORTED_DEVICE ( \"hello\" ); Makefile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 PWD := $( shell pwd ) KVERSION := $( shell uname -r ) KERNEL_DIR = /usr/src/linux-headers- $( KVERSION ) / MODULE_NAME = hello obj-m := $( MODULE_NAME ) .o all : make -C $( KERNEL_DIR ) M = $( PWD ) modules test : sudo dmesg -c sudo insmod ./hello.ko echo \"procfs hello test\" >> /proc/hello/system sudo dmesg -c sudo rmmod hello.ko clean : make -C $( KERNEL_DIR ) M = $( PWD ) clean ~~ TBD ~~","title":"Proc Filesystem"},{"location":"distro/debian10/#accessing-io-port","text":"#include <linux/ioport.h> struct resource * request_region ( unsigned long first , unsigned long n , const char * name ); void release_region ( unsigned long start , unsigned long n ); Port-mapped I/O (PMIO) Memory-mapped I/O (MMIO)","title":"Accessing IO Port"},{"location":"distro/debian10/#framwbuffer","text":"Function","title":"Framwbuffer"},{"location":"distro/debian10/#seq_file-interface","text":"","title":"seq_file interface"},{"location":"distro/debian10/#bpf","text":"","title":"BPF"},{"location":"distro/debian10/#precondition","text":"$ sudo apt-get install clang","title":"Precondition"},{"location":"distro/debian10/#hello-bpf","text":"a.c int f(int x) { return x + 1; } Make $ clang -c -S -emit-llvm a.c # < = a.ll (LLVM IR) $ clang -c -S -target bpf a.c # < = a.s (eBPF) $ clang -c -target bpf a.c # < = a.o (eBPF bytecode) $ objcopy -I elf64-little -O binary a.o a.bin # < = Extract eBPF bytecode ~~ TBD ~~","title":"Hello, BPF"},{"location":"distro/debian10/#coredump","text":"","title":"Coredump"},{"location":"distro/debian10/#reference","text":"Kernel Module Snippets \u2013 Part 1 \u2013 Hello World Linux \u6838\u5fc3\u8a2d\u8a08: \u900f\u904e eBPF \u89c0\u5bdf\u4f5c\u696d\u7cfb\u7d71\u884c\u70ba I/O access and Interrupts Linux Device Drivers, Third Edition","title":"Reference"},{"location":"dsp/","text":"Digital Signal Processing (DSP) There are some implementations of Digital Signal Processing. Voice Processing Discrete-Time Processing ( matlab ) Moving Average and Backward System ( matlab ) Spectrum Analysis Window Size and the Spectrogram ( matlab )","title":"Digital Signal Processing"},{"location":"dsp/#digital-signal-processing-dsp","text":"There are some implementations of Digital Signal Processing.","title":"Digital Signal Processing (DSP)"},{"location":"dsp/#voice-processing","text":"","title":"Voice Processing"},{"location":"dsp/#discrete-time-processing-matlab","text":"","title":"Discrete-Time Processing (matlab)"},{"location":"dsp/#moving-average-and-backward-system-matlab","text":"","title":"Moving Average and Backward System (matlab)"},{"location":"dsp/#spectrum-analysis","text":"","title":"Spectrum Analysis"},{"location":"dsp/#window-size-and-the-spectrogram-matlab","text":"","title":"Window Size and the Spectrogram (matlab)"},{"location":"dsp/discrete-time-processing/","text":"Discrete-Time Processing An implementation of changing the 10K sampling-rate-voice to 22K sampling-rate-voice 8K sampling-rate-voice Requirements Matlab 6.5 CoolEdit 2000 Programming %.............................................................................. % Filename : dsp2.m % Author : Ching-Wen,Lai % Running : running this .m file in Matlab % Description : Changing the Sampling Rate % % Date : 12/02/2002 ver2.0 % 1. \u66f4\u6b63 22K \u7684 butter filter \u6210 stable \u2013 \u6e1b\u5c11\u7206\u97f3\u73fe\u8c61 % 2. \u66f4\u6b63 8K butter filter , Wc=1/5 (\u53d6\u6700\u5c0f\u7684) % 3. \u66f4\u6b63 10K Plot \u932f\u8aa4 \u8207 \u65b0\u589e \u983b \u57df \u5716 \u5f62 % Requirement : speech_10K.wav (PCM \u683c\u5f0f ; sampling rate = 10K) % % Result : 1. speech_22K.wav (PCM \u683c\u5f0f ; sampling rate = 22K) % 2. speech_8K.wav (PCM \u683c\u5f0f ; sampling rate = 8K) % % References : Chapter 4.6 Changing The Sampling Rate using % Discrete-Time Processing % Book::Discrete-Time Signal Processing % (ISBN: 0-13-0834443-2 ) % % Comment : \u4f7f\u7528 \u77e9\u9663\u65b9\u5f0f \u8655\u7406 ,\u6bd4 \u7528Loop\u65b9\u5f0f\u8655\u7406(for...), \u901f\u5ea6\u5feb\u5f88\u591a %.............................................................................. clear all ; fs = 10000 ; % set sampling rate %============================================================================== % \u8f38\u5165 \u8655\u7406 10 K \u8a9e\u97f3\u8cc7\u6599 %============================================================================== [ x , fs ] = wavread ( 'speech_10K.wav' ); % loading the PCM speech file len = length ( x ); k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 10K \u8a9e\u97f3' ); % playing it wavplay ( x , fs ); %============================================================================== % \u9032\u884c DSP \u8655\u7406 (10K -> 110K --> 22K ) %============================================================================== fprintf ( '\u5c07 10K \u8f49\u6210 22K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019...\\n' ); %.............................................................................. % [ Up sampling ] 10K -> 110K % x_110K = { x[ n/len ] , n= 0,|L|,|2l|,... % { 0, Otherwise , \u53c3\u8003\u8ab2\u672c 4.84 \u5f0f(p.172) %.............................................................................. x_110K = [ zeros ( len , 10 ) x ]; x_110K = x_110K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 \u6210 \u8ab2\u672c 4.84\u5f0f %.............................................................................. % % \u4f7f\u7528 \u6642\u57df Butterworth \u6578\u4f4d\u6ffe\u6ce2\u5668 \u505a \u8a0a\u865f\u91cd\u5efa % \u540c\u983b\u57df sinc \u65b9\u5f0f\u91cd\u5efa ( \u8ab2\u672c 4.88\u5f0f ) %.............................................................................. [ b , a ] = butter ( 19 , 1 / 11 ); % 1/11 \u8207 1/5 \u53d6\u6700\u5c0f\u7684 x_110K = filter ( b , a , x_110K (:)); %.............................................................................. % [ Down sampling ] 110K -> 22K % X_110K[n] = X_22K [ nM ] , M = 1/5 % \u8ab2\u672c 4.71\u5f0f %.............................................................................. x_22K = reshape ( x_110K (:), 5 ,( len * 11 ) / 5 ); % \u91cd\u65b0\u5b89\u6392\u77e9\u9663\u7684\u5f62\u72c0 x_22K = x_22K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 x_22K = x_22K (:, 5 ) ; % M= 1/5, \u53d6\u51fa\u7b2c\u4e94\u884c %============================================================================== % \u8f38\u51fa \u8655\u7406\u7d50\u679c ( 10 K --> 22K ) %============================================================================== k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64a5\u653e 22K \u8072\u97f3' ); wavplay ( x_22K (:), fs * 2.2 ); wavwrite ( x_22K (:), fs * 2.2 , 16 , 'speech_22K.wav' ); %============================================================================== % \u9032\u884c DSP \u8655\u7406 (10K -> 40K --> 8K ) %============================================================================== fprintf ( '\u5c07 10K \u8f49\u6210 8K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019...\\n' ); %.............................................................................. % [ Up sampling ] 10K -> 40K % x_40K = { x[ n/len ] , n= 0,|L|,|2l|,... % { 0, Otherwise , \u53c3\u8003\u8ab2\u672c 4.84\u5f0f(p.172) %.............................................................................. x_40K = [ zeros ( len , 3 ) x ]; x_40K = x_40K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 %.............................................................................. % % \u4f7f\u7528 \u6642\u57df Butterworth \u6578\u4f4d\u6ffe\u6ce2\u5668 \u505a \u8a0a\u865f\u91cd\u5efa % \u540c\u983b\u57df sinc \u65b9\u5f0f\u91cd\u5efa ( \u8ab2\u672c 4.88\u5f0f ) %.............................................................................. [ b , a ] = butter ( 30 , 1 / 5 ); % 1/5 \u8207 1/4 \u53d6\u6700\u5c0f\u7684 x_40K = filter ( b , a , x_40K (:)); %.............................................................................. % [Down sampling ] 40K -> 8K % X_110K[n] = X_22K [ nM ] , M = 1/5 % \u8ab2\u672c 4.71\u5f0f %.............................................................................. x_8K = reshape ( x_40K (:), 5 ,( len * 4 ) / 5 ); % \u91cd\u65b0\u5b89\u6392\u77e9\u9663\u7684\u5f62\u72c0 x_8K = x_8K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 x_8K = x_8K (:, 5 ) ; % M=1/5, \u53d6\u51fa\u7b2c\u4e94\u884c %============================================================================== % \u8f38\u51fa \u8655\u7406\u7d50\u679c ( 10 K --> 8K ) %============================================================================== k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64a5\u653e 8K \u8072\u97f3' ); wavplay ( x_8K (:), fs * 0.8 ); wavwrite ( x_8K (:), fs * 0.8 , 16 , 'speech_8K.wav' ); %============================================================================== % \u7e6a\u51fa \u5404\u8655\u7406\u968e\u6bb5\u7684 \u8a0a\u865f ( 10K/ 110K/ 22K/ 40K/ 8K ), \u65b9\u4fbf \u6bd4\u8f03 %============================================================================== subplot ( 332 ), plot ( x (:), '.' ), grid % \u7e6a\u51fa \u539f\u59cb 10K \u8a0a\u865f title ( '10K' ) subplot ( 333 ), specgram ( x (:)), grid % \u7e6a\u51fa 10K \u8a0a\u865f \u983b\u8b5c\u5716 title ( '10K' ) subplot ( 334 ), plot ( x_110K , '.' ), grid % \u7e6a\u51fa 110K \u8a0a\u865f title ( '110K' ) subplot ( 335 ), plot ( x_22K , '.' ), grid % \u7e6a\u51fa 22K \u8a0a\u865f title ( '22K' ) subplot ( 336 ), specgram ( x_22K (:)), grid % \u7e6a\u51fa 22K \u8a0a\u865f \u983b\u8b5c\u5716 title ( '22K' ) subplot ( 337 ), plot ( x_40K , '.' ), grid % \u7e6a\u51fa 40K \u8a0a\u865f title ( '40K' ) subplot ( 338 ), plot ( x_8K , '.' ), grid % \u7e6a\u51fa8K \u8a0a\u865f title ( '8K' ) subplot ( 339 ), specgram ( x_8K (:)), grid % \u7e6a\u51fa 8K \u8a0a\u865f \u983b\u8b5c\u5716 title ( '8K' ) shg Running Screenshot Step-by-Step Step Prompt Description Audio 1 >> dsp3 Launch the program of Changing The Sampling Rate 2 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 10K \u8a9e\u97f3 Play the original voice before proceeded 3 \u5c07 10K \u8f49\u6210 22K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019... Changing the sample rate to 22K voice 4 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 22K \u8a9e\u97f3 Play the output voice after proceeded 5 \u5c07 10K \u8f49\u6210 8K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019... Changing the sample rate to 8K voice 6 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 8K \u8a9e\u97f3 Play the output voice after proceeded 7 >> Result \u25b2 \u5716\u5f62\u4e2d\u53ef\u89c0\u5bdf, Up Sampling \u8207 Down Sampling \u6642\u7684\u5931\u771f\u7a0b\u5ea6 - \u53f3\u908a\u70baupSampling,\u5230 110K \u8207 40K \u7684\u6ce2\u5f62\u3002 - \u4e2d\u9593\u4e0a\u9762\u70ba\u539f\u59cb\u6ce2\u5f62\u5916,\u4e0a\u81f3\u4e0b\u5404\u70ba downSampling \u5230 22K, \u8207 8K \u7684\u6ce2\u5f62\u3002 - \u5de6\u908a\u5373\u70ba 10K, 22K, 8K\u5206\u5225\u5c0d\u61c9\u7684\u983b\u8b5c\u5716. Observation Sampling Rate 22K 8K fdatools fdatools [Wc = 1 /11, order = 19 ] \u25b2\u4f7f\u7528 Butterworth filter ,\u4e26\u5c07\u4e4b\u8abf\u5230 Stable fdatools [ Wc = 1 /5, order = 30 ] \u25b2\u4f7f\u7528 Butterworth filter ,\u4e26\u5c07\u4e4b\u8abf\u5230 Stable Impulse Response Zero-pole plot Step Response Phase Response Conclusion \u89c0\u5bdf\u5f97\u77e5 Hamming Window \u7684\u80fd\u91cf\u8f03 Blackman window \u96c6\u4e2d. Overlap \u8b93\u76f8\u9130\u7684 \u6846(FRAME)\u770b\u8d77\u4f86\u8f03\u70ba\u5e73\u9806(smooth). Advanced \u53ef\u4ee5\u5229\u7528 Fdatools \u8a66\u8a66\u5176\u5b83\u578b\u5f0f IIR\u6216 FIR \u7684 \u6ffe\u6ce2\u5668. Comment \u5982\u679c Matlab 6.0 \u7121\u6cd5\u88ab\u5b89\u88dd\u5728 Intel Pentium 4 (\u542b Intel Celeron 1.8G \u4ee5\u4e0a ), \u53ef\u4ee5\u5617\u8a66\u5b89\u88dd Matlab 6.5 \u4ee5\u4e0a \u3002 Up Sampling \u5167\u7684\u7a0b\u5f0f\u5167\u7684\u5167\u5dee\u6cd5\uff0c\u70ba\u6c42\u7c21\u5316. Reference Book Discrete-Time Signal Processing Author: Alan V. Oppenheim,Ronald W.Schafer and John R.Buck, Publisher: Prentice Hall ISBN: 0-13-0834443-2 $author: Jin-Wen (Ed) Lai $initial: Dec. 2002 $revised: Mar. 2018 $keywords: dsp, digital, signal, processing, up sampling, down sampling, matlab, speech","title":"Discrete-Time Processing"},{"location":"dsp/discrete-time-processing/#discrete-time-processing","text":"An implementation of changing the 10K sampling-rate-voice to 22K sampling-rate-voice 8K sampling-rate-voice","title":"Discrete-Time Processing"},{"location":"dsp/discrete-time-processing/#requirements","text":"Matlab 6.5 CoolEdit 2000","title":"Requirements"},{"location":"dsp/discrete-time-processing/#programming","text":"%.............................................................................. % Filename : dsp2.m % Author : Ching-Wen,Lai % Running : running this .m file in Matlab % Description : Changing the Sampling Rate % % Date : 12/02/2002 ver2.0 % 1. \u66f4\u6b63 22K \u7684 butter filter \u6210 stable \u2013 \u6e1b\u5c11\u7206\u97f3\u73fe\u8c61 % 2. \u66f4\u6b63 8K butter filter , Wc=1/5 (\u53d6\u6700\u5c0f\u7684) % 3. \u66f4\u6b63 10K Plot \u932f\u8aa4 \u8207 \u65b0\u589e \u983b \u57df \u5716 \u5f62 % Requirement : speech_10K.wav (PCM \u683c\u5f0f ; sampling rate = 10K) % % Result : 1. speech_22K.wav (PCM \u683c\u5f0f ; sampling rate = 22K) % 2. speech_8K.wav (PCM \u683c\u5f0f ; sampling rate = 8K) % % References : Chapter 4.6 Changing The Sampling Rate using % Discrete-Time Processing % Book::Discrete-Time Signal Processing % (ISBN: 0-13-0834443-2 ) % % Comment : \u4f7f\u7528 \u77e9\u9663\u65b9\u5f0f \u8655\u7406 ,\u6bd4 \u7528Loop\u65b9\u5f0f\u8655\u7406(for...), \u901f\u5ea6\u5feb\u5f88\u591a %.............................................................................. clear all ; fs = 10000 ; % set sampling rate %============================================================================== % \u8f38\u5165 \u8655\u7406 10 K \u8a9e\u97f3\u8cc7\u6599 %============================================================================== [ x , fs ] = wavread ( 'speech_10K.wav' ); % loading the PCM speech file len = length ( x ); k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 10K \u8a9e\u97f3' ); % playing it wavplay ( x , fs ); %============================================================================== % \u9032\u884c DSP \u8655\u7406 (10K -> 110K --> 22K ) %============================================================================== fprintf ( '\u5c07 10K \u8f49\u6210 22K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019...\\n' ); %.............................................................................. % [ Up sampling ] 10K -> 110K % x_110K = { x[ n/len ] , n= 0,|L|,|2l|,... % { 0, Otherwise , \u53c3\u8003\u8ab2\u672c 4.84 \u5f0f(p.172) %.............................................................................. x_110K = [ zeros ( len , 10 ) x ]; x_110K = x_110K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 \u6210 \u8ab2\u672c 4.84\u5f0f %.............................................................................. % % \u4f7f\u7528 \u6642\u57df Butterworth \u6578\u4f4d\u6ffe\u6ce2\u5668 \u505a \u8a0a\u865f\u91cd\u5efa % \u540c\u983b\u57df sinc \u65b9\u5f0f\u91cd\u5efa ( \u8ab2\u672c 4.88\u5f0f ) %.............................................................................. [ b , a ] = butter ( 19 , 1 / 11 ); % 1/11 \u8207 1/5 \u53d6\u6700\u5c0f\u7684 x_110K = filter ( b , a , x_110K (:)); %.............................................................................. % [ Down sampling ] 110K -> 22K % X_110K[n] = X_22K [ nM ] , M = 1/5 % \u8ab2\u672c 4.71\u5f0f %.............................................................................. x_22K = reshape ( x_110K (:), 5 ,( len * 11 ) / 5 ); % \u91cd\u65b0\u5b89\u6392\u77e9\u9663\u7684\u5f62\u72c0 x_22K = x_22K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 x_22K = x_22K (:, 5 ) ; % M= 1/5, \u53d6\u51fa\u7b2c\u4e94\u884c %============================================================================== % \u8f38\u51fa \u8655\u7406\u7d50\u679c ( 10 K --> 22K ) %============================================================================== k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64a5\u653e 22K \u8072\u97f3' ); wavplay ( x_22K (:), fs * 2.2 ); wavwrite ( x_22K (:), fs * 2.2 , 16 , 'speech_22K.wav' ); %============================================================================== % \u9032\u884c DSP \u8655\u7406 (10K -> 40K --> 8K ) %============================================================================== fprintf ( '\u5c07 10K \u8f49\u6210 8K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019...\\n' ); %.............................................................................. % [ Up sampling ] 10K -> 40K % x_40K = { x[ n/len ] , n= 0,|L|,|2l|,... % { 0, Otherwise , \u53c3\u8003\u8ab2\u672c 4.84\u5f0f(p.172) %.............................................................................. x_40K = [ zeros ( len , 3 ) x ]; x_40K = x_40K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 %.............................................................................. % % \u4f7f\u7528 \u6642\u57df Butterworth \u6578\u4f4d\u6ffe\u6ce2\u5668 \u505a \u8a0a\u865f\u91cd\u5efa % \u540c\u983b\u57df sinc \u65b9\u5f0f\u91cd\u5efa ( \u8ab2\u672c 4.88\u5f0f ) %.............................................................................. [ b , a ] = butter ( 30 , 1 / 5 ); % 1/5 \u8207 1/4 \u53d6\u6700\u5c0f\u7684 x_40K = filter ( b , a , x_40K (:)); %.............................................................................. % [Down sampling ] 40K -> 8K % X_110K[n] = X_22K [ nM ] , M = 1/5 % \u8ab2\u672c 4.71\u5f0f %.............................................................................. x_8K = reshape ( x_40K (:), 5 ,( len * 4 ) / 5 ); % \u91cd\u65b0\u5b89\u6392\u77e9\u9663\u7684\u5f62\u72c0 x_8K = x_8K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 x_8K = x_8K (:, 5 ) ; % M=1/5, \u53d6\u51fa\u7b2c\u4e94\u884c %============================================================================== % \u8f38\u51fa \u8655\u7406\u7d50\u679c ( 10 K --> 8K ) %============================================================================== k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64a5\u653e 8K \u8072\u97f3' ); wavplay ( x_8K (:), fs * 0.8 ); wavwrite ( x_8K (:), fs * 0.8 , 16 , 'speech_8K.wav' ); %============================================================================== % \u7e6a\u51fa \u5404\u8655\u7406\u968e\u6bb5\u7684 \u8a0a\u865f ( 10K/ 110K/ 22K/ 40K/ 8K ), \u65b9\u4fbf \u6bd4\u8f03 %============================================================================== subplot ( 332 ), plot ( x (:), '.' ), grid % \u7e6a\u51fa \u539f\u59cb 10K \u8a0a\u865f title ( '10K' ) subplot ( 333 ), specgram ( x (:)), grid % \u7e6a\u51fa 10K \u8a0a\u865f \u983b\u8b5c\u5716 title ( '10K' ) subplot ( 334 ), plot ( x_110K , '.' ), grid % \u7e6a\u51fa 110K \u8a0a\u865f title ( '110K' ) subplot ( 335 ), plot ( x_22K , '.' ), grid % \u7e6a\u51fa 22K \u8a0a\u865f title ( '22K' ) subplot ( 336 ), specgram ( x_22K (:)), grid % \u7e6a\u51fa 22K \u8a0a\u865f \u983b\u8b5c\u5716 title ( '22K' ) subplot ( 337 ), plot ( x_40K , '.' ), grid % \u7e6a\u51fa 40K \u8a0a\u865f title ( '40K' ) subplot ( 338 ), plot ( x_8K , '.' ), grid % \u7e6a\u51fa8K \u8a0a\u865f title ( '8K' ) subplot ( 339 ), specgram ( x_8K (:)), grid % \u7e6a\u51fa 8K \u8a0a\u865f \u983b\u8b5c\u5716 title ( '8K' ) shg","title":"Programming"},{"location":"dsp/discrete-time-processing/#running","text":"","title":"Running"},{"location":"dsp/discrete-time-processing/#screenshot","text":"","title":"Screenshot"},{"location":"dsp/discrete-time-processing/#step-by-step","text":"Step Prompt Description Audio 1 >> dsp3 Launch the program of Changing The Sampling Rate 2 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 10K \u8a9e\u97f3 Play the original voice before proceeded 3 \u5c07 10K \u8f49\u6210 22K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019... Changing the sample rate to 22K voice 4 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 22K \u8a9e\u97f3 Play the output voice after proceeded 5 \u5c07 10K \u8f49\u6210 8K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019... Changing the sample rate to 8K voice 6 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 8K \u8a9e\u97f3 Play the output voice after proceeded 7 >>","title":"Step-by-Step"},{"location":"dsp/discrete-time-processing/#result","text":"\u25b2 \u5716\u5f62\u4e2d\u53ef\u89c0\u5bdf, Up Sampling \u8207 Down Sampling \u6642\u7684\u5931\u771f\u7a0b\u5ea6 - \u53f3\u908a\u70baupSampling,\u5230 110K \u8207 40K \u7684\u6ce2\u5f62\u3002 - \u4e2d\u9593\u4e0a\u9762\u70ba\u539f\u59cb\u6ce2\u5f62\u5916,\u4e0a\u81f3\u4e0b\u5404\u70ba downSampling \u5230 22K, \u8207 8K \u7684\u6ce2\u5f62\u3002 - \u5de6\u908a\u5373\u70ba 10K, 22K, 8K\u5206\u5225\u5c0d\u61c9\u7684\u983b\u8b5c\u5716.","title":"Result"},{"location":"dsp/discrete-time-processing/#observation","text":"Sampling Rate 22K 8K fdatools fdatools [Wc = 1 /11, order = 19 ] \u25b2\u4f7f\u7528 Butterworth filter ,\u4e26\u5c07\u4e4b\u8abf\u5230 Stable fdatools [ Wc = 1 /5, order = 30 ] \u25b2\u4f7f\u7528 Butterworth filter ,\u4e26\u5c07\u4e4b\u8abf\u5230 Stable Impulse Response Zero-pole plot Step Response Phase Response","title":"Observation"},{"location":"dsp/discrete-time-processing/#conclusion","text":"\u89c0\u5bdf\u5f97\u77e5 Hamming Window \u7684\u80fd\u91cf\u8f03 Blackman window \u96c6\u4e2d. Overlap \u8b93\u76f8\u9130\u7684 \u6846(FRAME)\u770b\u8d77\u4f86\u8f03\u70ba\u5e73\u9806(smooth).","title":"Conclusion"},{"location":"dsp/discrete-time-processing/#advanced","text":"\u53ef\u4ee5\u5229\u7528 Fdatools \u8a66\u8a66\u5176\u5b83\u578b\u5f0f IIR\u6216 FIR \u7684 \u6ffe\u6ce2\u5668.","title":"Advanced"},{"location":"dsp/discrete-time-processing/#comment","text":"\u5982\u679c Matlab 6.0 \u7121\u6cd5\u88ab\u5b89\u88dd\u5728 Intel Pentium 4 (\u542b Intel Celeron 1.8G \u4ee5\u4e0a ), \u53ef\u4ee5\u5617\u8a66\u5b89\u88dd Matlab 6.5 \u4ee5\u4e0a \u3002 Up Sampling \u5167\u7684\u7a0b\u5f0f\u5167\u7684\u5167\u5dee\u6cd5\uff0c\u70ba\u6c42\u7c21\u5316.","title":"Comment"},{"location":"dsp/discrete-time-processing/#reference","text":"","title":"Reference"},{"location":"dsp/discrete-time-processing/#book","text":"Discrete-Time Signal Processing Author: Alan V. Oppenheim,Ronald W.Schafer and John R.Buck, Publisher: Prentice Hall ISBN: 0-13-0834443-2 $author: Jin-Wen (Ed) Lai $initial: Dec. 2002 $revised: Mar. 2018 $keywords: dsp, digital, signal, processing, up sampling, down sampling, matlab, speech","title":"Book"},{"location":"dsp/discrete-time-processing/_index/","text":"Digital Signal Processing(DSP) Voice Processing - Discrete-Time Processing $author: Ching-Wen (Ed) Lai $initial: Dec. 2002 $revised: Mar. 2018 $keywords: dsp, digital, signal, processing, up sampling, down sampling, matlab, speech An implementation of changing the 10K sampling-rate-voice to 22K sampling-rate-voice 8K sampling-rate-voice Content Requirements Programming Running Screenshot Step-by-Step Result Observation Conclusion Advanced Comment Reference Requirements Matlab 6.5 CoolEdit 2000 Programming %.............................................................................. % Filename : dsp2.m % Author : Ching-Wen,Lai % Running : running this .m file in Matlab % Description : Changing the Sampling Rate % % Date : 12/02/2002 ver2.0 % 1. \u66f4\u6b63 22K \u7684 butter filter \u6210 stable \u2013 \u6e1b\u5c11\u7206\u97f3\u73fe\u8c61 % 2. \u66f4\u6b63 8K butter filter , Wc=1/5 (\u53d6\u6700\u5c0f\u7684) % 3. \u66f4\u6b63 10K Plot \u932f\u8aa4 \u8207 \u65b0\u589e \u983b \u57df \u5716 \u5f62 % Requirement : speech_10K.wav (PCM \u683c\u5f0f ; sampling rate = 10K) % % Result : 1. speech_22K.wav (PCM \u683c\u5f0f ; sampling rate = 22K) % 2. speech_8K.wav (PCM \u683c\u5f0f ; sampling rate = 8K) % % References : Chapter 4.6 Changing The Sampling Rate using % Discrete-Time Processing % Book::Discrete-Time Signal Processing % (ISBN: 0-13-0834443-2 ) % % Comment : \u4f7f\u7528 \u77e9\u9663\u65b9\u5f0f \u8655\u7406 ,\u6bd4 \u7528Loop\u65b9\u5f0f\u8655\u7406(for...), \u901f\u5ea6\u5feb\u5f88\u591a %.............................................................................. clear all ; fs = 10000 ; % set sampling rate %============================================================================== % \u8f38\u5165 \u8655\u7406 10 K \u8a9e\u97f3\u8cc7\u6599 %============================================================================== [ x , fs ] = wavread ( 'speech_10K.wav' ); % loading the PCM speech file len = length ( x ); k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 10K \u8a9e\u97f3' ); % playing it wavplay ( x , fs ); %============================================================================== % \u9032\u884c DSP \u8655\u7406 (10K -> 110K --> 22K ) %============================================================================== fprintf ( '\u5c07 10K \u8f49\u6210 22K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019...\\n' ); %.............................................................................. % [ Up sampling ] 10K -> 110K % x_110K = { x[ n/len ] , n= 0,|L|,|2l|,... % { 0, Otherwise , \u53c3\u8003\u8ab2\u672c 4.84 \u5f0f(p.172) %.............................................................................. x_110K = [ zeros ( len , 10 ) x ]; x_110K = x_110K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 \u6210 \u8ab2\u672c 4.84\u5f0f %.............................................................................. % % \u4f7f\u7528 \u6642\u57df Butterworth \u6578\u4f4d\u6ffe\u6ce2\u5668 \u505a \u8a0a\u865f\u91cd\u5efa % \u540c\u983b\u57df sinc \u65b9\u5f0f\u91cd\u5efa ( \u8ab2\u672c 4.88\u5f0f ) %.............................................................................. [ b , a ] = butter ( 19 , 1 / 11 ); % 1/11 \u8207 1/5 \u53d6\u6700\u5c0f\u7684 x_110K = filter ( b , a , x_110K (:)); %.............................................................................. % [ Down sampling ] 110K -> 22K % X_110K[n] = X_22K [ nM ] , M = 1/5 % \u8ab2\u672c 4.71\u5f0f %.............................................................................. x_22K = reshape ( x_110K (:), 5 ,( len * 11 ) / 5 ); % \u91cd\u65b0\u5b89\u6392\u77e9\u9663\u7684\u5f62\u72c0 x_22K = x_22K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 x_22K = x_22K (:, 5 ) ; % M= 1/5, \u53d6\u51fa\u7b2c\u4e94\u884c %============================================================================== % \u8f38\u51fa \u8655\u7406\u7d50\u679c ( 10 K --> 22K ) %============================================================================== k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64a5\u653e 22K \u8072\u97f3' ); wavplay ( x_22K (:), fs * 2.2 ); wavwrite ( x_22K (:), fs * 2.2 , 16 , 'speech_22K.wav' ); %============================================================================== % \u9032\u884c DSP \u8655\u7406 (10K -> 40K --> 8K ) %============================================================================== fprintf ( '\u5c07 10K \u8f49\u6210 8K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019...\\n' ); %.............................................................................. % [ Up sampling ] 10K -> 40K % x_40K = { x[ n/len ] , n= 0,|L|,|2l|,... % { 0, Otherwise , \u53c3\u8003\u8ab2\u672c 4.84\u5f0f(p.172) %.............................................................................. x_40K = [ zeros ( len , 3 ) x ]; x_40K = x_40K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 %.............................................................................. % % \u4f7f\u7528 \u6642\u57df Butterworth \u6578\u4f4d\u6ffe\u6ce2\u5668 \u505a \u8a0a\u865f\u91cd\u5efa % \u540c\u983b\u57df sinc \u65b9\u5f0f\u91cd\u5efa ( \u8ab2\u672c 4.88\u5f0f ) %.............................................................................. [ b , a ] = butter ( 30 , 1 / 5 ); % 1/5 \u8207 1/4 \u53d6\u6700\u5c0f\u7684 x_40K = filter ( b , a , x_40K (:)); %.............................................................................. % [Down sampling ] 40K -> 8K % X_110K[n] = X_22K [ nM ] , M = 1/5 % \u8ab2\u672c 4.71\u5f0f %.............................................................................. x_8K = reshape ( x_40K (:), 5 ,( len * 4 ) / 5 ); % \u91cd\u65b0\u5b89\u6392\u77e9\u9663\u7684\u5f62\u72c0 x_8K = x_8K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 x_8K = x_8K (:, 5 ) ; % M=1/5, \u53d6\u51fa\u7b2c\u4e94\u884c %============================================================================== % \u8f38\u51fa \u8655\u7406\u7d50\u679c ( 10 K --> 8K ) %============================================================================== k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64a5\u653e 8K \u8072\u97f3' ); wavplay ( x_8K (:), fs * 0.8 ); wavwrite ( x_8K (:), fs * 0.8 , 16 , 'speech_8K.wav' ); %============================================================================== % \u7e6a\u51fa \u5404\u8655\u7406\u968e\u6bb5\u7684 \u8a0a\u865f ( 10K/ 110K/ 22K/ 40K/ 8K ), \u65b9\u4fbf \u6bd4\u8f03 %============================================================================== subplot ( 332 ), plot ( x (:), '.' ), grid % \u7e6a\u51fa \u539f\u59cb 10K \u8a0a\u865f title ( '10K' ) subplot ( 333 ), specgram ( x (:)), grid % \u7e6a\u51fa 10K \u8a0a\u865f \u983b\u8b5c\u5716 title ( '10K' ) subplot ( 334 ), plot ( x_110K , '.' ), grid % \u7e6a\u51fa 110K \u8a0a\u865f title ( '110K' ) subplot ( 335 ), plot ( x_22K , '.' ), grid % \u7e6a\u51fa 22K \u8a0a\u865f title ( '22K' ) subplot ( 336 ), specgram ( x_22K (:)), grid % \u7e6a\u51fa 22K \u8a0a\u865f \u983b\u8b5c\u5716 title ( '22K' ) subplot ( 337 ), plot ( x_40K , '.' ), grid % \u7e6a\u51fa 40K \u8a0a\u865f title ( '40K' ) subplot ( 338 ), plot ( x_8K , '.' ), grid % \u7e6a\u51fa8K \u8a0a\u865f title ( '8K' ) subplot ( 339 ), specgram ( x_8K (:)), grid % \u7e6a\u51fa 8K \u8a0a\u865f \u983b\u8b5c\u5716 title ( '8K' ) shg Running Screenshot Step-by-Step Step Prompt Description Audio 1 >> dsp3 Launch the program of Changing The Sampling Rate 2 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 10K \u8a9e\u97f3 Play the original voice before proceeded 3 \u5c07 10K \u8f49\u6210 22K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019... Changing the sample rate to 22K voice 4 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 22K \u8a9e\u97f3 Play the output voice after proceeded 5 \u5c07 10K \u8f49\u6210 8K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019... Changing the sample rate to 8K voice 6 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 8K \u8a9e\u97f3 Play the output voice after proceeded 7 >> Result \u25b2 \u5716\u5f62\u4e2d\u53ef\u89c0\u5bdf, Up Sampling \u8207 Down Sampling \u6642\u7684\u5931\u771f\u7a0b\u5ea6 - \u53f3\u908a\u70baupSampling,\u5230 110K \u8207 40K \u7684\u6ce2\u5f62\u3002 - \u4e2d\u9593\u4e0a\u9762\u70ba\u539f\u59cb\u6ce2\u5f62\u5916,\u4e0a\u81f3\u4e0b\u5404\u70ba downSampling \u5230 22K, \u8207 8K \u7684\u6ce2\u5f62\u3002 - \u5de6\u908a\u5373\u70ba 10K, 22K, 8K\u5206\u5225\u5c0d\u61c9\u7684\u983b\u8b5c\u5716. Observation Sampling Rate 22K 8K fdatools fdatools [Wc = 1 /11, order = 19 ] \u25b2\u4f7f\u7528 Butterworth filter ,\u4e26\u5c07\u4e4b\u8abf\u5230 Stable fdatools [ Wc = 1 /5, order = 30 ] \u25b2\u4f7f\u7528 Butterworth filter ,\u4e26\u5c07\u4e4b\u8abf\u5230 Stable Impulse Response Zero-pole plot Step Response Phase Response Conclusion \u89c0\u5bdf\u5f97\u77e5 Hamming Window \u7684\u80fd\u91cf\u8f03 Blackman window \u96c6\u4e2d. Overlap \u8b93\u76f8\u9130\u7684 \u6846(FRAME)\u770b\u8d77\u4f86\u8f03\u70ba\u5e73\u9806(smooth). Advanced \u53ef\u4ee5\u5229\u7528 Fdatools \u8a66\u8a66\u5176\u5b83\u578b\u5f0f IIR\u6216 FIR \u7684 \u6ffe\u6ce2\u5668. Comment \u5982\u679c Matlab 6.0 \u7121\u6cd5\u88ab\u5b89\u88dd\u5728 Intel Pentium 4 (\u542b Intel Celeron 1.8G \u4ee5\u4e0a ), \u53ef\u4ee5\u5617\u8a66\u5b89\u88dd Matlab 6.5 \u4ee5\u4e0a \u3002 Up Sampling \u5167\u7684\u7a0b\u5f0f\u5167\u7684\u5167\u5dee\u6cd5\uff0c\u70ba\u6c42\u7c21\u5316. Reference Book Discrete-Time Signal Processing author: Alan V. Oppenheim,Ronald W.Schafer and John R.Buck, publisher: Prentice Hall isbn: 0-13-0834443-2","title":"Digital Signal Processing(DSP)"},{"location":"dsp/discrete-time-processing/_index/#digital-signal-processingdsp","text":"","title":"Digital Signal Processing(DSP)"},{"location":"dsp/discrete-time-processing/_index/#voice-processing-discrete-time-processing","text":"$author: Ching-Wen (Ed) Lai $initial: Dec. 2002 $revised: Mar. 2018 $keywords: dsp, digital, signal, processing, up sampling, down sampling, matlab, speech An implementation of changing the 10K sampling-rate-voice to 22K sampling-rate-voice 8K sampling-rate-voice","title":"Voice Processing - Discrete-Time Processing"},{"location":"dsp/discrete-time-processing/_index/#content","text":"Requirements Programming Running Screenshot Step-by-Step Result Observation Conclusion Advanced Comment Reference","title":"Content"},{"location":"dsp/discrete-time-processing/_index/#requirements","text":"Matlab 6.5 CoolEdit 2000","title":"Requirements"},{"location":"dsp/discrete-time-processing/_index/#programming","text":"%.............................................................................. % Filename : dsp2.m % Author : Ching-Wen,Lai % Running : running this .m file in Matlab % Description : Changing the Sampling Rate % % Date : 12/02/2002 ver2.0 % 1. \u66f4\u6b63 22K \u7684 butter filter \u6210 stable \u2013 \u6e1b\u5c11\u7206\u97f3\u73fe\u8c61 % 2. \u66f4\u6b63 8K butter filter , Wc=1/5 (\u53d6\u6700\u5c0f\u7684) % 3. \u66f4\u6b63 10K Plot \u932f\u8aa4 \u8207 \u65b0\u589e \u983b \u57df \u5716 \u5f62 % Requirement : speech_10K.wav (PCM \u683c\u5f0f ; sampling rate = 10K) % % Result : 1. speech_22K.wav (PCM \u683c\u5f0f ; sampling rate = 22K) % 2. speech_8K.wav (PCM \u683c\u5f0f ; sampling rate = 8K) % % References : Chapter 4.6 Changing The Sampling Rate using % Discrete-Time Processing % Book::Discrete-Time Signal Processing % (ISBN: 0-13-0834443-2 ) % % Comment : \u4f7f\u7528 \u77e9\u9663\u65b9\u5f0f \u8655\u7406 ,\u6bd4 \u7528Loop\u65b9\u5f0f\u8655\u7406(for...), \u901f\u5ea6\u5feb\u5f88\u591a %.............................................................................. clear all ; fs = 10000 ; % set sampling rate %============================================================================== % \u8f38\u5165 \u8655\u7406 10 K \u8a9e\u97f3\u8cc7\u6599 %============================================================================== [ x , fs ] = wavread ( 'speech_10K.wav' ); % loading the PCM speech file len = length ( x ); k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 10K \u8a9e\u97f3' ); % playing it wavplay ( x , fs ); %============================================================================== % \u9032\u884c DSP \u8655\u7406 (10K -> 110K --> 22K ) %============================================================================== fprintf ( '\u5c07 10K \u8f49\u6210 22K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019...\\n' ); %.............................................................................. % [ Up sampling ] 10K -> 110K % x_110K = { x[ n/len ] , n= 0,|L|,|2l|,... % { 0, Otherwise , \u53c3\u8003\u8ab2\u672c 4.84 \u5f0f(p.172) %.............................................................................. x_110K = [ zeros ( len , 10 ) x ]; x_110K = x_110K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 \u6210 \u8ab2\u672c 4.84\u5f0f %.............................................................................. % % \u4f7f\u7528 \u6642\u57df Butterworth \u6578\u4f4d\u6ffe\u6ce2\u5668 \u505a \u8a0a\u865f\u91cd\u5efa % \u540c\u983b\u57df sinc \u65b9\u5f0f\u91cd\u5efa ( \u8ab2\u672c 4.88\u5f0f ) %.............................................................................. [ b , a ] = butter ( 19 , 1 / 11 ); % 1/11 \u8207 1/5 \u53d6\u6700\u5c0f\u7684 x_110K = filter ( b , a , x_110K (:)); %.............................................................................. % [ Down sampling ] 110K -> 22K % X_110K[n] = X_22K [ nM ] , M = 1/5 % \u8ab2\u672c 4.71\u5f0f %.............................................................................. x_22K = reshape ( x_110K (:), 5 ,( len * 11 ) / 5 ); % \u91cd\u65b0\u5b89\u6392\u77e9\u9663\u7684\u5f62\u72c0 x_22K = x_22K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 x_22K = x_22K (:, 5 ) ; % M= 1/5, \u53d6\u51fa\u7b2c\u4e94\u884c %============================================================================== % \u8f38\u51fa \u8655\u7406\u7d50\u679c ( 10 K --> 22K ) %============================================================================== k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64a5\u653e 22K \u8072\u97f3' ); wavplay ( x_22K (:), fs * 2.2 ); wavwrite ( x_22K (:), fs * 2.2 , 16 , 'speech_22K.wav' ); %============================================================================== % \u9032\u884c DSP \u8655\u7406 (10K -> 40K --> 8K ) %============================================================================== fprintf ( '\u5c07 10K \u8f49\u6210 8K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019...\\n' ); %.............................................................................. % [ Up sampling ] 10K -> 40K % x_40K = { x[ n/len ] , n= 0,|L|,|2l|,... % { 0, Otherwise , \u53c3\u8003\u8ab2\u672c 4.84\u5f0f(p.172) %.............................................................................. x_40K = [ zeros ( len , 3 ) x ]; x_40K = x_40K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 %.............................................................................. % % \u4f7f\u7528 \u6642\u57df Butterworth \u6578\u4f4d\u6ffe\u6ce2\u5668 \u505a \u8a0a\u865f\u91cd\u5efa % \u540c\u983b\u57df sinc \u65b9\u5f0f\u91cd\u5efa ( \u8ab2\u672c 4.88\u5f0f ) %.............................................................................. [ b , a ] = butter ( 30 , 1 / 5 ); % 1/5 \u8207 1/4 \u53d6\u6700\u5c0f\u7684 x_40K = filter ( b , a , x_40K (:)); %.............................................................................. % [Down sampling ] 40K -> 8K % X_110K[n] = X_22K [ nM ] , M = 1/5 % \u8ab2\u672c 4.71\u5f0f %.............................................................................. x_8K = reshape ( x_40K (:), 5 ,( len * 4 ) / 5 ); % \u91cd\u65b0\u5b89\u6392\u77e9\u9663\u7684\u5f62\u72c0 x_8K = x_8K ' ; % \u8f49\u7f6e\u8a72\u77e9\u9663 x_8K = x_8K (:, 5 ) ; % M=1/5, \u53d6\u51fa\u7b2c\u4e94\u884c %============================================================================== % \u8f38\u51fa \u8655\u7406\u7d50\u679c ( 10 K --> 8K ) %============================================================================== k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64a5\u653e 8K \u8072\u97f3' ); wavplay ( x_8K (:), fs * 0.8 ); wavwrite ( x_8K (:), fs * 0.8 , 16 , 'speech_8K.wav' ); %============================================================================== % \u7e6a\u51fa \u5404\u8655\u7406\u968e\u6bb5\u7684 \u8a0a\u865f ( 10K/ 110K/ 22K/ 40K/ 8K ), \u65b9\u4fbf \u6bd4\u8f03 %============================================================================== subplot ( 332 ), plot ( x (:), '.' ), grid % \u7e6a\u51fa \u539f\u59cb 10K \u8a0a\u865f title ( '10K' ) subplot ( 333 ), specgram ( x (:)), grid % \u7e6a\u51fa 10K \u8a0a\u865f \u983b\u8b5c\u5716 title ( '10K' ) subplot ( 334 ), plot ( x_110K , '.' ), grid % \u7e6a\u51fa 110K \u8a0a\u865f title ( '110K' ) subplot ( 335 ), plot ( x_22K , '.' ), grid % \u7e6a\u51fa 22K \u8a0a\u865f title ( '22K' ) subplot ( 336 ), specgram ( x_22K (:)), grid % \u7e6a\u51fa 22K \u8a0a\u865f \u983b\u8b5c\u5716 title ( '22K' ) subplot ( 337 ), plot ( x_40K , '.' ), grid % \u7e6a\u51fa 40K \u8a0a\u865f title ( '40K' ) subplot ( 338 ), plot ( x_8K , '.' ), grid % \u7e6a\u51fa8K \u8a0a\u865f title ( '8K' ) subplot ( 339 ), specgram ( x_8K (:)), grid % \u7e6a\u51fa 8K \u8a0a\u865f \u983b\u8b5c\u5716 title ( '8K' ) shg","title":"Programming"},{"location":"dsp/discrete-time-processing/_index/#running","text":"","title":"Running"},{"location":"dsp/discrete-time-processing/_index/#screenshot","text":"","title":"Screenshot"},{"location":"dsp/discrete-time-processing/_index/#step-by-step","text":"Step Prompt Description Audio 1 >> dsp3 Launch the program of Changing The Sampling Rate 2 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 10K \u8a9e\u97f3 Play the original voice before proceeded 3 \u5c07 10K \u8f49\u6210 22K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019... Changing the sample rate to 22K voice 4 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 22K \u8a9e\u97f3 Play the output voice after proceeded 5 \u5c07 10K \u8f49\u6210 8K \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019... Changing the sample rate to 8K voice 6 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64ad\u653e 8K \u8a9e\u97f3 Play the output voice after proceeded 7 >>","title":"Step-by-Step"},{"location":"dsp/discrete-time-processing/_index/#result","text":"\u25b2 \u5716\u5f62\u4e2d\u53ef\u89c0\u5bdf, Up Sampling \u8207 Down Sampling \u6642\u7684\u5931\u771f\u7a0b\u5ea6 - \u53f3\u908a\u70baupSampling,\u5230 110K \u8207 40K \u7684\u6ce2\u5f62\u3002 - \u4e2d\u9593\u4e0a\u9762\u70ba\u539f\u59cb\u6ce2\u5f62\u5916,\u4e0a\u81f3\u4e0b\u5404\u70ba downSampling \u5230 22K, \u8207 8K \u7684\u6ce2\u5f62\u3002 - \u5de6\u908a\u5373\u70ba 10K, 22K, 8K\u5206\u5225\u5c0d\u61c9\u7684\u983b\u8b5c\u5716.","title":"Result"},{"location":"dsp/discrete-time-processing/_index/#observation","text":"Sampling Rate 22K 8K fdatools fdatools [Wc = 1 /11, order = 19 ] \u25b2\u4f7f\u7528 Butterworth filter ,\u4e26\u5c07\u4e4b\u8abf\u5230 Stable fdatools [ Wc = 1 /5, order = 30 ] \u25b2\u4f7f\u7528 Butterworth filter ,\u4e26\u5c07\u4e4b\u8abf\u5230 Stable Impulse Response Zero-pole plot Step Response Phase Response","title":"Observation"},{"location":"dsp/discrete-time-processing/_index/#conclusion","text":"\u89c0\u5bdf\u5f97\u77e5 Hamming Window \u7684\u80fd\u91cf\u8f03 Blackman window \u96c6\u4e2d. Overlap \u8b93\u76f8\u9130\u7684 \u6846(FRAME)\u770b\u8d77\u4f86\u8f03\u70ba\u5e73\u9806(smooth).","title":"Conclusion"},{"location":"dsp/discrete-time-processing/_index/#advanced","text":"\u53ef\u4ee5\u5229\u7528 Fdatools \u8a66\u8a66\u5176\u5b83\u578b\u5f0f IIR\u6216 FIR \u7684 \u6ffe\u6ce2\u5668.","title":"Advanced"},{"location":"dsp/discrete-time-processing/_index/#comment","text":"\u5982\u679c Matlab 6.0 \u7121\u6cd5\u88ab\u5b89\u88dd\u5728 Intel Pentium 4 (\u542b Intel Celeron 1.8G \u4ee5\u4e0a ), \u53ef\u4ee5\u5617\u8a66\u5b89\u88dd Matlab 6.5 \u4ee5\u4e0a \u3002 Up Sampling \u5167\u7684\u7a0b\u5f0f\u5167\u7684\u5167\u5dee\u6cd5\uff0c\u70ba\u6c42\u7c21\u5316.","title":"Comment"},{"location":"dsp/discrete-time-processing/_index/#reference","text":"","title":"Reference"},{"location":"dsp/discrete-time-processing/_index/#book","text":"Discrete-Time Signal Processing author: Alan V. Oppenheim,Ronald W.Schafer and John R.Buck, publisher: Prentice Hall isbn: 0-13-0834443-2","title":"Book"},{"location":"dsp/moving-average-and-backward-system/","text":"Moving Average and Backward System An implementation of using below methods to process human voice and comparing their output results Backward System (High-Pass Filter) Moving Average (Low-Pass Filter) Requirements Voice Recorder (Windows), for recording human voice Matlab 6.5, for processing the original voice and export the results Backward System Programming %.............................................................................. % Filename : b.m % Author : Ching-Wen,Lai % Running : running this .m file in Matlab % Description : High-Pass-Filter % % Date : 10/21 2002 ver1.0 % Input Voice : speech.wav (PCM \u683c\u5f0f) % Output Voice : speech_m.wav(PCM \u683c\u5f0f) % % References : Backward System % Book : Discrete-Time Signal Processing % (ISBN: 0-13-0834443-2 p.21(2.45\u5f0f) %.............................................................................. fs = 8000 ; % .......................... \u8a9e\u97f3\u53d6\u6a23\u958b\u59cb .................................. [ x , fs ] = wavread ( 'speech.wav' ); % \u8b80\u53d6 speech.wav \u6a94\u6848\u5167\u7684\u8a9e\u97f3\u6a23\u672c k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64a5\u653e\u8655\u7406 \u524d \u8072\u97f3' ); wavplay ( x , fs ); % \u8655\u7406\u524d\u5148\u8a66\u807d\u8a72\u8a9e\u97f3\u6a23\u672c % ............ \u9032\u884c DSP \u8655\u7406 \u3010 Backward System \u3011......................... fprintf ( '\u8655\u7406\u4e2d,\u8acb\u7a0d\u5019...\\n' ); len = length ( x ); for n = 1 : len , % n :: \u8a9e\u97f3\u8cc7\u6599\u6578\u76ee if n == 1 y ( n ) = x ( n ); % Backward System \u7b2c\u4e00\u7b46\u4e0d\u4f5c\u7d2f\u8a08 else y ( n ) = x ( n ) - x ( n - 1 ); % \u5c07\u4e4b\u524d\u53d6\u6a23\u503c\u62ff\u4f86\u8207\u76ee\u524d\u7684\u76f8\u6e1b end end % ......... DSP \u8655\u7406\u5f8c\u7d50\u679c::\u7522\u751f\u6ce2\u578b\u5716\u8207\u983b\u8b5c ..................................... k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64a5\u653e\u8655\u7406 \u5f8c \u8072\u97f3' ); wavplay ( y , fs ); % \u807d\u8655\u7406\u540e\u8072\u97f3 wavwrite ( y , fs , 16 , 'speech_b.wav' ); % \u5beb\u5165 speech_b.wav \u6a94 subplot ( 221 ), plot (( 1 : length ( x )), x ); subplot ( 223 ), specgram ( x (:)); subplot ( 222 ), plot (( 1 : length ( y )), y ); subplot ( 224 ), specgram ( y (:)); shg Screenshot Step-by-Step Step Prompt Description Audio 1 >> b Launch the program of Backward System 2 \u8acb\u6309\u4e0b\u4efb\u4e00\u9375\u64a5\u653e\u8655\u7406\u524d\u8072\u97f3 Play the original voice before proceeded 3 \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019... Running Backward System 4 \u8acb\u6309\u4e0b\u4efb\u4e00\u9375\u64a5\u653e\u8655\u7406\u5f8c\u8072\u97f3 Play the output voice before proceeded 5 >> Moving Average Programming %........................................................................................ % Filename : m.m % Author : Ching-Wen,Lai % Running : running this .m file in Matlab % Description : Low-pass-Filter % % Date : 10/21 2002 ver1.0 % Input Voice : speech.wav (PCM \u683c\u5f0f) % Output Voice : speech_m.wav(PCM \u683c\u5f0f) % Advanced : \u7531\u65bc\u7a0b\u5f0f\u5728\u4f5c\u7d2f\u52a0\u8207\u5e73\u5747\u7684\u5de5\u4f5c\u3002\u6b64\u6b21\u7d2f\u52a0\u503c\u53ea\u8207\u4e0a\u4e00\u7b46\u5dee\u4e00\u7b46\u65b0\u503c\u8207\u4e00\u7b46\u820a\u503c\uff0c % \u6545\u7d2f\u52a0\u52d5\u4f5c\u53ef\u4ee5\u6539\u6210\u53ea\u6709\u7b2c\u4e00\u6b21\u4f5c\u7d2f\u52a0\uff0c \u4e4b\u5f8c\u4f5c\u52a0\u4e0a\u53bb\u65b0\u503c\u8207\u6e1b\u53bb\u4e00\u7b46\u820a\u503c(\u4e4b\u524d % \u7684\u6700\u524d\u53d6\u6a23\u9ede)\uff0c\u5982\u6b64\u7d2f\u52a0\u7684\u52d5\u4f5c\u6703\u8f03\u5feb\u3002\u4f46\u76ee\u524d\u70ba\u65b9\u4fbf\uff0c\u76f4\u63a5\u642d\u914d\u8ab2\u672c\u6613\u95b1\u8b80\u65bc, % \u76ee\u524d\u4e26\u7121\u6b64\u52d5\u4f5c % Reference : Moving Average % BOOK: Discrete-Time Signal Processing % (ISBN: 0-13-0834443-2 p.17(2.24\u5f0f) %........................................................................................ fs = 8000 ; % Set sampling rate % ................................ \u8a9e\u97f3\u6a94\u8f38\u5165 ................................ [ x , fs ] = wavread ( 'speech.wav' ); k = input ( '\u8acb\u6309\u4e0b [Enter] \u9375 \u64a5\u653e\u8655\u7406 \u524d \u8072\u97f3' ); wavplay ( x , fs ); % ...................... \u9032\u884c DSP \u8655\u7406 \u3010 Moving Average \u3011........................ m1 = input ( '\u8acb\u8f38\u5165 M1 \u503c :: ' ); % M1 \u63a7\u5236 \u6bd4 n \u9ede \u5927\u7684\u53d6\u6a23\u6578 m2 = input ( '\u8acb\u8f38\u5165 M2 \u503c :: ' ); % M2 \u63a7\u5236 \u6bd4 n \u9ede \u5c0f\u7684\u53d6\u6a23\u6578 fprintf ( '\\n\u8655\u7406\u4e2d,\u8acb\u7a0d\u5019...\\n' ); len = length ( x ); for n = 1 : len , % n :: \u8a9e\u97f3\u8cc7\u6599\u6578\u76ee if ( n & gt ;= m2 + 1 ) & ( n & lt ;= len - m1 ) % \u53ea\u6709\u5728 Moving Average \u7684\u7bc4\u570d\u5167\u624d\u4f5c\u8655\u7406 sum = 0 ; for k = - m1 : m2 , % k = -m1 ~ m2 sum = sum + x ( n - k ); % \u53d6\u503c\u653e\u5165sum\u4f5c\u7d2f\u7e3d end y ( n ) = sum / ( m1 + m2 + 1 ); % \u6c42\u51fa\u7d2f\u52a0\u5f8c \u7684\u5e73\u5747\u503c else y ( n ) = x ( n ); %fprintf('\u7b2c %d \u9ede\u6578\u64da,\u4e0d\u4f5c\u53d6\u6a23\\n',n); % Check \u7528 end end % ........... DSP \u8655\u7406\u5f8c\u7d50\u679c::\u7522\u751f\u6ce2\u578b\u5716\u8207\u983b\u8b5c ............... k = input ( '\u8acb\u6309\u4e0b [Enter] \u64a5\u653e\u8655\u7406 \u5f8c \u8072\u97f3' ); wavplay ( y , fs ); wavwrite ( y , fs , 16 , 'speech_m.wav' ); % \u5beb\u5165 speech_m.wav \u6a94 subplot ( 221 ), plot (( 1 : length ( x )), x ); subplot ( 223 ), specgram ( x (:)); subplot ( 222 ), plot (( 1 : length ( y )), y ); subplot ( 224 ), specgram ( y (:)); shg Screenshot Step-by-Step Step Prompt Description Audio 1 >> m Launch the program of Moving Average 2 \u8acb\u6309\u4e0b [Enter] \u9375\u64a5\u653e\u8655\u7406\u524d\u8072\u97f3 Play the original voice before proceeded 3 \u8acb\u8f38\u5165 M1 \u503c :: \u8f38\u5165 Moving Average \u7531\u539f\u9ede\u4e4b\u5f8c,\u8981\u4e00\u8d77\u505a\u5e73\u5747\u7684\u8a9e\u97f3\u8a0a\u865f Range 4 \u8acb\u8f38\u5165 M2 \u503c :: \u8f38\u5165 Moving Average \u7531\u539f\u9ede\u4e4b\u524d,\u8981\u4e00\u8d77\u505a\u5e73\u5747\u7684\u8a9e\u97f3\u8a0a\u865f Range ... 5 \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019... Running Moving Average 6 \u8acb\u6309\u4e0b [Enter] \u64a5\u653e\u8655\u7406 \u5f8c \u8072\u97f3 Play the output voice after proceeded PLAY 7 >> Analysis Backward System Moving Average: \u25b2 From Spectrogram we learned this function is for High-Pass filter \u25b2 From Spectrogram we learned this function is for Low-Pass filter Conclusion \u89c0\u5bdf\u53ef\u5f97, \u7d93\u904eBackward System \u8655\u7406\u5f8c\u8a9e\u97f3\u8f03\u70ba\u9ad8\u4ea2\uff0c\u800c\u7d93\u904e Moving Average \u8655\u7406\u5f8c\u8a9e\u97f3\u8f03\u70ba\u4f4e\u6c89. Voice Audio Original voice The Voice after running Backward System The Voice after running Moving Average Advanced could be tried to use VHDL/Verilog to implement Moving Average and Backward System Comment try to use Matlab 6.5 if Matlab 6.0 cannot be installed for CPU Intel Pentium 4 Reference Discrete-Time Signal Processing author: Alan V. Oppenheim,Ronald W.Schafer and John R.Buck, publisher: Prentice Hall isbn: 0-13-0834443-2 $author: Jing-Wen (Ed) Lai $initial: Nov. 2002 $revised: Mar. 2018 $keywords: dsp, digital, signal, processing, voice, moving average, backward system, matlab, speech","title":"Moving Average and Backward System"},{"location":"dsp/moving-average-and-backward-system/#moving-average-and-backward-system","text":"An implementation of using below methods to process human voice and comparing their output results Backward System (High-Pass Filter) Moving Average (Low-Pass Filter)","title":"Moving Average and Backward System"},{"location":"dsp/moving-average-and-backward-system/#requirements","text":"Voice Recorder (Windows), for recording human voice Matlab 6.5, for processing the original voice and export the results","title":"Requirements"},{"location":"dsp/moving-average-and-backward-system/#backward-system","text":"","title":"Backward System"},{"location":"dsp/moving-average-and-backward-system/#programming","text":"%.............................................................................. % Filename : b.m % Author : Ching-Wen,Lai % Running : running this .m file in Matlab % Description : High-Pass-Filter % % Date : 10/21 2002 ver1.0 % Input Voice : speech.wav (PCM \u683c\u5f0f) % Output Voice : speech_m.wav(PCM \u683c\u5f0f) % % References : Backward System % Book : Discrete-Time Signal Processing % (ISBN: 0-13-0834443-2 p.21(2.45\u5f0f) %.............................................................................. fs = 8000 ; % .......................... \u8a9e\u97f3\u53d6\u6a23\u958b\u59cb .................................. [ x , fs ] = wavread ( 'speech.wav' ); % \u8b80\u53d6 speech.wav \u6a94\u6848\u5167\u7684\u8a9e\u97f3\u6a23\u672c k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64a5\u653e\u8655\u7406 \u524d \u8072\u97f3' ); wavplay ( x , fs ); % \u8655\u7406\u524d\u5148\u8a66\u807d\u8a72\u8a9e\u97f3\u6a23\u672c % ............ \u9032\u884c DSP \u8655\u7406 \u3010 Backward System \u3011......................... fprintf ( '\u8655\u7406\u4e2d,\u8acb\u7a0d\u5019...\\n' ); len = length ( x ); for n = 1 : len , % n :: \u8a9e\u97f3\u8cc7\u6599\u6578\u76ee if n == 1 y ( n ) = x ( n ); % Backward System \u7b2c\u4e00\u7b46\u4e0d\u4f5c\u7d2f\u8a08 else y ( n ) = x ( n ) - x ( n - 1 ); % \u5c07\u4e4b\u524d\u53d6\u6a23\u503c\u62ff\u4f86\u8207\u76ee\u524d\u7684\u76f8\u6e1b end end % ......... DSP \u8655\u7406\u5f8c\u7d50\u679c::\u7522\u751f\u6ce2\u578b\u5716\u8207\u983b\u8b5c ..................................... k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u64a5\u653e\u8655\u7406 \u5f8c \u8072\u97f3' ); wavplay ( y , fs ); % \u807d\u8655\u7406\u540e\u8072\u97f3 wavwrite ( y , fs , 16 , 'speech_b.wav' ); % \u5beb\u5165 speech_b.wav \u6a94 subplot ( 221 ), plot (( 1 : length ( x )), x ); subplot ( 223 ), specgram ( x (:)); subplot ( 222 ), plot (( 1 : length ( y )), y ); subplot ( 224 ), specgram ( y (:)); shg","title":"Programming"},{"location":"dsp/moving-average-and-backward-system/#screenshot","text":"","title":"Screenshot"},{"location":"dsp/moving-average-and-backward-system/#step-by-step","text":"Step Prompt Description Audio 1 >> b Launch the program of Backward System 2 \u8acb\u6309\u4e0b\u4efb\u4e00\u9375\u64a5\u653e\u8655\u7406\u524d\u8072\u97f3 Play the original voice before proceeded 3 \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019... Running Backward System 4 \u8acb\u6309\u4e0b\u4efb\u4e00\u9375\u64a5\u653e\u8655\u7406\u5f8c\u8072\u97f3 Play the output voice before proceeded 5 >>","title":"Step-by-Step"},{"location":"dsp/moving-average-and-backward-system/#moving-average","text":"","title":"Moving Average"},{"location":"dsp/moving-average-and-backward-system/#programming_1","text":"%........................................................................................ % Filename : m.m % Author : Ching-Wen,Lai % Running : running this .m file in Matlab % Description : Low-pass-Filter % % Date : 10/21 2002 ver1.0 % Input Voice : speech.wav (PCM \u683c\u5f0f) % Output Voice : speech_m.wav(PCM \u683c\u5f0f) % Advanced : \u7531\u65bc\u7a0b\u5f0f\u5728\u4f5c\u7d2f\u52a0\u8207\u5e73\u5747\u7684\u5de5\u4f5c\u3002\u6b64\u6b21\u7d2f\u52a0\u503c\u53ea\u8207\u4e0a\u4e00\u7b46\u5dee\u4e00\u7b46\u65b0\u503c\u8207\u4e00\u7b46\u820a\u503c\uff0c % \u6545\u7d2f\u52a0\u52d5\u4f5c\u53ef\u4ee5\u6539\u6210\u53ea\u6709\u7b2c\u4e00\u6b21\u4f5c\u7d2f\u52a0\uff0c \u4e4b\u5f8c\u4f5c\u52a0\u4e0a\u53bb\u65b0\u503c\u8207\u6e1b\u53bb\u4e00\u7b46\u820a\u503c(\u4e4b\u524d % \u7684\u6700\u524d\u53d6\u6a23\u9ede)\uff0c\u5982\u6b64\u7d2f\u52a0\u7684\u52d5\u4f5c\u6703\u8f03\u5feb\u3002\u4f46\u76ee\u524d\u70ba\u65b9\u4fbf\uff0c\u76f4\u63a5\u642d\u914d\u8ab2\u672c\u6613\u95b1\u8b80\u65bc, % \u76ee\u524d\u4e26\u7121\u6b64\u52d5\u4f5c % Reference : Moving Average % BOOK: Discrete-Time Signal Processing % (ISBN: 0-13-0834443-2 p.17(2.24\u5f0f) %........................................................................................ fs = 8000 ; % Set sampling rate % ................................ \u8a9e\u97f3\u6a94\u8f38\u5165 ................................ [ x , fs ] = wavread ( 'speech.wav' ); k = input ( '\u8acb\u6309\u4e0b [Enter] \u9375 \u64a5\u653e\u8655\u7406 \u524d \u8072\u97f3' ); wavplay ( x , fs ); % ...................... \u9032\u884c DSP \u8655\u7406 \u3010 Moving Average \u3011........................ m1 = input ( '\u8acb\u8f38\u5165 M1 \u503c :: ' ); % M1 \u63a7\u5236 \u6bd4 n \u9ede \u5927\u7684\u53d6\u6a23\u6578 m2 = input ( '\u8acb\u8f38\u5165 M2 \u503c :: ' ); % M2 \u63a7\u5236 \u6bd4 n \u9ede \u5c0f\u7684\u53d6\u6a23\u6578 fprintf ( '\\n\u8655\u7406\u4e2d,\u8acb\u7a0d\u5019...\\n' ); len = length ( x ); for n = 1 : len , % n :: \u8a9e\u97f3\u8cc7\u6599\u6578\u76ee if ( n & gt ;= m2 + 1 ) & ( n & lt ;= len - m1 ) % \u53ea\u6709\u5728 Moving Average \u7684\u7bc4\u570d\u5167\u624d\u4f5c\u8655\u7406 sum = 0 ; for k = - m1 : m2 , % k = -m1 ~ m2 sum = sum + x ( n - k ); % \u53d6\u503c\u653e\u5165sum\u4f5c\u7d2f\u7e3d end y ( n ) = sum / ( m1 + m2 + 1 ); % \u6c42\u51fa\u7d2f\u52a0\u5f8c \u7684\u5e73\u5747\u503c else y ( n ) = x ( n ); %fprintf('\u7b2c %d \u9ede\u6578\u64da,\u4e0d\u4f5c\u53d6\u6a23\\n',n); % Check \u7528 end end % ........... DSP \u8655\u7406\u5f8c\u7d50\u679c::\u7522\u751f\u6ce2\u578b\u5716\u8207\u983b\u8b5c ............... k = input ( '\u8acb\u6309\u4e0b [Enter] \u64a5\u653e\u8655\u7406 \u5f8c \u8072\u97f3' ); wavplay ( y , fs ); wavwrite ( y , fs , 16 , 'speech_m.wav' ); % \u5beb\u5165 speech_m.wav \u6a94 subplot ( 221 ), plot (( 1 : length ( x )), x ); subplot ( 223 ), specgram ( x (:)); subplot ( 222 ), plot (( 1 : length ( y )), y ); subplot ( 224 ), specgram ( y (:)); shg","title":"Programming"},{"location":"dsp/moving-average-and-backward-system/#screenshot_1","text":"","title":"Screenshot"},{"location":"dsp/moving-average-and-backward-system/#step-by-step_1","text":"Step Prompt Description Audio 1 >> m Launch the program of Moving Average 2 \u8acb\u6309\u4e0b [Enter] \u9375\u64a5\u653e\u8655\u7406\u524d\u8072\u97f3 Play the original voice before proceeded 3 \u8acb\u8f38\u5165 M1 \u503c :: \u8f38\u5165 Moving Average \u7531\u539f\u9ede\u4e4b\u5f8c,\u8981\u4e00\u8d77\u505a\u5e73\u5747\u7684\u8a9e\u97f3\u8a0a\u865f Range 4 \u8acb\u8f38\u5165 M2 \u503c :: \u8f38\u5165 Moving Average \u7531\u539f\u9ede\u4e4b\u524d,\u8981\u4e00\u8d77\u505a\u5e73\u5747\u7684\u8a9e\u97f3\u8a0a\u865f Range ... 5 \u8655\u7406\u4e2d,\u8acb\u7a0d\u5019... Running Moving Average 6 \u8acb\u6309\u4e0b [Enter] \u64a5\u653e\u8655\u7406 \u5f8c \u8072\u97f3 Play the output voice after proceeded PLAY 7 >>","title":"Step-by-Step"},{"location":"dsp/moving-average-and-backward-system/#analysis","text":"Backward System Moving Average: \u25b2 From Spectrogram we learned this function is for High-Pass filter \u25b2 From Spectrogram we learned this function is for Low-Pass filter","title":"Analysis"},{"location":"dsp/moving-average-and-backward-system/#conclusion","text":"\u89c0\u5bdf\u53ef\u5f97, \u7d93\u904eBackward System \u8655\u7406\u5f8c\u8a9e\u97f3\u8f03\u70ba\u9ad8\u4ea2\uff0c\u800c\u7d93\u904e Moving Average \u8655\u7406\u5f8c\u8a9e\u97f3\u8f03\u70ba\u4f4e\u6c89. Voice Audio Original voice The Voice after running Backward System The Voice after running Moving Average","title":"Conclusion"},{"location":"dsp/moving-average-and-backward-system/#advanced","text":"could be tried to use VHDL/Verilog to implement Moving Average and Backward System","title":"Advanced"},{"location":"dsp/moving-average-and-backward-system/#comment","text":"try to use Matlab 6.5 if Matlab 6.0 cannot be installed for CPU Intel Pentium 4","title":"Comment"},{"location":"dsp/moving-average-and-backward-system/#reference","text":"Discrete-Time Signal Processing author: Alan V. Oppenheim,Ronald W.Schafer and John R.Buck, publisher: Prentice Hall isbn: 0-13-0834443-2 $author: Jing-Wen (Ed) Lai $initial: Nov. 2002 $revised: Mar. 2018 $keywords: dsp, digital, signal, processing, voice, moving average, backward system, matlab, speech","title":"Reference"},{"location":"dsp/window-size-and-the-spectrogram/","text":"Window Size and the Spectrogram \u751f\u6210\u4ee5\u4e0b\u5169\u7b46\u8a0a\u865f, \u5169\u7b46\u8a0a\u865f\u6df7\u5408\u5f8c, \u89c0\u5bdf\u5176\u5728\u983b\u57df\u4e4b\u6027\u8cea\u3002 S1 (t) = COS(2\u03c0 f1 t), f1=900 S2(t) = COS(2\u03c0 f2 t), f2= 500, t = 0.1s~0.24s f2= 1000, t = 0.24s~0.4s f2= 1500, t = 0.4s~0.54s f2= 2000, t = 0.54s~0.7s f2= 2500, t = 0.7s~0.83s Requirements Matlab 6.5 Programming % ............................................................................. % Filename : dsp3.m % Author : Ching-Wen,Lai % Running : running this .m file in Matlab % Description : Window Size and the Spectrogram % Date : 01/04 2003 ver1.0 % Comment : Matlab Scripts : Getting SPECGRAM % SPECGRAM(A, NFFT, Fs, WINDOW, NOVERLAP) % Reference : DSP First % Path : DSP First - Text Book\\CHAPTERS\\9SPECTA\\DEMOS\\SPECGRAM\\INDEX.HTM % ............................................................................. close all ; clear all ; fs = 6000 ; n = 1 ; f0 = 920 ; f1 = 500 ; f2 = 1000 ; f3 = 1500 ; f4 = 2000 ; f5 = 2500 ; % ....................... Generating the Signal ............................... for t = 0 : 1 / fs : 1 if 0.1 < t & t < 0.24 s ( n ) = cos ( 2 * pi * f0 * t ) + cos ( 2 * pi * f1 * t ); elseif 0.24 < t & t < 0.4 s ( n ) = cos ( 2 * pi * f0 * t ) + cos ( 2 * pi * f2 * t ); elseif 0.4 < t & t < 0.54 s ( n ) = cos ( 2 * pi * f0 * t ) + cos ( 2 * pi * f3 * t ); elseif 0.54 < t & t < 0.7 s ( n ) = cos ( 2 * pi * f0 * t ) + cos ( 2 * pi * f4 * t ); elseif 0.7 < t & t < 0.83 s ( n ) = cos ( 2 * pi * f0 * t ) + cos ( 2 * pi * f5 * t ); else s ( n ) = cos ( 2 * pi * f0 * t ); end n = n + 1 ; end % ............................... Display Signal ............................. t = 0 : 1 / fs : 1 ; plot ( t , s ); ylabel ( 'AMPLITUDE' ); xlabel ( 'TIME(sec)' ); title ( 'S(n) waveform' ); % ................ Display Specgram using Hamming windows ..................... k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u986f\u793a SPECGRAM - Hamming window' ); subplot ( 211 ); specgram ( s , 256 , fs , hamming ( 256 ), 64 ); ylabel ( 'FREQUENCY' ); xlabel ( 'TIME(sec)' ); title ( 'SPECGRAM (256 points FFT, Hamming window & 64 points overlap)' ); subplot ( 212 ); specgram ( s , 1024 , fs , hamming ( 1024 ), 512 ); ylabel ( 'FREQUENCY' ); xlabel ( 'TIME(sec)' ); title ( 'SPECGRAM of o/p (1024 points FFT, Hamming window & 512 points overlap' ); % ............. Display Specgram using Blackman windows ....................... k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u986f\u793a SPECGRAM - Blackman window' ); subplot ( 211 ); specgram ( s , 256 , fs , blackman ( 256 ), 64 ); ylabel ( 'FREQUENCY' ); xlabel ( 'TIME(sec)' ); title ( 'SPECGRAM (256 points FFT, Blackman window & 64 points overlap)' ); subplot ( 212 ); specgram ( s , 1024 , fs , blackman ( 1024 ), 512 ); ylabel ( 'FREQUENCY' ); xlabel ( 'TIME(sec)' ); title ( 'SPECGRAM (1024 points FFT, Blackman window & 512 points overlap' ); Running Screenshot Step-by-Step Step Prompt Description 1 >> dsp3 2 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u986f\u793a SPECGRAM - Hamming Window Please Press any key to display SPECGRAM - Hamming Window 3 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u986f\u793a SPECGRAM - Blackman Window Please Press any key to display SPECGRAM - Blackman Window 4 >> Result Input Data Hamming window \u4e0a\u5716\u72a7\u7272 Frequency \u4e0a\u7684\u89e3\u6790\u5ea6, \u4f46\u589e\u52a0\u6642\u9593\u8ef8\u4e0a\u7684\u89e3\u6790\u5ea6\u3002 \u4e0b\u5716 Frequency \u4e0a\u7684\u89e3\u6790\u5ea6\u8f03\u7d30, \u4f46\u72a7\u7272\u4e86 \u6642\u9593\u8ef8\u4e0a\u7684\u89e3\u6790\u5ea6\uff0c\u4e0d\u77e5\u8a0a\u865f\u5728\u4f55\u6642\u6539\u8b8a\u3002\u7aef\u770b\u6240\u9700\u4e4b\u76ee\u5730\u4f86\u9078\u64c7\u8981\u4f7f\u7528\u7684\u8655\u7406\u6a21\u5f0f\u3002 Blackman window \u4e0a\u5716\u72a7\u7272 Frequency \u4e0a\u7684\u89e3\u6790\u5ea6, \u4f46\u589e\u52a0\u6642\u9593\u8ef8\u4e0a\u7684\u89e3\u6790\u5ea6\u3002 \u4e0b\u5716 Frequency \u4e0a\u7684\u89e3\u6790\u5ea6\u8f03\u7d30, \u4f46\u72a7\u7272\u4e86 \u6642\u9593\u8ef8\u4e0a\u7684\u89e3\u6790\u5ea6\uff0c\u4e0d\u77e5\u8a0a\u865f\u5728\u4f55\u6642\u6539\u8b8a\u3002\u7aef\u770b\u6240\u9700\u4e4b\u76ee\u5730\u4f86\u9078\u64c7\u8981\u4f7f\u7528\u7684\u8655\u7406\u6a21\u5f0f\u3002 Analysis Original Hamming Window Blackman Window Conclusion \u89c0\u5bdf\u5f97\u77e5 Hamming Window \u7684\u80fd\u91cf\u8f03 Blackman window \u96c6\u4e2d. Overlap \u8b93\u76f8\u9130\u7684 \u6846(FRAME)\u770b\u8d77\u4f86\u8f03\u70ba\u5e73\u9806(smooth). Advanced n/a Comment \u5982\u679c Matlab 6.0 \u7121\u6cd5\u88ab\u5b89\u88dd\u5728 Intel Pentium 4 (\u542b Intel Celeron 1.8G \u4ee5\u4e0a ), \u53ef\u4ee5\u5617\u8a66\u5b89\u88dd Matlab 6.5 \u4ee5\u4e0a. Reference Discrete-Time Signal Processing Author: Alan V. Oppenheim,Ronald W.Schafer and John R.Buck, Publisher: Prentice Hall ISBN: 0-13-0834443-2 sample code in cdrom: Text Book\\CHAPTERS\\9SPECTA\\DEMOS\\SPECGRAM\\INDEX.HTM $author: Jing-Wen (Ed) Lai $initial: Dec. 2002 $revised: Mar. 2018 $keywords: dsp, digital, signal, processing, spectrogram, matlab, windows, overlap","title":"Window Size and the Spectrogram"},{"location":"dsp/window-size-and-the-spectrogram/#window-size-and-the-spectrogram","text":"\u751f\u6210\u4ee5\u4e0b\u5169\u7b46\u8a0a\u865f, \u5169\u7b46\u8a0a\u865f\u6df7\u5408\u5f8c, \u89c0\u5bdf\u5176\u5728\u983b\u57df\u4e4b\u6027\u8cea\u3002 S1 (t) = COS(2\u03c0 f1 t), f1=900 S2(t) = COS(2\u03c0 f2 t), f2= 500, t = 0.1s~0.24s f2= 1000, t = 0.24s~0.4s f2= 1500, t = 0.4s~0.54s f2= 2000, t = 0.54s~0.7s f2= 2500, t = 0.7s~0.83s","title":"Window Size and the Spectrogram"},{"location":"dsp/window-size-and-the-spectrogram/#requirements","text":"Matlab 6.5","title":"Requirements"},{"location":"dsp/window-size-and-the-spectrogram/#programming","text":"% ............................................................................. % Filename : dsp3.m % Author : Ching-Wen,Lai % Running : running this .m file in Matlab % Description : Window Size and the Spectrogram % Date : 01/04 2003 ver1.0 % Comment : Matlab Scripts : Getting SPECGRAM % SPECGRAM(A, NFFT, Fs, WINDOW, NOVERLAP) % Reference : DSP First % Path : DSP First - Text Book\\CHAPTERS\\9SPECTA\\DEMOS\\SPECGRAM\\INDEX.HTM % ............................................................................. close all ; clear all ; fs = 6000 ; n = 1 ; f0 = 920 ; f1 = 500 ; f2 = 1000 ; f3 = 1500 ; f4 = 2000 ; f5 = 2500 ; % ....................... Generating the Signal ............................... for t = 0 : 1 / fs : 1 if 0.1 < t & t < 0.24 s ( n ) = cos ( 2 * pi * f0 * t ) + cos ( 2 * pi * f1 * t ); elseif 0.24 < t & t < 0.4 s ( n ) = cos ( 2 * pi * f0 * t ) + cos ( 2 * pi * f2 * t ); elseif 0.4 < t & t < 0.54 s ( n ) = cos ( 2 * pi * f0 * t ) + cos ( 2 * pi * f3 * t ); elseif 0.54 < t & t < 0.7 s ( n ) = cos ( 2 * pi * f0 * t ) + cos ( 2 * pi * f4 * t ); elseif 0.7 < t & t < 0.83 s ( n ) = cos ( 2 * pi * f0 * t ) + cos ( 2 * pi * f5 * t ); else s ( n ) = cos ( 2 * pi * f0 * t ); end n = n + 1 ; end % ............................... Display Signal ............................. t = 0 : 1 / fs : 1 ; plot ( t , s ); ylabel ( 'AMPLITUDE' ); xlabel ( 'TIME(sec)' ); title ( 'S(n) waveform' ); % ................ Display Specgram using Hamming windows ..................... k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u986f\u793a SPECGRAM - Hamming window' ); subplot ( 211 ); specgram ( s , 256 , fs , hamming ( 256 ), 64 ); ylabel ( 'FREQUENCY' ); xlabel ( 'TIME(sec)' ); title ( 'SPECGRAM (256 points FFT, Hamming window & 64 points overlap)' ); subplot ( 212 ); specgram ( s , 1024 , fs , hamming ( 1024 ), 512 ); ylabel ( 'FREQUENCY' ); xlabel ( 'TIME(sec)' ); title ( 'SPECGRAM of o/p (1024 points FFT, Hamming window & 512 points overlap' ); % ............. Display Specgram using Blackman windows ....................... k = input ( '\u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u986f\u793a SPECGRAM - Blackman window' ); subplot ( 211 ); specgram ( s , 256 , fs , blackman ( 256 ), 64 ); ylabel ( 'FREQUENCY' ); xlabel ( 'TIME(sec)' ); title ( 'SPECGRAM (256 points FFT, Blackman window & 64 points overlap)' ); subplot ( 212 ); specgram ( s , 1024 , fs , blackman ( 1024 ), 512 ); ylabel ( 'FREQUENCY' ); xlabel ( 'TIME(sec)' ); title ( 'SPECGRAM (1024 points FFT, Blackman window & 512 points overlap' );","title":"Programming"},{"location":"dsp/window-size-and-the-spectrogram/#running","text":"","title":"Running"},{"location":"dsp/window-size-and-the-spectrogram/#screenshot","text":"","title":"Screenshot"},{"location":"dsp/window-size-and-the-spectrogram/#step-by-step","text":"Step Prompt Description 1 >> dsp3 2 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u986f\u793a SPECGRAM - Hamming Window Please Press any key to display SPECGRAM - Hamming Window 3 \u8acb\u6309\u4e0b \u4efb\u4e00\u9375 \u986f\u793a SPECGRAM - Blackman Window Please Press any key to display SPECGRAM - Blackman Window 4 >>","title":"Step-by-Step"},{"location":"dsp/window-size-and-the-spectrogram/#result","text":"Input Data Hamming window \u4e0a\u5716\u72a7\u7272 Frequency \u4e0a\u7684\u89e3\u6790\u5ea6, \u4f46\u589e\u52a0\u6642\u9593\u8ef8\u4e0a\u7684\u89e3\u6790\u5ea6\u3002 \u4e0b\u5716 Frequency \u4e0a\u7684\u89e3\u6790\u5ea6\u8f03\u7d30, \u4f46\u72a7\u7272\u4e86 \u6642\u9593\u8ef8\u4e0a\u7684\u89e3\u6790\u5ea6\uff0c\u4e0d\u77e5\u8a0a\u865f\u5728\u4f55\u6642\u6539\u8b8a\u3002\u7aef\u770b\u6240\u9700\u4e4b\u76ee\u5730\u4f86\u9078\u64c7\u8981\u4f7f\u7528\u7684\u8655\u7406\u6a21\u5f0f\u3002 Blackman window \u4e0a\u5716\u72a7\u7272 Frequency \u4e0a\u7684\u89e3\u6790\u5ea6, \u4f46\u589e\u52a0\u6642\u9593\u8ef8\u4e0a\u7684\u89e3\u6790\u5ea6\u3002 \u4e0b\u5716 Frequency \u4e0a\u7684\u89e3\u6790\u5ea6\u8f03\u7d30, \u4f46\u72a7\u7272\u4e86 \u6642\u9593\u8ef8\u4e0a\u7684\u89e3\u6790\u5ea6\uff0c\u4e0d\u77e5\u8a0a\u865f\u5728\u4f55\u6642\u6539\u8b8a\u3002\u7aef\u770b\u6240\u9700\u4e4b\u76ee\u5730\u4f86\u9078\u64c7\u8981\u4f7f\u7528\u7684\u8655\u7406\u6a21\u5f0f\u3002","title":"Result"},{"location":"dsp/window-size-and-the-spectrogram/#analysis","text":"Original Hamming Window Blackman Window","title":"Analysis"},{"location":"dsp/window-size-and-the-spectrogram/#conclusion","text":"\u89c0\u5bdf\u5f97\u77e5 Hamming Window \u7684\u80fd\u91cf\u8f03 Blackman window \u96c6\u4e2d. Overlap \u8b93\u76f8\u9130\u7684 \u6846(FRAME)\u770b\u8d77\u4f86\u8f03\u70ba\u5e73\u9806(smooth).","title":"Conclusion"},{"location":"dsp/window-size-and-the-spectrogram/#advanced","text":"n/a","title":"Advanced"},{"location":"dsp/window-size-and-the-spectrogram/#comment","text":"\u5982\u679c Matlab 6.0 \u7121\u6cd5\u88ab\u5b89\u88dd\u5728 Intel Pentium 4 (\u542b Intel Celeron 1.8G \u4ee5\u4e0a ), \u53ef\u4ee5\u5617\u8a66\u5b89\u88dd Matlab 6.5 \u4ee5\u4e0a.","title":"Comment"},{"location":"dsp/window-size-and-the-spectrogram/#reference","text":"Discrete-Time Signal Processing Author: Alan V. Oppenheim,Ronald W.Schafer and John R.Buck, Publisher: Prentice Hall ISBN: 0-13-0834443-2 sample code in cdrom: Text Book\\CHAPTERS\\9SPECTA\\DEMOS\\SPECGRAM\\INDEX.HTM $author: Jing-Wen (Ed) Lai $initial: Dec. 2002 $revised: Mar. 2018 $keywords: dsp, digital, signal, processing, spectrogram, matlab, windows, overlap","title":"Reference"},{"location":"embedded/buildroot/","text":"Buildroot There are some resources for buildroot. GitHub : source code in GitHub. Buildroot : official website. Packages : official packages. Requirements Raspberry Pi 3 Quick Start Download source code and set configuration to Raspberry Pi 3, then make it. $ mkdir br2 $ wget https://buildroot.org/downloads/buildroot-2021.05.tar.bz2 $ tar xvf buildroot-2021.05.tar.bz2 $ cd buildroot-2021.05 $ make raspberrypi3_64_defconfig $ make $ ls -lah output/images/sdcard.img -rw-r--r-- 1 ed ed 153M Jul 3 20 :29 output/images/sdcard.img Programming image to SD card. Insert SD card to RPI3 and power on RPI3. If you uses Windows OS, you can programming image to SD card by using Rufus . Package Add one single package manually Use make <PKG> to build package, there is an examples to build one single package tcpdump $ make tcpdump $ ls -lah output/target/usr/bin/tcpdump -rwxr-xr-x 1 ed ed 1 .2M Jul 3 20 :48 output/target/usr/bin/tcpdump If you would like to rebuild it again, press <PKG>-dirclean the <PKG>-rebuild $ make tcpdump-dirclean $ make tcpdump-rebuild Add some useful packages There are some useful packages and its location when pressing make menuconfig . Consider to enable them then make the image again. wget (Target packages > Networking Applications > wget) tcpdump (Target packages > Networking Applications > tcpdump) hostapd (Target packages > Networking Applications > hostapd) wpa_supplicant (Target packages > Networking Applications > wpa_supplicant) cJSON (Libraries > JSON/XML > cJSON) libcurl (Libraries > Networking > libcurl) Add Your first Package Package file Layout package \u251c\u2500\u2500 Config.in \u2514\u2500\u2500 hello \u251c\u2500\u2500 Config.in \u251c\u2500\u2500 hello.mk \u2514\u2500\u2500 src \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 hello.c \u2514\u2500\u2500 Makefile package/Config.in: add Misc menu \"Misc\" source \"package/hello/Config.in\" endmenu package/hello/Config.in: add BR2_PACKAGE_HELLO config BR2_PACKAGE_HELLO bool \"hello\" help Hello world package. http : // example . com package/hello/hello.mk HELLO_VERSION = 1 .0 HELLO_SITE = ./package/hello/src HELLO_SITE_METHOD = local define HELLO_BUILD_CMDS $( MAKE ) CC = \" $( TARGET_CC ) \" LD = \" $( TARGET_LD ) \" -C $( @D ) endef define HELLO_INSTALL_TARGET_CMDS $( INSTALL ) -D -m 0755 $( @D ) /hello $( TARGET_DIR ) /usr/bin endef $( eval $( generic-package )) package/hello/src/.gitignore hello package/hello/src/hello.c #include <stdio.h> int main ( void ) { printf ( \"buildroot helloworld \\n \" ); return 0 ; } package/hello/src/Makefile CC = gcc .PHONY : clean hello : hello . c $( CC ) -o '$@' '$<' clean : rm hello Manually $ make hello-dirclean $ make hello-rebuild $ tree output/build/hello-1.0/ output/build/hello-1.0/ \u251c\u2500\u2500 hello \u251c\u2500\u2500 hello.c \u2514\u2500\u2500 Makefile $ make hello-install $ file output/target/usr/bin/hello output/target/usr/bin/hello: ELF 64-bit LSB shared object, ARM aarch64, version 1 (SYSV), dynamically linked, interpreter /lib/ld-uClibc.so.0, not stripped Build Image $ make raspberrypi3_64_defconfig # < = (Optional) $ echo 'BR2_PACKAGE_HELLO=y' >> .config $ make BR2_JLEVEL=2 Program Image to SD card and Power on PRI3, run hello in Traget Board. # hello buildroot helloworld Linux Kernel There are the commands for make linux kerenl. $ make linux-menuconfig $ make linux-rebuild Busybox There are the commands to make busybox. Use mkfifo as an example, try to step into Coreutils > mkfifo and rebuild busybox. $ busybox-menuconfig $ make busybox-rebuild Qemu Build $ make clean $ make qemu_arm_vexpress_defconfig $ make Run $ qemu-system-arm -M vexpress-a9 -smp 1 -m 256 -kernel output/images/zImage -dtb output/images/vexpress-v2p-ca9.dtb -drive file = output/images/rootfs.ext2,if = sd,format = raw -append \"console=ttyAMA0,115200 root=/dev/mmcblk0\" -serial stdio -net nic,model = lan9118 -net user -nographic Result ... udhcpc: lease of 10.0.2.15 obtained, lease time 86400 deleting routers adding dns 10.0.2.3 OK Welcome to Buildroot buildroot login: root # uname -a Linux buildroot 5.10.7 #1 SMP Sat Jul 10 15:43:17 CST 2021 armv7l GNU/Linux # ifconfig eth0 Link encap:Ethernet HWaddr 52:54:00:12:34:56 inet addr:10.0.2.15 Bcast:10.0.2.255 Mask:255.255.255.0 UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1 RX packets:2 errors:0 dropped:0 overruns:0 frame:0 TX packets:2 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:1180 (1.1 KiB) TX bytes:688 (688.0 B) Interrupt:30 lo Link encap:Local Loopback inet addr:127.0.0.1 Mask:255.0.0.0 UP LOOPBACK RUNNING MTU:65536 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B) Reference buildroot\u4f7f\u7528\u4ecb\u7ecd Buildroot development ~~ TBD~~~","title":"Buildroot"},{"location":"embedded/buildroot/#buildroot","text":"There are some resources for buildroot. GitHub : source code in GitHub. Buildroot : official website. Packages : official packages.","title":"Buildroot"},{"location":"embedded/buildroot/#requirements","text":"Raspberry Pi 3","title":"Requirements"},{"location":"embedded/buildroot/#quick-start","text":"Download source code and set configuration to Raspberry Pi 3, then make it. $ mkdir br2 $ wget https://buildroot.org/downloads/buildroot-2021.05.tar.bz2 $ tar xvf buildroot-2021.05.tar.bz2 $ cd buildroot-2021.05 $ make raspberrypi3_64_defconfig $ make $ ls -lah output/images/sdcard.img -rw-r--r-- 1 ed ed 153M Jul 3 20 :29 output/images/sdcard.img Programming image to SD card. Insert SD card to RPI3 and power on RPI3. If you uses Windows OS, you can programming image to SD card by using Rufus .","title":"Quick Start"},{"location":"embedded/buildroot/#package","text":"","title":"Package"},{"location":"embedded/buildroot/#add-one-single-package-manually","text":"Use make <PKG> to build package, there is an examples to build one single package tcpdump $ make tcpdump $ ls -lah output/target/usr/bin/tcpdump -rwxr-xr-x 1 ed ed 1 .2M Jul 3 20 :48 output/target/usr/bin/tcpdump If you would like to rebuild it again, press <PKG>-dirclean the <PKG>-rebuild $ make tcpdump-dirclean $ make tcpdump-rebuild","title":"Add one single package manually"},{"location":"embedded/buildroot/#add-some-useful-packages","text":"There are some useful packages and its location when pressing make menuconfig . Consider to enable them then make the image again. wget (Target packages > Networking Applications > wget) tcpdump (Target packages > Networking Applications > tcpdump) hostapd (Target packages > Networking Applications > hostapd) wpa_supplicant (Target packages > Networking Applications > wpa_supplicant) cJSON (Libraries > JSON/XML > cJSON) libcurl (Libraries > Networking > libcurl)","title":"Add some useful packages"},{"location":"embedded/buildroot/#add-your-first-package","text":"Package file Layout package \u251c\u2500\u2500 Config.in \u2514\u2500\u2500 hello \u251c\u2500\u2500 Config.in \u251c\u2500\u2500 hello.mk \u2514\u2500\u2500 src \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 hello.c \u2514\u2500\u2500 Makefile package/Config.in: add Misc menu \"Misc\" source \"package/hello/Config.in\" endmenu package/hello/Config.in: add BR2_PACKAGE_HELLO config BR2_PACKAGE_HELLO bool \"hello\" help Hello world package. http : // example . com package/hello/hello.mk HELLO_VERSION = 1 .0 HELLO_SITE = ./package/hello/src HELLO_SITE_METHOD = local define HELLO_BUILD_CMDS $( MAKE ) CC = \" $( TARGET_CC ) \" LD = \" $( TARGET_LD ) \" -C $( @D ) endef define HELLO_INSTALL_TARGET_CMDS $( INSTALL ) -D -m 0755 $( @D ) /hello $( TARGET_DIR ) /usr/bin endef $( eval $( generic-package )) package/hello/src/.gitignore hello package/hello/src/hello.c #include <stdio.h> int main ( void ) { printf ( \"buildroot helloworld \\n \" ); return 0 ; } package/hello/src/Makefile CC = gcc .PHONY : clean hello : hello . c $( CC ) -o '$@' '$<' clean : rm hello Manually $ make hello-dirclean $ make hello-rebuild $ tree output/build/hello-1.0/ output/build/hello-1.0/ \u251c\u2500\u2500 hello \u251c\u2500\u2500 hello.c \u2514\u2500\u2500 Makefile $ make hello-install $ file output/target/usr/bin/hello output/target/usr/bin/hello: ELF 64-bit LSB shared object, ARM aarch64, version 1 (SYSV), dynamically linked, interpreter /lib/ld-uClibc.so.0, not stripped Build Image $ make raspberrypi3_64_defconfig # < = (Optional) $ echo 'BR2_PACKAGE_HELLO=y' >> .config $ make BR2_JLEVEL=2 Program Image to SD card and Power on PRI3, run hello in Traget Board. # hello buildroot helloworld","title":"Add Your first Package"},{"location":"embedded/buildroot/#linux-kernel","text":"There are the commands for make linux kerenl. $ make linux-menuconfig $ make linux-rebuild","title":"Linux Kernel"},{"location":"embedded/buildroot/#busybox","text":"There are the commands to make busybox. Use mkfifo as an example, try to step into Coreutils > mkfifo and rebuild busybox. $ busybox-menuconfig $ make busybox-rebuild","title":"Busybox"},{"location":"embedded/buildroot/#qemu","text":"","title":"Qemu"},{"location":"embedded/buildroot/#build","text":"$ make clean $ make qemu_arm_vexpress_defconfig $ make","title":"Build"},{"location":"embedded/buildroot/#run","text":"$ qemu-system-arm -M vexpress-a9 -smp 1 -m 256 -kernel output/images/zImage -dtb output/images/vexpress-v2p-ca9.dtb -drive file = output/images/rootfs.ext2,if = sd,format = raw -append \"console=ttyAMA0,115200 root=/dev/mmcblk0\" -serial stdio -net nic,model = lan9118 -net user -nographic","title":"Run"},{"location":"embedded/buildroot/#result","text":"... udhcpc: lease of 10.0.2.15 obtained, lease time 86400 deleting routers adding dns 10.0.2.3 OK Welcome to Buildroot buildroot login: root # uname -a Linux buildroot 5.10.7 #1 SMP Sat Jul 10 15:43:17 CST 2021 armv7l GNU/Linux # ifconfig eth0 Link encap:Ethernet HWaddr 52:54:00:12:34:56 inet addr:10.0.2.15 Bcast:10.0.2.255 Mask:255.255.255.0 UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1 RX packets:2 errors:0 dropped:0 overruns:0 frame:0 TX packets:2 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:1180 (1.1 KiB) TX bytes:688 (688.0 B) Interrupt:30 lo Link encap:Local Loopback inet addr:127.0.0.1 Mask:255.0.0.0 UP LOOPBACK RUNNING MTU:65536 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B)","title":"Result"},{"location":"embedded/buildroot/#reference","text":"buildroot\u4f7f\u7528\u4ecb\u7ecd Buildroot development ~~ TBD~~~","title":"Reference"},{"location":"embedded/openwrt/","text":"OpenWRT Requirements MT7688 Quick Start Clone the repository $ git clone https://github.com/openwrt/openwrt $ cd openwrt $ cp feeds.conf.default feeds.conf $ echo src-git linkit https://github.com/MediaTek-Labs/linkit-smart-7688-feed.git >> feeds.conf $ ./scripts/feeds update $ ./scripts/feeds install -a $ make menuconfig Select profile as following, Target System: MediaTek Ralink MIPS Subtarget: MT76x8 based board Target Profile: MediaTek LinkIt Smart 7688 make it $ make V=99 2>&1 | tee build.log | grep -i error Output images. There are in bin/targets/ramips/mt76x8/ bin/targets/ramips/mt76x8/openwrt-ramips-mt76x8-mediatek_mt7628an-eval-board-initramfs-kernel.bin bin/targets/ramips/mt76x8/openwrt-ramips-mt76x8-mediatek_mt7628an-eval-board-squashfs-sysupgrade.bin For package, There are in targets/ramips/mt76x8/packages/ use hostapd as an example. targets/ramips/mt76x8/packages/hostapd-common_2021-05-22-b102f19b-17_mipsel_24kc.ipk Reference LinkIt Smart MT7688 OpenWrt \u5efa\u7f6e \u2013 \u4f7f\u7528\u65b9\u6cd5 ~~ TBD~~~","title":"OpenWRT"},{"location":"embedded/openwrt/#openwrt","text":"","title":"OpenWRT"},{"location":"embedded/openwrt/#requirements","text":"MT7688","title":"Requirements"},{"location":"embedded/openwrt/#quick-start","text":"Clone the repository $ git clone https://github.com/openwrt/openwrt $ cd openwrt $ cp feeds.conf.default feeds.conf $ echo src-git linkit https://github.com/MediaTek-Labs/linkit-smart-7688-feed.git >> feeds.conf $ ./scripts/feeds update $ ./scripts/feeds install -a $ make menuconfig Select profile as following, Target System: MediaTek Ralink MIPS Subtarget: MT76x8 based board Target Profile: MediaTek LinkIt Smart 7688 make it $ make V=99 2>&1 | tee build.log | grep -i error Output images. There are in bin/targets/ramips/mt76x8/ bin/targets/ramips/mt76x8/openwrt-ramips-mt76x8-mediatek_mt7628an-eval-board-initramfs-kernel.bin bin/targets/ramips/mt76x8/openwrt-ramips-mt76x8-mediatek_mt7628an-eval-board-squashfs-sysupgrade.bin For package, There are in targets/ramips/mt76x8/packages/ use hostapd as an example. targets/ramips/mt76x8/packages/hostapd-common_2021-05-22-b102f19b-17_mipsel_24kc.ipk","title":"Quick Start"},{"location":"embedded/openwrt/#reference","text":"LinkIt Smart MT7688 OpenWrt \u5efa\u7f6e \u2013 \u4f7f\u7528\u65b9\u6cd5 ~~ TBD~~~","title":"Reference"},{"location":"embedded/rtl8197f/","text":"RTK 8197F Run Ubuntu 16.04 (VPS), it cannot work in Ubuntu 18.04 . Prepare $ rm -rf /bin/sh && ln -s /bin/bash /bin/sh Install below packages $ cat /etc/lsb-release $ apt-get -y update > /dev/null 2 > /dev/null $ apt-get -y upgrade > /dev/null 2 > /dev/null $ apt-get -y install wget git build-essential gcc-multilib g++-multilib $ apt-get -y install lsb-core autoconf automake libjson-* libmpc-dev lib32stdc++6 p7zip-full tree $ apt-get -y install gcc g++ binutils patch bzip2 flex bison make autoconf gettext texinfo unzip $ apt-get -y install sharutils subversion libncurses5-dev ncurses-term zlib1g-dev subversion $ apt-get -y install gawk libz-dev asciidoc libtool libssl-dev $ apt-get -y install intltool libiconv* glib2.0 ccache sshfs mtd-utils rst2pdf Build Image $ export TERMINFO=/lib/terminfo $ make clean $ make distclean $ make menuconfig Select Target $ make 2>&1 | tee mk.log","title":"RTK 8197F"},{"location":"embedded/rtl8197f/#rtk-8197f","text":"Run Ubuntu 16.04 (VPS), it cannot work in Ubuntu 18.04 . Prepare $ rm -rf /bin/sh && ln -s /bin/bash /bin/sh Install below packages $ cat /etc/lsb-release $ apt-get -y update > /dev/null 2 > /dev/null $ apt-get -y upgrade > /dev/null 2 > /dev/null $ apt-get -y install wget git build-essential gcc-multilib g++-multilib $ apt-get -y install lsb-core autoconf automake libjson-* libmpc-dev lib32stdc++6 p7zip-full tree $ apt-get -y install gcc g++ binutils patch bzip2 flex bison make autoconf gettext texinfo unzip $ apt-get -y install sharutils subversion libncurses5-dev ncurses-term zlib1g-dev subversion $ apt-get -y install gawk libz-dev asciidoc libtool libssl-dev $ apt-get -y install intltool libiconv* glib2.0 ccache sshfs mtd-utils rst2pdf Build Image $ export TERMINFO=/lib/terminfo $ make clean $ make distclean $ make menuconfig Select Target $ make 2>&1 | tee mk.log","title":"RTK 8197F"},{"location":"io/","text":"Man-Machine Interfaces There are some implementations of Man-Machine Interfaces . \ud83d\udc77 : Under Construction. # Proof-of-Concept Terminology 1 Industry Standard Architecture (ISA) orcad soldering c c++ tc 2 Peripheral Component Interconnect (PCI) assembly 3 \ud83d\udc77 Windows Driver Model (WDM) c 4 \ud83d\udc77 Linux Device Driver (Parallel Port) c perl php 5 \ud83d\udc77 General Purpose Input Output(GPIO) winio 6 \ud83d\udc77 System Management Bus(SMBus) smbus","title":"Man-Machine Interfaces"},{"location":"io/#man-machine-interfaces","text":"There are some implementations of Man-Machine Interfaces . \ud83d\udc77 : Under Construction. # Proof-of-Concept Terminology 1 Industry Standard Architecture (ISA) orcad soldering c c++ tc 2 Peripheral Component Interconnect (PCI) assembly 3 \ud83d\udc77 Windows Driver Model (WDM) c 4 \ud83d\udc77 Linux Device Driver (Parallel Port) c perl php 5 \ud83d\udc77 General Purpose Input Output(GPIO) winio 6 \ud83d\udc77 System Management Bus(SMBus) smbus","title":"Man-Machine Interfaces"},{"location":"io/gpio/","text":"Man-Machine Interfaces General Purpose Input Output An exercise of General Purpose Input Output. Blink LED on target device. Content Requirements User Space Kernel Space Userspace I/O Reference Requirements BBG User Space SHELL Using sysfs interface echo 49 > /sys/class/gpio/export echo out > /sys/class/gpio/gpio49/direction while : do echo \"Press [CTRL+C] to stop..\" echo \"LED ON -O-\" echo 0 > /sys/class/gpio/gpio49/value sleep 1 echo \"LED OFF -X-\" echo 1 > /sys/class/gpio/gpio49/value sleep 1 done # do this manually if user pressed \"Ctrl-C\" echo 49 > /sys/class/gpio/unexport PILI TBD C Using /dev/mem Python Using mraa Kernel Space #include <linux/gpio.h> Userspace I/O Userspace I/O (UIO) Interrupt Digital I/O (DIO) Requirements Linux PSP GPIO Driver Guide gpio.txt BeagleBone Green Raspberry Pi 3 Model B+ MediaTek LinkIt Smart 7688 Reference http://www.righto.com/2016/08/the-beaglebones-io-pins-inside-software.html https://vadl.github.io/beagleboneblack/2016/07/29/setting-up-bbb-gpio https://vadl.github.io/images/bbb/P8Header.png https://vadl.github.io/images/bbb/P9Header.png Appendix GPIO Pin of BBG P9 (starting from ETH port) PIN NO NO PIN GND 1 2 GND 3.3V(VDD) 3 4 3.3V (VDD) 5V (VDD) 5 6 5V(VDD) 5V (SYS) 7 8 5V (SYS) 9 10 GPIO 30 11 12 GPIO 60 GPIO 31 13 14 GPIO 40 (PWM) GPIO 48 15 16 GPIO 51 GPIO 4 17 18 GPIO 5 19 20 GPIO 3 (PWM) 21 22 GPIO 2 (PWM) GPIO 49 23 24 GPIO 15 GPIO 117 25 26 GPIO 14 GPIO 125 27 28 29 30 GPIO 122 31 32 VDD_ADC AIN4 33 34 GND_ADC AIN6 35 36 AIN5 AIN2 37 38 AIN3 AIN0 39 40 AIN1 GPIO 20 41 42 GPIO 7 (PWM) GND 43 44 GPIO GND 45 46 GPIO P8 (starting from ETH port) PIN NO NO PIN GND 1 2 GND 3 4 5 6 GPIO 66 7 8 GPIO 67 GPIO 69 9 10 GPIO 68 GPIO 45 11 12 GPIO 44 GPIO 23 (PWM) 13 14 GPIO 26 GPIO 47 15 16 GPIO 46 GPIO 27 17 18 GPIO 65 GPIO 22 (PWM) 19 20 21 22 23 24 25 26 GPIO 61 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 pingroups # cat /sys/kernel/debug/pinctrl/44e10800.pinmux/pingroups registered pin groups: group: pinmux_uart0_pins pin 92 (PIN92) pin 93 (PIN93)","title":"General Purpose Input Output (GPIO)"},{"location":"io/gpio/#man-machine-interfaces","text":"","title":"Man-Machine Interfaces"},{"location":"io/gpio/#general-purpose-input-output","text":"An exercise of General Purpose Input Output. Blink LED on target device.","title":"General Purpose Input Output"},{"location":"io/gpio/#content","text":"Requirements User Space Kernel Space Userspace I/O Reference","title":"Content"},{"location":"io/gpio/#requirements","text":"BBG","title":"Requirements"},{"location":"io/gpio/#user-space","text":"","title":"User Space"},{"location":"io/gpio/#shell","text":"Using sysfs interface echo 49 > /sys/class/gpio/export echo out > /sys/class/gpio/gpio49/direction while : do echo \"Press [CTRL+C] to stop..\" echo \"LED ON -O-\" echo 0 > /sys/class/gpio/gpio49/value sleep 1 echo \"LED OFF -X-\" echo 1 > /sys/class/gpio/gpio49/value sleep 1 done # do this manually if user pressed \"Ctrl-C\" echo 49 > /sys/class/gpio/unexport PILI TBD","title":"SHELL"},{"location":"io/gpio/#c","text":"Using /dev/mem","title":"C"},{"location":"io/gpio/#python","text":"Using mraa","title":"Python"},{"location":"io/gpio/#kernel-space","text":"#include <linux/gpio.h>","title":"Kernel Space"},{"location":"io/gpio/#userspace-io","text":"Userspace I/O (UIO) Interrupt Digital I/O (DIO)","title":"Userspace I/O"},{"location":"io/gpio/#requirements_1","text":"Linux PSP GPIO Driver Guide gpio.txt BeagleBone Green Raspberry Pi 3 Model B+ MediaTek LinkIt Smart 7688","title":"Requirements"},{"location":"io/gpio/#reference","text":"http://www.righto.com/2016/08/the-beaglebones-io-pins-inside-software.html https://vadl.github.io/beagleboneblack/2016/07/29/setting-up-bbb-gpio https://vadl.github.io/images/bbb/P8Header.png https://vadl.github.io/images/bbb/P9Header.png","title":"Reference"},{"location":"io/gpio/#appendix","text":"","title":"Appendix"},{"location":"io/gpio/#gpio-pin-of-bbg","text":"P9 (starting from ETH port) PIN NO NO PIN GND 1 2 GND 3.3V(VDD) 3 4 3.3V (VDD) 5V (VDD) 5 6 5V(VDD) 5V (SYS) 7 8 5V (SYS) 9 10 GPIO 30 11 12 GPIO 60 GPIO 31 13 14 GPIO 40 (PWM) GPIO 48 15 16 GPIO 51 GPIO 4 17 18 GPIO 5 19 20 GPIO 3 (PWM) 21 22 GPIO 2 (PWM) GPIO 49 23 24 GPIO 15 GPIO 117 25 26 GPIO 14 GPIO 125 27 28 29 30 GPIO 122 31 32 VDD_ADC AIN4 33 34 GND_ADC AIN6 35 36 AIN5 AIN2 37 38 AIN3 AIN0 39 40 AIN1 GPIO 20 41 42 GPIO 7 (PWM) GND 43 44 GPIO GND 45 46 GPIO P8 (starting from ETH port) PIN NO NO PIN GND 1 2 GND 3 4 5 6 GPIO 66 7 8 GPIO 67 GPIO 69 9 10 GPIO 68 GPIO 45 11 12 GPIO 44 GPIO 23 (PWM) 13 14 GPIO 26 GPIO 47 15 16 GPIO 46 GPIO 27 17 18 GPIO 65 GPIO 22 (PWM) 19 20 21 22 23 24 25 26 GPIO 61 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 pingroups # cat /sys/kernel/debug/pinctrl/44e10800.pinmux/pingroups registered pin groups: group: pinmux_uart0_pins pin 92 (PIN92) pin 93 (PIN93)","title":"GPIO Pin of BBG"},{"location":"io/i2c/","text":"Man-Machine Interfaces Inter-Integrated Circuit Content Conpect Requirements Installation Programming Conpect Function I2C SMBus Clock SLC (Serial clock line) SMBCLK Data SDA (Serial data line) SMBDAT Requirements BeagleBone Black Precondition # apt-get install libi2c-dev # apt-get install i2c-tools # apt-get install python-smbus Programming Shell CLI Description i2cdetect i2c device detects i2cdump Dump register value i2cget Read register value i2cset Write register i2cdetect -l i2c-1 i2c OMAP I2C adapter I2C adapter i2c-2 i2c OMAP I2C adapter I2C adapter #<= Cap i2c-0 i2c OMAP I2C adapter I2C adapter #<= Internal i2cdetect -y -r 0 0 1 2 3 4 5 6 7 8 9 a b c d e f 00: -- -- -- -- -- -- -- -- -- -- -- -- -- 10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 20: -- -- -- -- UU -- -- -- -- -- -- -- -- -- -- -- 30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 50: UU -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #<= EEPROM, accessing by 24c256 60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 70: -- -- -- -- -- -- -- -- i2cdetect -y -r 2 0 1 2 3 4 5 6 7 8 9 a b c d e f 00: -- -- -- -- -- -- -- -- -- -- -- -- -- 10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 50: -- -- -- -- UU UU UU UU -- -- -- -- -- -- -- -- #<= Cap 60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 70: -- -- -- -- -- -- -- -- - # i2cset -y 0 0x20 0x12 0x00 Reading Serial number from EEPROM of BBG (offset 4 byte then hexdump 24 byte) # hexdump -e '8/1 \"%c\"' /sys/bus/i2c/devices/0-0050/eeprom -s 4 -n 24 A335BNLTBBG1BBG216113134 cat /sys/bus/i2c/devices/0-0050/modalias i2c:24c256 dmesg | grep 24c [ 1.527894] at24 2-0054: 32768 byte 24c256 EEPROM, writable, 1 bytes/write [ 1.528408] at24 2-0055: 32768 byte 24c256 EEPROM, writable, 1 bytes/write [ 1.528654] at24 2-0056: 32768 byte 24c256 EEPROM, writable, 1 bytes/write [ 1.528866] at24 2-0057: 32768 byte 24c256 EEPROM, writable, 1 bytes/write [ 1.943267] at24 0-0050: 32768 byte 24c256 EEPROM, writable, 1 bytes/write cat /proc/kallsyms | grep at24 c08fb370 t at24_remove c08fb3c4 t at24_write c08fb468 t at24_read c08fb514 t at24_eeprom_write_i2c c08fb6cc t at24_eeprom_write_smbus_byte c08fb7e0 t at24_eeprom_write_smbus_block c08fb928 t at24_eeprom_read_i2c c08fbad4 t at24_eeprom_read_mac c08fbbf4 t at24_eeprom_read_serial c08fbd2c t at24_eeprom_read_smbus c08fbe58 t at24_probe c0d86410 r at24_ids c13556c8 t at24_init c136dbe8 t at24_exit c13bedec t __initcall_at24_init6 c14b5808 d at24_driver C C Function List Function User Space (SMBus) Kernel Space HEADER File i2c.h i2c-dev.h START Condition i2c_start() STOP Condition i2c_stop() Read i2c_smbus_read_byte_data sendbytes() Write i2c_smbus_write_word_data readbytes() Case Reading Serial number from EEPROM of BBG Monitor the CPU temperature of IPC # apt-get install lm-sensors # sensors-detect Advanced Reading AM335x Thermal Considerations Appendix BBG Reference Beaglebone BBB eeprom\u7684\u64e6\u5199","title":"Inter-Integrated Circuit (I2C)"},{"location":"io/i2c/#man-machine-interfaces","text":"","title":"Man-Machine Interfaces"},{"location":"io/i2c/#inter-integrated-circuit","text":"","title":"Inter-Integrated Circuit"},{"location":"io/i2c/#content","text":"Conpect Requirements Installation Programming","title":"Content"},{"location":"io/i2c/#conpect","text":"Function I2C SMBus Clock SLC (Serial clock line) SMBCLK Data SDA (Serial data line) SMBDAT","title":"Conpect"},{"location":"io/i2c/#requirements","text":"BeagleBone Black","title":"Requirements"},{"location":"io/i2c/#precondition","text":"# apt-get install libi2c-dev # apt-get install i2c-tools # apt-get install python-smbus","title":"Precondition"},{"location":"io/i2c/#programming","text":"","title":"Programming"},{"location":"io/i2c/#shell","text":"CLI Description i2cdetect i2c device detects i2cdump Dump register value i2cget Read register value i2cset Write register","title":"Shell"},{"location":"io/i2c/#i2cdetect-l","text":"i2c-1 i2c OMAP I2C adapter I2C adapter i2c-2 i2c OMAP I2C adapter I2C adapter #<= Cap i2c-0 i2c OMAP I2C adapter I2C adapter #<= Internal","title":"i2cdetect -l"},{"location":"io/i2c/#i2cdetect-y-r-0","text":"0 1 2 3 4 5 6 7 8 9 a b c d e f 00: -- -- -- -- -- -- -- -- -- -- -- -- -- 10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 20: -- -- -- -- UU -- -- -- -- -- -- -- -- -- -- -- 30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 50: UU -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #<= EEPROM, accessing by 24c256 60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 70: -- -- -- -- -- -- -- --","title":"i2cdetect -y -r 0"},{"location":"io/i2c/#i2cdetect-y-r-2","text":"0 1 2 3 4 5 6 7 8 9 a b c d e f 00: -- -- -- -- -- -- -- -- -- -- -- -- -- 10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 50: -- -- -- -- UU UU UU UU -- -- -- -- -- -- -- -- #<= Cap 60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 70: -- -- -- -- -- -- -- -- - # i2cset -y 0 0x20 0x12 0x00 Reading Serial number from EEPROM of BBG (offset 4 byte then hexdump 24 byte) # hexdump -e '8/1 \"%c\"' /sys/bus/i2c/devices/0-0050/eeprom -s 4 -n 24 A335BNLTBBG1BBG216113134","title":"i2cdetect -y -r 2"},{"location":"io/i2c/#cat-sysbusi2cdevices0-0050modalias","text":"i2c:24c256","title":"cat /sys/bus/i2c/devices/0-0050/modalias"},{"location":"io/i2c/#dmesg-grep-24c","text":"[ 1.527894] at24 2-0054: 32768 byte 24c256 EEPROM, writable, 1 bytes/write [ 1.528408] at24 2-0055: 32768 byte 24c256 EEPROM, writable, 1 bytes/write [ 1.528654] at24 2-0056: 32768 byte 24c256 EEPROM, writable, 1 bytes/write [ 1.528866] at24 2-0057: 32768 byte 24c256 EEPROM, writable, 1 bytes/write [ 1.943267] at24 0-0050: 32768 byte 24c256 EEPROM, writable, 1 bytes/write","title":"dmesg | grep 24c"},{"location":"io/i2c/#cat-prockallsyms-grep-at24","text":"c08fb370 t at24_remove c08fb3c4 t at24_write c08fb468 t at24_read c08fb514 t at24_eeprom_write_i2c c08fb6cc t at24_eeprom_write_smbus_byte c08fb7e0 t at24_eeprom_write_smbus_block c08fb928 t at24_eeprom_read_i2c c08fbad4 t at24_eeprom_read_mac c08fbbf4 t at24_eeprom_read_serial c08fbd2c t at24_eeprom_read_smbus c08fbe58 t at24_probe c0d86410 r at24_ids c13556c8 t at24_init c136dbe8 t at24_exit c13bedec t __initcall_at24_init6 c14b5808 d at24_driver","title":"cat /proc/kallsyms | grep at24"},{"location":"io/i2c/#c","text":"C Function List Function User Space (SMBus) Kernel Space HEADER File i2c.h i2c-dev.h START Condition i2c_start() STOP Condition i2c_stop() Read i2c_smbus_read_byte_data sendbytes() Write i2c_smbus_write_word_data readbytes()","title":"C"},{"location":"io/i2c/#case","text":"","title":"Case"},{"location":"io/i2c/#reading-serial-number-from-eeprom-of-bbg","text":"","title":"Reading Serial number from EEPROM of BBG"},{"location":"io/i2c/#monitor-the-cpu-temperature-of-ipc","text":"# apt-get install lm-sensors # sensors-detect","title":"Monitor the CPU temperature of IPC"},{"location":"io/i2c/#advanced","text":"Reading AM335x Thermal Considerations","title":"Advanced"},{"location":"io/i2c/#appendix","text":"","title":"Appendix"},{"location":"io/i2c/#bbg","text":"","title":"BBG"},{"location":"io/i2c/#reference","text":"Beaglebone BBB eeprom\u7684\u64e6\u5199","title":"Reference"},{"location":"io/isa/","text":"Man-Machine Interfaces Industry Standard Architecture (ISA) $author: Ching-Wen (Ed) Lai $date: May. 2003 $revised: Mar. 2018 $keywords: man, machine, interface, industry standard architecture, isa An exercise of Intel 8255 PIO (Programmable Peripheral Interface, PPI) control via ISA interface. Blinking LED on Red Hat Linux. Doing circuit design work by using OrCAD Soldering circuit board by using Hand Tools Verifying circuit board by using debug command on DOS Blinking LED by using Linux C and C++ on Linux Content Concept Requirements Hardware Schematic Components Soldering Hand Tools Safety First Software Demonstration DOS Debug Linux C C++ Windows Turbo C Advanced Qt References Appendix Appendix A - PC AT Interface Pinout Appendix B - Intel 82C55A Programmable Peripheral Interface Pinout Appendix C - Intel 8254 Programmable Interval Timer Pinout Appendix D - Remote Access by VNC Concept \u57fa\u672c I/O \u63a7\u5236\u5be6\u9a57\uff0c\u8a2d\u8a08\u4e00\u584a ISA \u96fb\u8def\u677f\uff0c\u5229\u7528 Intel 8255 \u64f4\u5145\u96fb\u8166 IO port, \u4e26\u63a7\u5236 LED \u9583\u720d. Requirements Hareware Schematic Electronic Schematic I/O Address mapping of Intel 8255: 8255A (Selects) A1 A0 I/O Address Port A 0 0 300H Port B 0 1 301H Port C 1 0 302H Control Word Register 1 1 303H I/O Address mapping for Intel 8254: 8254 (Selects) A1 A0 I/O Address Counter 0 0 0 320H Counter 1 0 1 321H Counter 2 1 0 322H Control Word Register 1 1 323H Power Source Pin Number: TTL 8255 8254 74LS138 (3-8 Decode) 74LS00 (NAND) 74LS244 (Locker) +5V 26 24 16 14 20 GND 7 12 8 7 10 Soldering Good Front View Inserting Board into ISA slot on PC Hand Tools \u6e96\u5099\u4e00\u822c\u7684\u710a\u63a5\u5de5\u5177\u5373\u53ef, \u53e6\u6709 \u53ef\u6709\u53ef\u7121\u7684 \u9632\u975c\u96fb\u7528\u8ea1\u5b50\u3001\u4e00\u865f\u8d77\u5b50\u3001\u5341\u865f\u8d77\u5b50\u2026\u4e0d\u518d\u8d05\u8ff0. No \u624b\u5de5\u5177\u540d\u7a31 \u6578\u91cf \u55ae\u4f4d \u54c1\u724c/\u898f\u683c \u5099\u8a3b 1 \u96fb\u70d9\u9435 1 \u652f 2 \u5c16\u5634\u9257 1 \u652f /PN-2005 3 \u659c\u53e3\u9257 1 \u652f /TR-25-P 4 \u5438\u932b\u5668 1 \u652f 5 \u92b2\u932b 1 \u6372 Consumables 6 \u934d\u9280\u7dda 1 \u6372 OK / R26-500 Consumables; Optional 7 \u932b\u6cb9(\u932b\u818f ) 1 \u7f50 goot / BS-10 Consumables; Optional 8 \u4e09\u7528\u96fb\u9336 1 \u53f0 \u7528\u65bc\u6e2c\u710a\u63a5\u5b8c\u5f8c\u7684\u96fb\u8def\u7248\u662f\u5426\u6709\u77ed\u8def Components Electronic Components No \u96f6\u4ef6\u540d\u7a31 \u6578\u91cf \u5099\u8a3b 1 82C55 1 \u53ef\u7a0b\u5f0f\u898f\u5283\u908f\u8f2f\u4ecb\u9762 ; PPI 2 8254 ( \u6216 D71054C ) 1 \u53ef\u7a0b\u5f0f\u898f\u5283\u8a08\u6578(\u6642)\u4ecb\u9762 / \u6700\u9ad8\u8f38\u5165\u6642\u5e8f 8 MHz 3 74LS138 1 \u89e3\u78bc\u81f4\u80fd 8255 \u8207 8254 \u7528 4 74LS00 1 \u89e3\u78bc\u81f4\u80fd 74LS138 \u8207 \u5587\u53ed\u96fb\u8def 5 5K \u53ef\u8abf\u5f0f\u96fb\u963b 1 \u5587\u53ed\u96fb\u8def\u7528 6 C1815 1 \u5587\u53ed\u96fb\u8def\u7528 , \u7de8\u865f\u9762 \u63a5\u8173 ECB 7 \u5587\u53ed 1 \u5587\u53ed\u96fb\u8def\u7528, \u4f7f\u7528 PC \u4e0a\u7684\u5587\u53ed\u5373\u53ef 8 LED 8 \u6aa2\u89968255 portA \u8f38\u51fa\u7528 9 PC ISA \u7a7a\u7248 1 \u91d1\u624b\u6307 AT \u4ecb\u9762\u96fb\u8def\u677f 10 IC \u8173\u5ea7 N/A \u4e0a\u8ff0 IC \u6240\u9700\u8173\u5ea7 PS. \u6392\u91dd\u5ea7\u53ef\u8996\u9700\u8981\u6e96\u5099. Orcad Family Release 9.2 Lite Edition NO Orcad \u96f6\u4ef6\u5eab \u96f6\u4ef6\u540d\u7a31 1 MISC 82C55A, 8254 2 MUX DECODER GATE 74LS138 3 BUSDRIVER TRANSCEIVER 74LS00 4 DISCRETE 5 CONNECTOR \u96fb\u8def\u6539\u826f NO \u9805\u76ee \u8aaa\u660e 1 \u65c1\u8def\u96fb\u5bb9 \u6bcf\u9846 IC \u65c1\u9760\u8fd1\u96fb\u6e90\u8655\u53ef\u52a0\u4e0a 2 LED \u7684\u9650\u6d41\u96fb\u963b 3 DIP SWITCH \u7684\u5149\u85d5\u5408\u96fb\u6676\u9ad4 Safety First Short Circuit : \u7576\u96fb\u8def\u710a\u63a5\u5b8c\u7562\u5f8c, \u9700\u4f7f\u7528\u4e09\u7528\u96fb\u8868\uff0c\u78ba\u5b9a\u96fb\u8def\u677f\u7684\u6b63\u8ca0\u96fb\u6e90\u6c92\u6709\u77ed\u8def. Software MicroSoft DOS (Disk Operating System) 6.0 debug Red Hat Linux 8.0 GCC (C compiler) G++ (C++ compiler) Windows 98 Turbo C Demonstration DOS DOS\u7cfb\u7d71\u5728\u786c\u789f\u4e0a\u7684\u958b\u6a5f\u901f\u5ea6\u5feb, \u4e14\u5167\u90e8\u7684 Debug \u6307\u4ee4\uff0c\u5728\u96fb\u8def\u677f\u525b\u710a\u597d, \u8981\u9a57\u8b49\u5176\u529f\u80fd\u6642\uff0c\u975e\u5e38\u65b9\u4fbf. \u4f7f\u7528\u6211\u7684\u684c\u4e0a\u578b\u96fb\u8166\u3002\u5728 CONNER CP30254H( 252M ) \u786c\u789f\u4e0a\u5b89\u88dd\u4ee5\u4e0b\u7684\u7cfb\u7d71. NO \u8edf\u9ad4\u540d\u7a31 \u8aaa\u660e \u5fc5\u8981\u6027 1 DOS 6.00 \u7528\u65bc\u96fb\u8166\u958b\u6a5f\uff0c\u8207 debug \u6307\u4ee4 Mandatory 2 PCTOOLS9 \u985e\u4f3c NU8 \u7684\u7cfb\u7d71\u7ba1\u7406\u8207\u4fee\u8b77\u5de5\u5177 Optional 3 Turbo C++ 3.0 C \u7a0b\u5f0f \u7de8\u8b6f\u5668 Optional 4 Macro Assembler 6.11 \u7d44\u5408\u8a9e\u8a00\u7de8\u8b6f\u5668 Optional Debug \u7531\u65bc\u6211\u5011\u53ea\u662f\u8981\u7528\u4f86\u6e2c\u8a66 8255 I/O \u5be6\u9a57\u7248\uff0c\u6545\u53ea\u9700\u8981 DOS 6.00 \u5c31\u53ef\u4ee5\u4e86\uff0c\u5176\u5b83\u8996\u9700\u8981\u518d\u5b89\u88dd. \u5c07 8255 I/O \u5be6\u9a57\u7248 \u63d2\u5165 ISA \u69fd\uff0c\u96fb\u8166\u958b\u6a5f\u5f8c\uff0c\u9375\u5165\u4ee5\u4e0b\u6307\u4ee4. Step \u6307\u4ee4 \u8aaa\u660e 0 C:/> cd dos60 \u5207\u5230 debug \u6240\u5728\u7684\u90a3\u500b\u8cc7\u6599\u593e (Optional) 1 C:/> debug \u9032\u5165 debug \u6a21\u5f0f\uff0c\u6b64\u6642\u6703\u51fa\u73fe\u547d\u4ee4\u63d0\u793a\u5b57\u5143 - 2 - o 303 80 \u8a2d\u5b9a 8255 \u7684 Port A \u3001Port B\u3001Port C \u7686\u70ba\u6a21\u5f0f 0 \u8f38\u51fa 3 - o 300 ff \u4ee4 8255 \u7684 Port A \u8f38\u51fa 11111111 ( LED \u5168\u90e8 \u9ede\u4eae ) 4 - o 300 00 \u4ee4 8255 \u7684 Port A \u8f38\u51fa 00000000 ( LED \u5168 \u6697 ) 5 - o 300 55 \u4ee4 8255 \u7684 Port A \u8f38\u51fa 10101010 ( LED 0\u30012\u30014\u30016 \u9ede\u4eae ) 6 - o 300 aa \u4ee4 8255 \u7684 Port A \u8f38\u51fa 01010101 ( LED 1\u30013\u30014\u30015 \u9ede\u4eae ) 7 - q \u6700\u5f8c\u4e0b q \u547d\u4ee4 \u96e2\u958b debug \u6a21\u5f0f \u7576\u7136\u53ef\u591a\u52a0\u5e7e\u9805\u6e2c\u8a66 8255 I/O \u5be6\u9a57\u7248\uff0c\u82e5\u6e2c\u8a66\u9805\u76ee\u773e\u591a\uff0c\u53ef\u4ee5\u8003\u616e\u5beb \u61c9\u7528\u7a0b\u5f0f\u8a9e\u8a00 ( Turbo C++\u3001Macro Assembler ) \u52a0\u4ee5\u6e2c\u8a66\u3002 Red Hat Linux \u5728 Red Hat Linux 8.0 \u5e73\u53f0\u4e0a \uff0c\u4f7f\u7528 root \u6b0a\u9650 \uff0c\u4ee5 C \u8207 C++ \u4f86\u9a45\u52d5 8255 I/O \u5be6\u9a57\u677f\u3002 \u786c\u789f\u4f7f\u7528 Quantum Fireball Ex( 6449M ) \u4e26\u5b89\u88dd\u4ee5\u4e0b\u7684\u7cfb\u7d71. NO \u8edf\u9ad4\u540d\u7a31 \u8aaa\u660e \u5099\u8a3b 1 RedHat Linux 8.0 \u542b X window( X 11 \uff1b\u8996\u7a97\u74b0\u5883 ) Linux \u4f5c\u696d\u5e73\u53f0 2 gcc 3.2 (20020903) C \u8a9e\u8a00(GNU C) \u7d44\u8b6f\u5668 \u4e0b gcc -v \u6307\u4ee4 \u53ef\u67e5\u770b gcc \u7248\u672c 3 g++ C++ \u8a9e\u8a00\u7d44\u8b6f\u5668 \u7d44\u8b6f\u5668 4 QT KDE UI \u5de5\u5177\u7d44 \u9700\u4f7f\u7528 g++ \u7de8\u8b6f\u5668. QT \u53c3\u8003\u624b\u518a \u7c21\u9ad4 5 Kate \u7de8\u8f2f C/C++ \u8a9e\u8a00\u7528 \u7de8\u8f2f\u5668 \u4f7f\u7528 C \u8a9e\u8a00 \u8207 C++ \u8a9e\u8a00\u4f86\u63a7\u5236 I/O \u6240\u9700 include \u7684\u6a19\u982d\u6a94. NO \u4f7f\u7528\u8a9e\u8a00 \u6240\u9700 INCLUDE \u7684\u6a94\u6848\u8207\u8a9e\u6cd5 1 C \u8a9e\u8a00 #include 2 C++\u8a9e\u8a00 #include C There are some programs which can help us to verify the hardware and software. NO \u7a0b\u5f0f\u540d\u7a31 \u8aaa\u660e 1 hello.c Linux C \u7684\u57fa\u672c\u6e2c\u8a66\uff0c\u5370\u51fa Hello, world 2 kb.c \u985e\u4f3c DOS \u4e0a \u7684 kbhit \u51fd\u5f0f(\u5075\u6e2c\u9375\u76e4\u662f\u5426\u88ab\u6309\u4e0b)\u529f\u80fd 3 io.c \u4ee5 Linux C \u63a7\u5236 \u9583\u720d 8255 I/O \u5be6\u9a57\u677f\u4e0a\u7684 LED 4 blink.c \u7d50\u5408kb.c\u8207io.c.\u8b93\u5be6\u9a57\u677f\u4e0a\u7684LED\u4e0d\u505c\u9583\u720d\uff0c\u76f4\u5230\u6309\u4e0bq\u9375\u624d\u96e2\u958b 5 pili_testing.c \u8dd1\u99ac\u71c8\u6a21\u64ec\u7a0b\u5f0f\u3002\u75311\u8a08\u6578\u81f3128,128\u8a08\u6578\u81f31,\u4f86\u56de\u5217\u537020 \u6b21 6 pili.c LED \u8dd1\u99ac\u71c8\u3002\u8b93\u5be6\u9a57\u677f\u4e0a\u7684 LED\u4f86\u56de\u9583\u720d\uff0c\u76f4\u5230\u6309\u4e0b q \u624d\u96e2\u958b \u7531\u6700\u5f8c\u7684\u8dd1\u99ac\u71c8\u7a0b\u5f0f\uff0c\u6700\u5f8c\u78ba\u5b9a \u53ef\u63a7\u5236 8255 I/O \u5be6\u9a57\u677f. Programming hello.c /**************************************************************************** Filename: hello.c Compiler: gcc -O -o hello hello.c Author : Jing-Wen.Lai Function: Linux C \u7684\u57fa\u672c\u6e2c\u8a66\uff0c\u5370\u51fa Hello, world\u3002 Date: 3/22 2003 ****************************************************************************/ #include <stdio.h> int main ( int argc , char * argv []) { printf ( \"Hello, world \\n \" ); return 0 ; } kb.c /**************************************************************************** Filename: kb.c Compiler: gcc -O -o kb kb.c Author: Jing-Wen.Lai Function: \u5e73\u5e38\u57f7\u884c Loop \u5370\u51fa \u8a08\u6578 \u8a0a\u606f \uff0c\u9664\u975e\u9375\u76e4\u6309\u4e0b 'q' \u9375 \u5247\u96e2\u958b\u8a08\u6578 Loop \u3002 Date: 03/22 2003 Reference: \u53c3\u8003\u4ee5\u4e0b\u7db2\u8def\u6587\u4ef6\u6539\u5beb http://www.control.auc.dk/~jnn/c2000/programs/mm5/keyboardhit/msg02541.html ****************************************************************************/ #include <stdio.h> #include <termios.h> static struct termios orig , new ; static int peek = -1 ; int main () { int ch = 0 ; /* \u9375\u76e4\u6240\u6309\u4e0b\u7684\u5b57\u5143 */ int loopCount = 1 ; /* Loop \u7528 \u8a08\u6578\u5668 */ tcgetattr ( 0 , & orig ); new = orig ; new . c_lflag &= ~ ICANON ; new . c_lflag &= ~ ECHO ; new . c_lflag &= ~ ISIG ; new . c_cc [ VMIN ] = 1 ; new . c_cc [ VTIME ] = 0 ; tcsetattr ( 0 , TCSANOW , & new ); /* =========================== */ /* [[ \u7576\u8f38\u5165\u5b57\u5143\u4e0d\u70ba q \u6642 ]] */ /* =========================== */ while ( ch != 'q' ) { printf ( \"looping %d time(s) \\n \" , loopCount ); sleep ( 1 ); loopCount ++ ; if ( kbhit ()) { ch = readch (); printf ( \"== Input %c == \\n \" , ch ); } } /* ======================== */ /* [[ \u8f38\u5165\u5b57\u5143 \u70ba q \u6642 ]] */ /* ======================== */ printf ( \"== Quit == \\n \" ); tcsetattr ( 0 , TCSANOW , & orig ); exit ( 0 ); } /* ======================= */ /* SUB Function */ /* ======================= */ int kbhit () { char ch ; int nread ; if ( peek != -1 ) return 1 ; new . c_cc [ VMIN ] = 0 ; tcsetattr ( 0 , TCSANOW , & new ); nread = read ( 0 , & ch , 1 ); new . c_cc [ VMIN ] = 1 ; tcsetattr ( 0 , TCSANOW , & new ); if ( nread == 1 ) { peek = ch ; return 1 ; } return 0 ; } int readch () { char ch ; if ( peek != -1 ) { ch = peek ; peek = -1 ; return ch ; } read ( 0 , & ch , 1 ); return ch ; } io.c /**************************************************************************** -- io.c <Linux I/O \u57e0 \u57fa\u672c\u6e2c\u8a66 -- \u6e2c\u8a66 \u525b\u7d44\u88dd\u5b8c\u6210\u7684 IO \u677f\u7528> -- Author: Jing-Wen.Lai Function: \u4ee5 Linux C \u63a7\u5236 8255 I/O \u5be6\u9a57\u677f\u4e0a\u7684 LED, Compiler: \u4f7f\u7528 `gcc -O2 -o io io.c', Running: \u4ee5 root \u7684\u8eab\u4efd\u57f7\u884c `./io'. Reference: \u7531<<CLDP -- Linux \u4e2d\u6587\u6587\u4ef6\u8a08\u5283>>\u6539\u5beb http://www.linux.org.tw/CLDP/mini/IO-Port-Programming-9.html ****************************************************************************/ #include <stdio.h> #include <unistd.h> #include <asm/io.h> #define CCW 0x303 /* 8255 CCW */ #define PA 0x300 /* 8255 PORT A */ int main () { int i = 0 ; /* \u53d6\u5f97\u57e0\u4f4d\u5740\u7684\u5b58\u53d6\u6b0a\u9650 */ if ( ioperm ( CCW , 3 , 1 )) { perror ( \"ioperm\" ); exit ( 1 );} if ( ioperm ( PA , 3 , 1 )) { perror ( \"ioperm\" ); exit ( 1 );} /* \u5b9a\u7fa9 8255 \u5de5\u4f5c\u6a21\u5f0f */ outb ( 0x80 , CCW ); /* \u91cd\u7f6e 8255 PORT A \u7684\u8f38\u51fa\u8cc7\u6599\u4fe1\u865f (D0-7) \u5168\u70ba\u96f6 (0) */ outb ( 0 , PA ); /* LED \u4ea4\u4e92 \u9583\u720d 10 \u6b21 \uff0c\u6bcf\u6b21 1000 ms */ for ( i = 1 ; i <= 10 ; i ++ ){ usleep ( 1000000 ); if ( i % 2 == 0 ){ outb ( 0x00 , PA ); printf ( \"-X- step: %d \\n \" , i ); } else { outb ( 0xFF , PA ); printf ( \"-O- step: %d \\n \" , i ); } } /* \u6211\u5011\u4e0d\u518d\u9700\u8981\u9019\u4e9b\u57e0\u4f4d\u5740 */ if ( ioperm ( CCW , 3 , 0 )) { perror ( \"ioperm\" ); exit ( 1 );} if ( ioperm ( PA , 3 , 0 )) { perror ( \"ioperm\" ); exit ( 1 );} exit ( 0 ); /* \u7d50\u675f io.c */ } blink.c /****************************************************************************** Filename: blink.c Compiler: gcc -O -o blink blink.c Author: Jing-Wen.Lai Function: \u5e73\u5e38\u57f7\u884c Loop \u5370\u51fa \u8a08\u6578 \u8a0a\u606f \uff0c 8255 I/O \u5be6\u9a57\u677f\u4e0a\u7684 LED \u4ea6\u96a8\u4e4b\u9583\u720d \u9664\u975e\u9375\u76e4\u6309\u4e0b 'q' \u9375 \u5247\u96e2\u958b\u8a08\u6578 Loop \u3002 Date: May. 22/2003 ******************************************************************************/ #include <stdio.h> #include <termios.h> #include <unistd.h> #include <asm/io.h> #define CCW 0x303 /* 8255 CCW */ #define PA 0x300 /* 8255 PORT A */ static struct termios orig , new ; static int peek = -1 ; int main () { int ch = 0 ; /* \u9375\u76e4\u6240\u6309\u4e0b\u7684\u5b57\u5143 */ int loopCount = 0 ; /* Loop \u7528 \u8a08\u6578\u5668 */ tcgetattr ( 0 , & orig ); new = orig ; new . c_lflag &= ~ ICANON ; new . c_lflag &= ~ ECHO ; new . c_lflag &= ~ ISIG ; new . c_cc [ VMIN ] = 1 ; new . c_cc [ VTIME ] = 0 ; tcsetattr ( 0 , TCSANOW , & new ); /* \u53d6\u5f97\u57e0\u4f4d\u5740\u7684\u5b58\u53d6\u6b0a\u9650 */ if ( ioperm ( CCW , 3 , 1 )) { perror ( \"ioperm\" ); exit ( 1 );} if ( ioperm ( PA , 3 , 1 )) { perror ( \"ioperm\" ); exit ( 1 );} /* \u5b9a\u7fa9 8255 \u5de5\u4f5c\u6a21\u5f0f */ outb ( 0x80 , CCW ); /* \u91cd\u7f6e 8255 PORT A \u7684\u8f38\u51fa\u8cc7\u6599\u4fe1\u865f (D0-7) \u5168\u70ba\u96f6 (0) */ outb ( 0 , PA ); /* =========================== */ /* [[ \u7576\u8f38\u5165\u5b57\u5143\u4e0d\u70ba q \u6642 ]] */ /* =========================== */ /* LED \u4ea4\u4e92 \u9583\u720d */ while ( ch != 'q' ) { //printf(\"looping %d times \\n\",loopCount); sleep ( 1 ); loopCount ++ ; if ( loopCount % 2 == 0 ){ outb ( 0x00 , PA ); printf ( \"-X- step: %d \\n \" , loopCount ); } else { outb ( 0xFF , PA ); printf ( \"-O- step: %d \\n \" , loopCount ); } if ( kbhit ()) { ch = readch (); } } /* ======================== */ /* [[ \u8f38\u5165\u5b57\u5143 \u70ba q \u6642 ]] */ /* ======================== */ // LED \u4e0d\u4eae outb ( 0x00 , PA ); /* \u6211\u5011\u4e0d\u518d\u9700\u8981\u9019\u4e9b\u57e0\u4f4d\u5740 */ if ( ioperm ( CCW , 3 , 0 )) { perror ( \"ioperm\" ); exit ( 1 );} if ( ioperm ( PA , 3 , 0 )) { perror ( \"ioperm\" ); exit ( 1 );} printf ( \"== Quit == \\n \" ); tcsetattr ( 0 , TCSANOW , & orig ); exit ( 0 ); } /* ======================= */ /* sub Function */ /* ======================= */ int kbhit () { char ch ; int nread ; if ( peek != -1 ) return 1 ; new . c_cc [ VMIN ] = 0 ; tcsetattr ( 0 , TCSANOW , & new ); nread = read ( 0 , & ch , 1 ); new . c_cc [ VMIN ] = 1 ; tcsetattr ( 0 , TCSANOW , & new ); if ( nread == 1 ) { peek = ch ; return 1 ; } return 0 ; } int readch () { char ch ; if ( peek != -1 ) { ch = peek ; peek = -1 ; return ch ; } read ( 0 , & ch , 1 ); return ch ; } pili_test.c /**************************************************************************** Filename: pili_test.c Compiler: gcc -O -o pili_test pili_test.c Author : Jing-Wen.Lai Function : \u7531 1 \u8a08\u6578\u81f3 128 \uff0c 128 \u8a08\u6578\u81f3 1\uff0c\u4f86\u56de\u5217\u5370 Date : 3/23 2003 ****************************************************************************/ #include <stdio.h> int main (){ int LED_Data = 0x01 ; /* \u521d\u59cb\u5316\u8cc7\u6599 */ int directionFlag = 1 ; /* 1: LED \u5411\u5de6\u9ede\u4eae ; 0:LED \u5411\u53f3\u9ede\u4eae */ int i ; for ( i = 0 ; i < 20 ; i ++ ){ printf ( \"%d \\n \" , LED_Data ); if ( directionFlag == 1 ) { LED_Data *= 2 ; if ( LED_Data == 128 ){ directionFlag = 0 ; } } else { LED_Data /= 2 ; if ( LED_Data == 1 ){ directionFlag = 1 ; } } } } pili.c /**************************************************************************** Filename: blink.c Compiler: gcc -O -o blink blink.c Author: Jing-Wen.Lai Function: \u76ee\u7684 :: LED \u8d70\u99ac\u71c8\u3002\u9664\u975e\u9375\u76e4\u6309\u4e0b 'q' \u9375 \u5247\u96e2\u958b\u8a08\u6578 Loop \u3002 Date: 3/22 2003 ****************************************************************************/ #include <stdio.h> #include <termios.h> #include <unistd.h> #include <asm/io.h> #define CCW 0x303 /* 8255 CCW */ #define PA 0x300 /* 8255 PORT A */ static struct termios orig , new ; static int peek = -1 ; int main () { int ch = 0 ; /* \u9375\u76e4\u6240\u6309\u4e0b\u7684\u5b57\u5143 */ int loopCount = 0 ; /* Loop \u7528 \u8a08\u6578\u5668 */ int LED_Data = 0x01 ; /* \u521d\u59cb\u5316\u8cc7\u6599 */ int directionFlag = 1 ; /* 1: LED \u5411\u5de6\u9ede\u4eae ; 0:LED \u5411\u53f3\u9ede\u4eae */ tcgetattr ( 0 , & orig ); new = orig ; new . c_lflag &= ~ ICANON ; new . c_lflag &= ~ ECHO ; new . c_lflag &= ~ ISIG ; new . c_cc [ VMIN ] = 1 ; new . c_cc [ VTIME ] = 0 ; tcsetattr ( 0 , TCSANOW , & new ); /* \u53d6\u5f97\u57e0\u4f4d\u5740\u7684\u5b58\u53d6\u6b0a\u9650 */ if ( ioperm ( CCW , 3 , 1 )) { perror ( \"ioperm\" ); exit ( 1 );} if ( ioperm ( PA , 3 , 1 )) { perror ( \"ioperm\" ); exit ( 1 );} /* \u5b9a\u7fa9 8255 \u5de5\u4f5c\u6a21\u5f0f */ outb ( 0x80 , CCW ); /* \u91cd\u7f6e 8255 PORT A \u7684\u8f38\u51fa\u8cc7\u6599\u4fe1\u865f (D0-7) \u5168\u70ba\u96f6 (0) */ outb ( 0 , PA ); /* =========================== */ /* [[ \u7576\u8f38\u5165\u5b57\u5143\u4e0d\u70ba q \u6642 ]] */ /* =========================== */ /* LED \u4ea4\u4e92 \u9583\u720d */ while ( ch != 'q' ) { sleep ( 1 ); outb ( LED_Data , PA ); printf ( \"Pili Lamp is Running and The 8255-Port-A's outData is %d \\n \" , LED_Data ); if ( directionFlag == 1 ){ LED_Data *= 2 ; if ( LED_Data == 128 ){ directionFlag = 0 ; } } else { LED_Data /= 2 ; if ( LED_Data == 1 ){ directionFlag = 1 ; } } if ( kbhit ()) { ch = readch (); } } /* ======================== */ /* [[ \u8f38\u5165\u5b57\u5143 \u70ba q \u6642 ]] */ /* ======================== */ // LED \u4e0d\u4eae outb ( 0x00 , PA ); /* \u6211\u5011\u4e0d\u518d\u9700\u8981\u9019\u4e9b\u57e0\u4f4d\u5740 */ if ( ioperm ( CCW , 3 , 0 )) { perror ( \"ioperm\" ); exit ( 1 );} if ( ioperm ( PA , 3 , 0 )) { perror ( \"ioperm\" ); exit ( 1 );} printf ( \"== Quit == \\n \" ); tcsetattr ( 0 , TCSANOW , & orig ); exit ( 0 ); } /* ======================= */ /* sub Function */ /* ======================= */ int kbhit () { char ch ; int nread ; if ( peek != -1 ) return 1 ; new . c_cc [ VMIN ] = 0 ; tcsetattr ( 0 , TCSANOW , & new ); nread = read ( 0 , & ch , 1 ); new . c_cc [ VMIN ] = 1 ; tcsetattr ( 0 , TCSANOW , & new ); if ( nread == 1 ) { peek = ch ; return 1 ; } return 0 ; } int readch () { char ch ; if ( peek != -1 ) { ch = peek ; peek = -1 ; return ch ; } read ( 0 , & ch , 1 ); return ch ; } C++ There are some programs which can help us to verify the hardware and software. ID \u7a0b\u5f0f\u540d\u7a31 \u8aaa\u660e 1 hello.cpp Linux C++ \u7684\u57fa\u672c\u6e2c\u8a66\uff0c\u5370\u51fa Hello C++ ! 2 io.cpp Linux I/O \u57e0 \u57fa\u672c\u6e2c\u8a66 -- \u6e2c\u8a66 \u525b\u7d44\u88dd\u5b8c\u6210\u7684 IO \u677f\u7528 3 class_io.cpp LED \u8dd1\u99ac\u71c8\u3002\u5168\u6697, \u5168\u4eae, \u5de6\u79fb, \u53f3\u79fb \u6e2c\u8a66 hello.cpp /****************************************************************************** Filename: hello.cpp Compiler: g++ -Wno-deprecated -ohello hello.cpp Function: C++ \u7684\u57fa\u672c\u6e2c\u8a66\uff0c\u5370\u51fa Hello C++!\u3002 Date: 3/23 2003 Reference: ******************************************************************************/ #include <iostream.h> int main () { cout << \"Hello C++ !\" << endl ; return ( 0 ); } io.cpp /****************************************************************************** Filename: io.cpp Function: Linux I/O \u57e0 \u57fa\u672c\u6e2c\u8a66 -- \u6e2c\u8a66 \u525b\u7d44\u88dd\u5b8c\u6210\u7684 IO \u677f\u7528 Compiler: \u4f7f\u7528 `g++ -O -o io io.cpp', Running: \u4ee5 root \u7684\u8eab\u4efd\u57f7\u884c `./io'. Reference: \u7531<<CLDP -- Linux \u4e2d\u6587\u6587\u4ef6\u8a08\u5283>>\u6539\u5beb http://www.linux.org.tw/CLDP/mini/IO-Port-Programming-9.html ******************************************************************************/ #include <stdio.h> #include <unistd.h> #include <sys/io.h> #define CCW 0x303 /* 8255 CCW */ #define PA 0x300 /* 8255 PORT A */ int main () { /* \u53d6\u5f97\u57e0\u4f4d\u5740\u7684\u5b58\u53d6\u6b0a\u9650 */ if ( ioperm ( CCW , 3 , 1 )) { perror ( \"ioperm\" ); return ( 0 );} if ( ioperm ( PA , 3 , 1 )) { perror ( \"ioperm\" ); return ( 0 );} /* \u5b9a\u7fa9 8255 \u5de5\u4f5c\u6a21\u5f0f */ outb ( 0x80 , CCW ); /* \u91cd\u7f6e 8255 PORT A \u7684\u8f38\u51fa\u8cc7\u6599\u4fe1\u865f (D0-7) \u5168\u70ba\u96f6 (0) */ outb ( 0 , PA ); /* PILI \u71c8 (1000 ms) \u4ea4\u4e92 \u9583\u720d */ for ( int i = 1 ; i <= 10 ; i ++ ){ usleep ( 1000000 ); if ( i % 2 == 0 ){ outb ( 0x00 , PA ); printf ( \"-X- step: %d \\n \" , i ); } else { outb ( 0xFF , PA ); printf ( \"-O- step: %d \\n \" , i ); } } /* \u6211\u5011\u4e0d\u518d\u9700\u8981\u9019\u4e9b\u57e0\u4f4d\u5740 */ if ( ioperm ( CCW , 3 , 0 )) { perror ( \"ioperm\" ); return ( 0 );} if ( ioperm ( PA , 3 , 0 )) { perror ( \"ioperm\" ); return ( 0 );} return ( 0 ); } class_io.cpp /****************************************************************************** Filename: class_io.cpp Compiler: g++ -Wno-deprecated -oclass_io class_io.cpp Author: Jing-Wen.Lai Function: \u63a7\u5236 8255 I/O \u5361\u4e0a\u7684 LED , \u4f7f\u4e4b\u80fd\u5920 \u5411\u7cfb\u7d71\u7533\u8acb 8255\u5361\u6240\u9700\u7684\u4f4d\u7f6e, \u5c07 8255\u5361\u6240\u9700\u7684\u4f4d\u7f6e\u9084\u7d66\u7cfb\u7d71,\u8207 (1) LED \u5168\u90e8\u9ede\u4eae, (2) LED \u5168\u90e8\u7184\u6ec5, (3) LED \u7531\u5de6\u5f80\u53f3\u8dd1, (4) LED \u7531\u53f3\u5f80\u5de6\u8dd1. ******************************************************************************/ #include <iostream.h> #include <stdio.h> #include <termios.h> #include <unistd.h> #include <sys/io.h> #define CCW 0x303 /* 8255 CCW */ #define PA 0x300 /* 8255 PORT A */ class ClassForPio8255Card // \u985e\u5225Person\u5ba3\u544a { private : int pio8255CardPort_A_Data ; public : int initAndApplySystemAddrFor8255Card (); // \u5411\u7cfb\u7d71\u7533\u8acb 8255\u5361\u6240\u9700\u7684\u4f4d\u7f6e int releaseSystemAddrFor8255Card (); // \u5c07 8255\u5361\u6240\u4f54\u7528\u7684\u4f4d\u7f6e\u9084\u7d66\u7cfb\u7d71 void piliLampFromMSBtoLSB (); // 8255\u5361\u4e0a\u7684LED \u6703\u7531\u9ad8\u4f4d\u5143\u9ede\u4eae\u5230\u4f4e\u4f4d\u5143 void piliLampFromLSBtoMSB (); // 8255\u5361\u4e0a\u7684LED \u6703\u7531\u4f4e\u4f4d\u5143\u9ede\u4eae\u5230\u9ad8\u4f4d\u5143 void brightAllLedOn8255Card (); // \u9ede\u4eae 8255\u5361\u4e0a\u7684 LED void darkAllLedOn8255Card (); // \u7184\u6389 8255\u5361\u4e0a\u7684 LED }; int main () { int ch = 0 ; /* \u9375\u76e4\u6240\u6309\u4e0b\u7684\u5b57\u5143 */ ClassForPio8255Card pio8255Card ; pio8255Card . initAndApplySystemAddrFor8255Card (); // \u521d\u59cb\u5316 8255 \u5361 while ( ch != 5 ){ cout << \"1:Brighting all LED 2:Darking all LED 3:PILI LED(MSB->LSB) 4:PILI LED(LSB->MSB) \\n \" ; cin >> ch ; cout << \"Selected Function is :\" << ch << \" \\n \" ; switch ( ch ){ case 1 : pio8255Card . brightAllLedOn8255Card (); break ; case 2 : pio8255Card . darkAllLedOn8255Card (); break ; case 3 : pio8255Card . piliLampFromMSBtoLSB (); break ; case 4 : pio8255Card . piliLampFromLSBtoMSB (); break ; default : cout << \"undefine Function ,try again please! \\n \" ; break ; } } pio8255Card . releaseSystemAddrFor8255Card (); return ( 0 ); } int ClassForPio8255Card::initAndApplySystemAddrFor8255Card (){ //cout << \"initAndApplySystemAddrFor8255Card\\n\"; /* \u53d6\u5f97\u57e0\u4f4d\u5740\u7684\u5b58\u53d6\u6b0a\u9650 */ if ( ioperm ( CCW , 3 , 1 )) { perror ( \"ioperm\" ); return ( 0 );} if ( ioperm ( PA , 3 , 1 )) { perror ( \"ioperm\" ); return ( 0 );} /* \u5b9a\u7fa9 8255 \u5de5\u4f5c\u6a21\u5f0f */ outb ( 0x80 , CCW ); /* \u91cd\u7f6e 8255 PORT A \u7684\u8f38\u51fa\u8cc7\u6599\u4fe1\u865f (D0-7) \u5168\u70ba\u96f6 (0) */ outb ( 0 , PA ); } void ClassForPio8255Card::brightAllLedOn8255Card (){ //cout << \"brightAllLedOn8255Card\\n\"; outb ( 0xff , PA ); } void ClassForPio8255Card::darkAllLedOn8255Card (){ //cout << \"darkAllLedOn8255Card\\n\"; outb ( 0x00 , PA ); } void ClassForPio8255Card::piliLampFromLSBtoMSB (){ pio8255CardPort_A_Data = 0x01 ; for ( int i = 0 ; i < 8 ; i ++ ){ outb ( pio8255CardPort_A_Data , PA ); usleep ( 1000000 ); pio8255CardPort_A_Data *= 2 ; } } void ClassForPio8255Card::piliLampFromMSBtoLSB (){ pio8255CardPort_A_Data = 0x80 ; for ( int i = 0 ; i < 8 ; i ++ ){ outb ( pio8255CardPort_A_Data , PA ); usleep ( 1000000 ); pio8255CardPort_A_Data /= 2 ; } } int ClassForPio8255Card::releaseSystemAddrFor8255Card (){ //cout << \"releaseSystemAddrFor8255Card\\n\"; // LED \u6697 outb ( 0x00 , PA ); /* \u6211\u5011\u4e0d\u518d\u9700\u8981\u9019\u4e9b\u57e0\u4f4d\u5740 */ if ( ioperm ( CCW , 3 , 0 )) { perror ( \"ioperm\" ); return ( 0 );} if ( ioperm ( PA , 3 , 0 )) { perror ( \"ioperm\" ); return ( 0 );} } Windows Turbo C //********************************************************************************** //-- PC\u4e0a\u4ecb\u9762\u5be6\u7fd2 8255 \u8207 8254 \u6e2c\u8a66 //-- \u7248\u672c: v0.1 6/6/2001 //-- \u8aaa\u660e: \u6e2c\u8a66 \u7d44\u88dd \u5b8c\u7562 \u7684 8255 \u8207 8254 \u662f\u5426\u53ef\u52d5\u4f5c //-- \u4f7f\u7528\u65b9\u5f0f: \u96a8\u610f\u6309\u4efb\u4e00\u6309\u9375, \u87a2\u5e55\u4e0a \u986f\u793a \"O\", \u6b64\u6642 LED 1,2,5,6 \u4eae, \u4e26\u4e14\u5587\u53ed\u767c\u51fa\u8072\u97f3 //-- \u518d\u96a8\u610f\u6309\u4efb\u4e00\u6309\u9375, \u87a2\u5e55\u4e0a \u986f\u793a \"X\", \u6b64\u6642 LED \u5168\u90e8 \u4e0d\u4eae, \u4e26\u4e14\u5587\u53ed\u4e0d\u767c\u51fa\u8072\u97f3 //-- \u6309 \"Esc\" \u9375 \u53ef \u96e2\u958b\u672c\u7a0b\u5f0f //--================================================================================ //-- IO \u4f4d\u5740 : \u8acb \u53c3\u8003 \u4e0b\u9762 #define \u7684\u5b9a\u7fa9 //-- \u914d\u5408\u786c\u9ad4 : \u53c3\u8003 \u4e0b\u9762 \u53c3\u8003\u6587\u4ef6 //-- \u5143\u4ef6\u5217\u8868 : 8255 X 1 ( \u53ef\u7a0b\u5f0f\u898f\u5283\u908f\u8f2f\u4ecb\u9762 ; PPI) //-- 8254 X 1 ( \u53ef\u7a0b\u5f0f\u898f\u5283\u8a08\u6578(\u6642)\u4ecb\u9762 / \u6700\u9ad8\u8f38\u5165\u6642\u5e8f 8 MHz ) //-- ( \u65e5\u672c NEC \u7de8\u865f\u7684 8254 \u70ba D71054C ) //-- //-- 74LS138 X 1 ( \u89e3\u78bc\u81f4\u80fd 8255 \u8207 8254 \u7528 ) //-- 74LS00 X 1 ( \u89e3\u78bc\u81f4\u80fd 74LS138 \u8207 \u5587\u53ed\u96fb\u8def ) //-- //-- 5K \u53ef\u8abf\u5f0f\u96fb\u963b X 1 ( \u5587\u53ed\u96fb\u8def\u7528 ) //-- C1815 X 1 ( \u5587\u53ed\u96fb\u8def\u7528 , \u7de8\u865f\u9762 \u63a5\u8173 ECB) //-- \u5587\u53ed X 1 ( \u5587\u53ed\u96fb\u8def\u7528, \u4f7f\u7528 PC \u4e0a\u7684\u5587\u53ed\u5373\u53ef) //-- LED X 8 ( \u6aa2\u89968255 portA \u8f38\u51fa\u7528(\u5341\u9846\u5305\u88dd\u578b LED \u6709\u6642\u7121\u6cd5\u52d5\u4f5c)) //-- //-- \u91d1\u624b\u6307 AT \u4ecb\u9762\u96fb\u8def\u677f //-- \u4e0a\u8ff0 IC \u6240\u9700\u8173\u5ea7 \u53ca \u4e00\u822c\u710a\u63a5\u5de5\u5177 //--================================================================================ //-- \u7de8\u8f2f\u5668 : Jext ( http://www.jext.org/ ) //-- \u7d44\u8b6f\u5668 : Turbo C++ //-- \u53c3\u8003\u6587\u4ef6 : PC XT/AT \u4ecb\u9762\u8a2d\u8a08\u8207\u61c9\u7528 Visual Basic 6.0 \u7248(ISBN:957-499-229-2) / \u5112\u6797 //-- 8254 \u96fb\u8def\u5716 P 5-57 //-- 8255 \u96fb\u8def\u5716 P 3-49 (\u4f4d\u5740\u9078\u53d6\u65b9\u5f0f \u6539\u7528 8255 \u9078\u53d6\u65b9\u5f0f) //-- \u539f\u66f8\u932f\u8aa4\u66f4\u6b63 : // p5-62 DEBUG \u5167\u7684 \u5012\u6578\u7b2c\u516b\u500b\u6307\u4ee4\u70ba -O 303 00 //-- \u61c9\u6539\u70ba -O 302 00 //-- \u5012\u6578\u7b2c\u4e03\u500b\u6307\u4ee4\u70ba -O 303 02 //-- \u61c9\u6539\u70ba -O 302 02 //-- \u5012\u6578\u7b2c\u4e09\u500b\u6307\u4ee4\u70ba -O 303 01 //-- \u61c9\u6539\u70ba -O 302 01 //-- \u5012\u6578\u7b2c\u4e8c\u500b\u6307\u4ee4\u70ba -O 323 03 //-- \u61c9\u6539\u70ba -O 302 03 //-- \u5012\u6578\u7b2c\u4e00\u500b\u6307\u4ee4\u70ba -O 303 02 \u8a3b\u89e3\u8655\u70ba \u7981\u80fd \u8702\u9cf4\u5668 //-- \u61c9\u6539\u70ba -O 302 02 \u61c9\u6539\u70ba \u7981\u80fd \u7b2c\u4e8c\u8a08\u6578\u5668 //-- p5-65 \u7a0b\u5f0f\u78bc\u5167\u4f5c\u8005\u628a PPI_PC \u548c PPI_CW \u7684\u4f4d\u5740 \u6709\u6642\u5f04\u6df7\u310b //-- ( \u932f\u8aa4\u883b\u591a\u7684 \u6539\u7684\u6709\u9ede \u773c\u82b1\u310b ,\u4e0d\u904e\u4f9d\u4f5c\u8005\u7684\u932f\u8aa4\u7a0b\u5f0f\u78bc\u537b\u53ef\u4ee5\u57f7\u884c,\u771f\u4ee4\u4eba\u8a1d\u7570) //-- \u5099\u8a3b: \u7121\u6cd5\u5728 \u6211\u7684 P-II \u4e0a\u6e2c\u8a66(\u6216\u8a31\u9700\u8abf\u6574 \u5b89\u9081 ROM \u5167 CLK \u7684\u8a2d\u5b9a,\u4f46\u8207\u53ef\u4ee5\u6e2c\u8a66\u7684 P-I \u4e3b\u6a5f ROM \u8a2d\u5b9a\u5167\u7121\u6cd5\u767c\u73fe\u76f8\u540c\u7684 Function) //-- ,\u6539\u6210\u65bc \u6aa2\u4f86\u7684 P-I \u4e0a\u6e2c\u8a66 ,\u7531\u65bc P-I \u7684\u914d\u5099\u8f03\u967d\u6625 \u6545\u5c07\u7a0b\u5f0f\u78bc \u6539\u6210\u7528 Turbo C++ \u5beb //-- \u6ce8\u610f: \u5728 #define \u5f8c\u7684 \u8a3b\u89e3 \u9700\u4ee5 \" // \" \u958b\u982d \u4e0d\u80fd\u4f7f\u7528 \" ; \" //-- \u66f4\u65b0Log: // //********************************************************************************** #include <iostream.h> //#include <bios.h> //#include <dos.h> #include <conio.h> //>>>>>>>>>>>>>>>>>>>>>>>>> 8255 \u7528 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< #define PPI_8255_CW 0x3f3 // 8255 \u5167\u7684 \u63a7\u5236\u5b57\u7d44 \u4f4d\u5740 #define PPI_8255_CW_STATE 0x80 // \u8a2d\u5b9a 8255 \u70ba MODE0 \u5168\u90e8 PORT \u7686\u70ba\u8f38\u51fa //>>>>>>>>>>>>>>>>>>>>>>>>> 8255 portA LED \u986f\u793a \u7528 <<<<<<<<<<<<<<<<<<<<<<< #define PPI_8255_PA 0X3f0 // 8255 \u5167\u7684 PORT A \u4f4d\u5740 #define ledEnable 0x00 // 8255 port A \u8f38\u51fa\u81f3 LED 1,2,5,6 \u4eae #define ledDisable 0xff // 8255 port A \u8f38\u51fa\u81f3 LED \u5168\u90e8 \u4e0d\u4eae //>>>>>>>>>>>>>>>>>>>>>>>>> 8254 \u7528 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< #define PPC_8254_CW 0x323 // 8254 \u5167\u7684 \u63a7\u5236\u5b57\u7d44 \u4f4d\u5740 #define PPC_8254_CW_STATE 0XB6 // \u8a2d\u5b9a 8254 \u7b2c\u4e8c\u8a08\u6578\u5668 \u70ba \u6a21\u5f0f\u4e09 ,\u8b80\u5beb \u9ad8\u4f4e\u4f4d\u5143\u7d44 , HEX //>>>>>>>>>>>>>>>>>>>>>>>>> \u8702\u9cf4\u5668 \u7528 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< #define PPI_8255_PC 0X3f2 // 8255 \u5167\u7684 PORT C \u4f4d\u5740 , PC 0 \u63a7\u5236 8254 \u7b2c\u4e8c\u8a08\u6578\u5668 \u7528 , PC 1 \u63a7\u5236 \u8702\u9cf4\u5668 \u7528 #define PPC_8254_C2 0X322 // 8254 \u5167\u7684 \u7b2c\u4e8c\u8a08\u6578\u5668 \u4f4d\u5740 #define PPC_8254_C2_STATE 0XFF // 8254 \u5167\u7684 \u7b2c\u4e8c\u8a08\u6578\u5668 \u7684\u9ad8\u4f4e\u4f4d\u5143\u7d44\u8a08\u6578\u503c #define bellDisable 0x00 // \u7981\u80fd \u7b2c\u4e8c\u8a08\u6578\u5668 ,\u7981\u80fd\u63da\u8072\u5668 #define bellEnable 0xff // \u81f4\u80fd \u7b2c\u4e8c\u8a08\u6578\u5668 ,\u81f4\u80fd\u63da\u8072\u5668 void out ( unsigned int ioAddr , unsigned char ioData ) { asm { mov dx , ioAddr mov al , ioData out dx , al }; } void main () { clrscr (); cout << \"push Esc to exit\" << endl ; //>>>>>>>>> 8255 \u521d\u59cb\u5316 <<<<<<<<< out ( PPI_8255_CW , PPI_8255_CW_STATE ); // \u8a2d\u5b9a 8255 //outportb(PPI_8255_CW, PPI_8255_CW_STATE); // \u8a2d\u5b9a 8255 out ( PPI_8255_PC , bellDisable ); // \u5148\u7981\u80fd \u8702\u9cf4\u5668\u53ca 8254 out ( PPC_8254_CW , PPC_8254_CW_STATE ); // \u8a2d\u5b9a 8254 \u7b2c\u4e8c\u8a08\u6578\u5668 out ( PPC_8254_C2 , PPC_8254_C2_STATE ); // \u8a08\u6578\u503c\u5beb\u5165 \u7b2c\u4e8c\u8a08\u6578\u5668\u7684 \u4f4e\u4f4d\u5143\u7d44 out ( PPC_8254_C2 , PPC_8254_C2_STATE ); // \u8a08\u6578\u503c\u5beb\u5165 \u7b2c\u4e8c\u8a08\u6578\u5668\u7684 \u9ad8\u4f4d\u5143\u7d44 int i = 0 , j = 0 ; while ( i < 500 ){ if ( i % 2 == 0 ){ cout << \"O\" << endl ; for ( j = 0 ; j < 25000 ; j ++ ) out ( PPI_8255_PA , ledEnable ); // \u81f4\u80fd LED // out(PPI_8255_PC ,bellEnable); // \u81f4\u80fd \u8702\u9cf4\u5668 } else { cout << \"X\" << endl ; for ( j = 0 ; j < 25000 ; j ++ ) out ( PPI_8255_PA , ledDisable ); // \u7981\u80fd LED // out(PPI_8255_PC ,bellDisable); // \u7981\u80fd \u8702\u9cf4\u5668 } // -- if \u8ff4\u5708 \u7d50\u675f i ++ ; } //-- while \u8ff4\u5708 \u7d50\u675f } Advanced FIXME: It could be more friendly if there is any GUI interface to manipulate the LED. Linux Device Driver Linux \u5728 user-space \u7531\u65bc\u90fd\u9700\u4ee5 root \u6b0a\u9650\u9a45\u52d5\u786c\u9ad4\uff0c \u82e5\u9700\u8b93\u4e00\u822c\u4f7f\u7528\u8005\u4e5f\u80fd\u9a45\u52d5\u786c\u9ad4\uff0c\u9700\u8003\u616e\u64b0\u5beb\u4f7f\u7528 kernal-space \u7684Linux Device Driver`. QT hello_qt.cpp /**************************************************************************** Filename: hello_qt.cpp Compiler: g++ -I$QTDIR/include -L$QTDIR/lib -lqt -o hello_qt hello_qt.cpp Running: ./hello_qt& ( \u4e1f\u5230\u80cc\u666f\u57f7\u884c ) Function: Linux GUI \u8996\u7a97\u7a0b\u5f0f \u7684\u57fa\u672c\u6e2c\u8a66\uff0c\u5efa\u7acb\u4e00\u500b Hello QT! \u7684\u57fa\u672c\u8996\u7a97 Date: 3/23 2003 Reference: http://doc.trolltech.com/3.1/tutorial1-01.html ****************************************************************************/ #include <qapplication.h> #include <qpushbutton.h> int main ( int argc , char ** argv ){ QApplication a ( argc , argv ); QPushButton hello ( \"Hello QT!\" , 0 ); hello . resize ( 100 , 30 ); a . setMainWidget ( & hello ); hello . show (); return a . exec (); } frame: moc \u4f7f\u7528\u8a0a\u865f \u8207\u2571\u6216 \u6e9d\u69fd\u7684\u985e\u5225\u7684\u4e00\u822c\u9aa8\u67b6 (\u6458\u9304\u65bc Programming with Qt p.32) class MyClass : public Qobject { Q_OBJECT ... signals : // \u5c07\u4f60\u7684 \u8a0a\u865f \u653e\u5728\u9019\u88e1,\u5982 void somethingDone (); ... public slots : // \u5c07\u4f60 \u516c\u958b\u7684\u6e9d\u69fd \u653e\u5728\u9019\u88e1,\u5982 viod soltDoSomething (); private slots : // \u5c07\u4f60 \u79c1\u6709\u7684\u6e9d\u69fd \u653e\u5728\u9019\u88e1,\u5982 void slotDoSomethingInternal (); // \u7576\u7136, \u4f60\u53ef\u4ee5\u52a0\u5165\u5176\u4ed6\u7684\u5ba3\u544a }; \u8a0a\u865f \u8207\u2571\u6216 \u6e9d\u69fd\u7684 \u985e\u5225 (\u6458\u9304\u65bc Programming with Qt p.35 ) mocDemo2.cpp /**************************************************************************** Filename: mocDemo2.cpp Compiler: g++ -I$QTDIR/include -L$QTDIR/lib -lqt -o mocDemo2 mocDemo2.cpp Running: ./mocDemo2& ( \u4e1f\u5230\u80cc\u666f\u57f7\u884c ) Function: \u4e86\u89e3 moc \u7684\u7528\u6cd5 \u3002 Reference: \u51fa\u81ea Programming with QT , exercise-2-4-1.cpp (p35 \u7684 \u7df4\u7fd2\u984c ) Date: 03/24 2003 Comment: \u4e26\u6c92\u6709 \u7528 Programming with QT \u66f8\u4e2d\u4ee5 moc (moc -o moc_file.cpp myfile.h) \u4f86\u8655\u7406 \u5305\u542b\u985e\u5225\u5ba3\u544a\u7684\u6a94\u6848\u4ea6\u53ef\u52d5\u4f5c \u6240\u4ee5\u4e26\u4e0d\u78ba\u5b9a qt3 \u4ee5\u5f8c\u7684\u505a\u6cd5 ****************************************************************************/ #include <qapplication.h> #include <qpushbutton.h> #include <qslider.h> #include <qlcdnumber.h> int main ( int argc , char * argv [] ) { QApplication myapp ( argc , argv ); QWidget * mywidget = new QWidget (); mywidget -> setGeometry ( 400 , 300 , 170 , 150 ); QSlider * myslider = new QSlider ( 0 , // minimum value 9 , // maximum value 1 , // step 1 , // initial value QSlider :: Horizontal , // orientation mywidget // parent ); myslider -> setGeometry ( 10 , 10 , 150 , 30 ); QLCDNumber * mylcdnum = new QLCDNumber ( 1 , // number of digits mywidget // parent ); mylcdnum -> setGeometry ( 60 , 50 , 50 , 50 ); mylcdnum -> display ( 1 ); // display initial value // connect slider and number display QObject :: connect ( myslider , SIGNAL ( valueChanged ( int ) ), mylcdnum , SLOT ( display ( int ) ) ); // create two push buttons for decrementing and // incrementing the slider values QPushButton * decrement = new QPushButton ( \"<\" , mywidget ); decrement -> setGeometry ( 10 , 110 , 50 , 30 ); QPushButton * increment = new QPushButton ( \">\" , mywidget ); increment -> setGeometry ( 110 , 110 , 50 , 30 ); // connect the clicked() signal of the buttons to the slots that // increment and decrement the slider value QObject :: connect ( decrement , SIGNAL ( clicked () ), myslider , SLOT ( subtractStep () ) ); QObject :: connect ( increment , SIGNAL ( clicked () ), myslider , SLOT ( addStep () ) ); myapp . setMainWidget ( mywidget ); mywidget -> show (); return myapp . exec (); } - QT socket Running Reference ID \u53c3\u8003\u8cc7\u6599 \u8aaa\u660e 1 Programmer \u6df1\u5ea6\u8ad6\u58c7 \u7a0b\u5f0f\u5beb\u4f5c\u8a0e\u8ad6\u5340 2 32 Bit Delphi \u6df1\u5ea6\u6b77\u96aa \u53ef\u4ee5\u4e0b\u8f09 DLPORT \u5143\u4ef6( \u5728 XP \u5e73\u53f0\u4e0a\u63a7\u5236 I/O ) 3 \u5fb7\u5dde\u5100\u5668 \u53ef\u4ee5\u641c\u5c0b IC \u683c\u8cc7\u6599 4 \u8208\u5fb7\u8cc7\u8a0a \u5546\u696d\u7248\u9a45\u52d5\u7a0b\u5f0f 5 \u96fb\u8166\u9054\u4eba\u990a\u6210\u8a08\u756b 4-3\uff1a\u6b77\u4ee3\u64f4\u5145\u4ecb\u9762\u5361\u6a19\u6e96 (\u4e0a) 6 Welding\u3001brazing\u3001soldering\u4e09\u7a2e\u5dee\u5225 Appendix Appendix A - PC AT Interface Pinout A1~A31 and B1~B31 (8-Bit XT-Bus) Input/Output Description Pin Pin Description Input/Output GROUND GND B1 A1 -I/O CH CK I O RESET DRV B2 A2 SD7 I/O POWER +5V DC B3 A3 SD6 I/O I IRQ9 B4 A4 SD5 I/O POWER -5V DC B5 A5 SD4 I/O I DRQ2 B6 A6 SD3 I/O POWER -12V DC B7 A7 SD2 I/O I OWS B8 A8 SD1 I/O POWER +12V DC B9 A9 SD0 I/O GROUND GND B10 A10 -I/O CH RDY I O -SMEMW B11 A11 AEN O O -SMEMR B12 A12 SA19 I/O I/O -IOW B13 A13 SA18 I/O I/O -IOR B14 A14 SA17 I/O O -DACK3 B15 A15 SA16 I/O I DRQ3 B16 A16 SA15 I/O O -DACK1 B17 A17 SA14 I/O I DRQ1 B18 A18 SA13 I/O I/O -REFRESH B19 A19 SA12 I/O O CLK B20 A20 SA11 I/O I IRQ7 B21 A21 SA10 I/O I IRQ6 B22 A22 SA9 I/O I IRQ5 B23 A23 SA8 I/O I IRQ4 B24 A24 SA7 I/O I IRQ3 B25 A25 SA6 I/O O -DACK2 B26 A26 SA5 I/O O T/C B27 A27 SA4 I/O O BALE B28 A28 SA3 I/O POWER +5V DC B29 A29 SA2 I/O O OSC B30 A30 SA1 I/O GROUND GND B31 A31 SA0 I/O C1~C18 and D1~D18 Input/Output Description Pin Pin Description Input/Output I -MEM CS16 D1 C1 SBHE I/O I -I/O CS16 D2 C2 LA23 I/O I IRQ10 D3 C3 LA22 I/O I IRQ11 D4 C4 LA21 I/O I IRQ12 D5 C5 LA20 I/O I IRQ15 D6 C6 LA19 I/O I IRQ14 D7 C7 LA18 I/O O -DACK0 D8 C8 LA17 I/O I DRQ0 D9 C9 -MEMR I/O O -DACK5 D10 C10 -MEMW I/O I DRQ5 D11 C11 SD8 I/O O -DACK6 D12 C12 SD9 I/O I DRQ6 D13 C13 SD10 I/O O -DACK7 D14 C14 SD11 I/O I DRQ7 D15 C15 SD12 I/O POWER +5V DC D16 C16 SD13 I/O I MASTER D17 C17 SD14 I/O GROUND GND D18 C18 SD15 I/O Appendix B - Intel 82C55A Programmable Peripheral Interface Pinout Intel 82C55A PINOUT Description Pin Pin Description PA3 1 40 PA4 PA2 2 39 PA5 PA1 3 38 PA6 PA0 4 37 PA7 -RD 5 36 -WR -CS 6 35 RESET GND 7 34 D0 A1 8 33 D1 A2 9 32 D2 PC7 10 31 D3 PC6 11 30 D4 PC5 12 29 D5 PC4 13 28 D6 PC0 14 27 D7 PC1 15 26 VCC PC2 16 25 PB7 PC3 17 24 PB6 PB0 18 23 PB5 PB1 19 22 PB4 PB2 20 21 PB3 Appendix C - Intel 8254 Programmable Interval Timer Pinout Intel 82C54 PINOUT Description Pin Pin Description D7 1 24 VCC D6 2 23 -WR D5 3 22 -RD D4 4 21 -CS D3 5 20 A1 D2 6 19 A0 D1 7 18 CLK2 D0 8 17 OUT2 CLK0 9 16 GATE2 OUT0 10 15 CLK1 GATE0 11 14 GATE1 GND 12 13 OUT1 Appendix D - Remote Access by VNC \u4ee5\u4e0b\u5217\u51fa C \u8a9e\u8a00\u7a0b\u5f0f\u78bc \u8207\u57f7\u884c\u7d50\u679c\u3002 \u70ba\u4e86\u65b9\u4fbf \u64b0\u5beb\u7a0b\u5f0f\u78bc\u3001\u6e2c\u8a66\u7d50\u679c\uff0c\u64b0\u5beb\u6b64\u4efd\u8aaa\u660e\u6587\u4ef6\uff0c\u4e0a\u7db2\u807d\u4e32\u6d41\u97f3\u6a02\uff0c\u2026 \u5728\u4e3b\u6a5f\u7aef\u67b6\u8a2d\u4e86 FTP Server ( \u5c07 Win-XP \u4e0b\u7de8\u5beb\u7684\u7a0b\u5f0f\u78bc\u4e0a\u50b3\u81f3 RedHat Linux ) \u8207 VNC Server( \u9060\u7aef\u9059\u63a7 RedHat Linux )\uff0c \u4f7f\u7528 VNC \u8edf\u9ad4\uff0c\u7531 Win-XP \u9060\u7aef\u9023\u7dda\u5230 RedHat Linux 8.0 \u57f7\u884c\u7a0b\u5f0f\uff0c\u5728 Win-XP \u57f7\u884c\u7d50\u679c\u3002 VNC Server \u9023\u7dda\u6b65\u9a5f. \u6b65\u9a5f RedHat Linux 8.0 Win-XP \u8aaa\u660e Step.0 \u9032\u5165 \u7d42\u7aef\u6a5f \u2500 \u8d85\u7d1a\u4f7f\u7528\u8005\u6a21\u5f0f, \u4e26\u8f38\u5165\u4ee5\u4e0b\u547d\u4ee4 Step.1 # adsl-start RedHat Linux \u4e3b\u6a5f\u9023\u7dda\u81f3\u7db2\u969b\u7db2\u8def Step.2 # vncserver \u555f\u52d5 vncserver Step.3 # ifconfig \u67e5\u770b dhcp \u6240\u5206\u914d\u5230\u7684 IP Step.4 Run VNC Viewer \u555f\u52d5 VNC client \u7aef, \u8f38\u5165\u4e3b\u6a5f IP Step.5 \u8f38\u5165\u767b\u5165\u7684\u5bc6\u78bc Step.6 \u767b\u5165\u5b8c\u7562","title":"Industry Standard Architecture (ISA)"},{"location":"io/isa/#man-machine-interfaces","text":"","title":"Man-Machine Interfaces"},{"location":"io/isa/#industry-standard-architecture-isa","text":"$author: Ching-Wen (Ed) Lai $date: May. 2003 $revised: Mar. 2018 $keywords: man, machine, interface, industry standard architecture, isa An exercise of Intel 8255 PIO (Programmable Peripheral Interface, PPI) control via ISA interface. Blinking LED on Red Hat Linux. Doing circuit design work by using OrCAD Soldering circuit board by using Hand Tools Verifying circuit board by using debug command on DOS Blinking LED by using Linux C and C++ on Linux","title":"Industry Standard Architecture (ISA)"},{"location":"io/isa/#content","text":"Concept Requirements Hardware Schematic Components Soldering Hand Tools Safety First Software Demonstration DOS Debug Linux C C++ Windows Turbo C Advanced Qt References Appendix Appendix A - PC AT Interface Pinout Appendix B - Intel 82C55A Programmable Peripheral Interface Pinout Appendix C - Intel 8254 Programmable Interval Timer Pinout Appendix D - Remote Access by VNC","title":"Content"},{"location":"io/isa/#concept","text":"\u57fa\u672c I/O \u63a7\u5236\u5be6\u9a57\uff0c\u8a2d\u8a08\u4e00\u584a ISA \u96fb\u8def\u677f\uff0c\u5229\u7528 Intel 8255 \u64f4\u5145\u96fb\u8166 IO port, \u4e26\u63a7\u5236 LED \u9583\u720d.","title":"Concept"},{"location":"io/isa/#requirements","text":"","title":"Requirements"},{"location":"io/isa/#hareware","text":"","title":"Hareware"},{"location":"io/isa/#schematic","text":"Electronic Schematic I/O Address mapping of Intel 8255: 8255A (Selects) A1 A0 I/O Address Port A 0 0 300H Port B 0 1 301H Port C 1 0 302H Control Word Register 1 1 303H I/O Address mapping for Intel 8254: 8254 (Selects) A1 A0 I/O Address Counter 0 0 0 320H Counter 1 0 1 321H Counter 2 1 0 322H Control Word Register 1 1 323H Power Source Pin Number: TTL 8255 8254 74LS138 (3-8 Decode) 74LS00 (NAND) 74LS244 (Locker) +5V 26 24 16 14 20 GND 7 12 8 7 10","title":"Schematic"},{"location":"io/isa/#soldering","text":"Good Front View Inserting Board into ISA slot on PC","title":"Soldering"},{"location":"io/isa/#hand-tools","text":"\u6e96\u5099\u4e00\u822c\u7684\u710a\u63a5\u5de5\u5177\u5373\u53ef, \u53e6\u6709 \u53ef\u6709\u53ef\u7121\u7684 \u9632\u975c\u96fb\u7528\u8ea1\u5b50\u3001\u4e00\u865f\u8d77\u5b50\u3001\u5341\u865f\u8d77\u5b50\u2026\u4e0d\u518d\u8d05\u8ff0. No \u624b\u5de5\u5177\u540d\u7a31 \u6578\u91cf \u55ae\u4f4d \u54c1\u724c/\u898f\u683c \u5099\u8a3b 1 \u96fb\u70d9\u9435 1 \u652f 2 \u5c16\u5634\u9257 1 \u652f /PN-2005 3 \u659c\u53e3\u9257 1 \u652f /TR-25-P 4 \u5438\u932b\u5668 1 \u652f 5 \u92b2\u932b 1 \u6372 Consumables 6 \u934d\u9280\u7dda 1 \u6372 OK / R26-500 Consumables; Optional 7 \u932b\u6cb9(\u932b\u818f ) 1 \u7f50 goot / BS-10 Consumables; Optional 8 \u4e09\u7528\u96fb\u9336 1 \u53f0 \u7528\u65bc\u6e2c\u710a\u63a5\u5b8c\u5f8c\u7684\u96fb\u8def\u7248\u662f\u5426\u6709\u77ed\u8def","title":"Hand Tools"},{"location":"io/isa/#components","text":"Electronic Components No \u96f6\u4ef6\u540d\u7a31 \u6578\u91cf \u5099\u8a3b 1 82C55 1 \u53ef\u7a0b\u5f0f\u898f\u5283\u908f\u8f2f\u4ecb\u9762 ; PPI 2 8254 ( \u6216 D71054C ) 1 \u53ef\u7a0b\u5f0f\u898f\u5283\u8a08\u6578(\u6642)\u4ecb\u9762 / \u6700\u9ad8\u8f38\u5165\u6642\u5e8f 8 MHz 3 74LS138 1 \u89e3\u78bc\u81f4\u80fd 8255 \u8207 8254 \u7528 4 74LS00 1 \u89e3\u78bc\u81f4\u80fd 74LS138 \u8207 \u5587\u53ed\u96fb\u8def 5 5K \u53ef\u8abf\u5f0f\u96fb\u963b 1 \u5587\u53ed\u96fb\u8def\u7528 6 C1815 1 \u5587\u53ed\u96fb\u8def\u7528 , \u7de8\u865f\u9762 \u63a5\u8173 ECB 7 \u5587\u53ed 1 \u5587\u53ed\u96fb\u8def\u7528, \u4f7f\u7528 PC \u4e0a\u7684\u5587\u53ed\u5373\u53ef 8 LED 8 \u6aa2\u89968255 portA \u8f38\u51fa\u7528 9 PC ISA \u7a7a\u7248 1 \u91d1\u624b\u6307 AT \u4ecb\u9762\u96fb\u8def\u677f 10 IC \u8173\u5ea7 N/A \u4e0a\u8ff0 IC \u6240\u9700\u8173\u5ea7 PS. \u6392\u91dd\u5ea7\u53ef\u8996\u9700\u8981\u6e96\u5099. Orcad Family Release 9.2 Lite Edition NO Orcad \u96f6\u4ef6\u5eab \u96f6\u4ef6\u540d\u7a31 1 MISC 82C55A, 8254 2 MUX DECODER GATE 74LS138 3 BUSDRIVER TRANSCEIVER 74LS00 4 DISCRETE 5 CONNECTOR \u96fb\u8def\u6539\u826f NO \u9805\u76ee \u8aaa\u660e 1 \u65c1\u8def\u96fb\u5bb9 \u6bcf\u9846 IC \u65c1\u9760\u8fd1\u96fb\u6e90\u8655\u53ef\u52a0\u4e0a 2 LED \u7684\u9650\u6d41\u96fb\u963b 3 DIP SWITCH \u7684\u5149\u85d5\u5408\u96fb\u6676\u9ad4","title":"Components"},{"location":"io/isa/#safety-first","text":"Short Circuit : \u7576\u96fb\u8def\u710a\u63a5\u5b8c\u7562\u5f8c, \u9700\u4f7f\u7528\u4e09\u7528\u96fb\u8868\uff0c\u78ba\u5b9a\u96fb\u8def\u677f\u7684\u6b63\u8ca0\u96fb\u6e90\u6c92\u6709\u77ed\u8def.","title":"Safety First"},{"location":"io/isa/#software","text":"MicroSoft DOS (Disk Operating System) 6.0 debug Red Hat Linux 8.0 GCC (C compiler) G++ (C++ compiler) Windows 98 Turbo C","title":"Software"},{"location":"io/isa/#demonstration","text":"","title":"Demonstration"},{"location":"io/isa/#dos","text":"DOS\u7cfb\u7d71\u5728\u786c\u789f\u4e0a\u7684\u958b\u6a5f\u901f\u5ea6\u5feb, \u4e14\u5167\u90e8\u7684 Debug \u6307\u4ee4\uff0c\u5728\u96fb\u8def\u677f\u525b\u710a\u597d, \u8981\u9a57\u8b49\u5176\u529f\u80fd\u6642\uff0c\u975e\u5e38\u65b9\u4fbf. \u4f7f\u7528\u6211\u7684\u684c\u4e0a\u578b\u96fb\u8166\u3002\u5728 CONNER CP30254H( 252M ) \u786c\u789f\u4e0a\u5b89\u88dd\u4ee5\u4e0b\u7684\u7cfb\u7d71. NO \u8edf\u9ad4\u540d\u7a31 \u8aaa\u660e \u5fc5\u8981\u6027 1 DOS 6.00 \u7528\u65bc\u96fb\u8166\u958b\u6a5f\uff0c\u8207 debug \u6307\u4ee4 Mandatory 2 PCTOOLS9 \u985e\u4f3c NU8 \u7684\u7cfb\u7d71\u7ba1\u7406\u8207\u4fee\u8b77\u5de5\u5177 Optional 3 Turbo C++ 3.0 C \u7a0b\u5f0f \u7de8\u8b6f\u5668 Optional 4 Macro Assembler 6.11 \u7d44\u5408\u8a9e\u8a00\u7de8\u8b6f\u5668 Optional","title":"DOS"},{"location":"io/isa/#debug","text":"\u7531\u65bc\u6211\u5011\u53ea\u662f\u8981\u7528\u4f86\u6e2c\u8a66 8255 I/O \u5be6\u9a57\u7248\uff0c\u6545\u53ea\u9700\u8981 DOS 6.00 \u5c31\u53ef\u4ee5\u4e86\uff0c\u5176\u5b83\u8996\u9700\u8981\u518d\u5b89\u88dd. \u5c07 8255 I/O \u5be6\u9a57\u7248 \u63d2\u5165 ISA \u69fd\uff0c\u96fb\u8166\u958b\u6a5f\u5f8c\uff0c\u9375\u5165\u4ee5\u4e0b\u6307\u4ee4. Step \u6307\u4ee4 \u8aaa\u660e 0 C:/> cd dos60 \u5207\u5230 debug \u6240\u5728\u7684\u90a3\u500b\u8cc7\u6599\u593e (Optional) 1 C:/> debug \u9032\u5165 debug \u6a21\u5f0f\uff0c\u6b64\u6642\u6703\u51fa\u73fe\u547d\u4ee4\u63d0\u793a\u5b57\u5143 - 2 - o 303 80 \u8a2d\u5b9a 8255 \u7684 Port A \u3001Port B\u3001Port C \u7686\u70ba\u6a21\u5f0f 0 \u8f38\u51fa 3 - o 300 ff \u4ee4 8255 \u7684 Port A \u8f38\u51fa 11111111 ( LED \u5168\u90e8 \u9ede\u4eae ) 4 - o 300 00 \u4ee4 8255 \u7684 Port A \u8f38\u51fa 00000000 ( LED \u5168 \u6697 ) 5 - o 300 55 \u4ee4 8255 \u7684 Port A \u8f38\u51fa 10101010 ( LED 0\u30012\u30014\u30016 \u9ede\u4eae ) 6 - o 300 aa \u4ee4 8255 \u7684 Port A \u8f38\u51fa 01010101 ( LED 1\u30013\u30014\u30015 \u9ede\u4eae ) 7 - q \u6700\u5f8c\u4e0b q \u547d\u4ee4 \u96e2\u958b debug \u6a21\u5f0f \u7576\u7136\u53ef\u591a\u52a0\u5e7e\u9805\u6e2c\u8a66 8255 I/O \u5be6\u9a57\u7248\uff0c\u82e5\u6e2c\u8a66\u9805\u76ee\u773e\u591a\uff0c\u53ef\u4ee5\u8003\u616e\u5beb \u61c9\u7528\u7a0b\u5f0f\u8a9e\u8a00 ( Turbo C++\u3001Macro Assembler ) \u52a0\u4ee5\u6e2c\u8a66\u3002","title":"Debug"},{"location":"io/isa/#red-hat-linux","text":"\u5728 Red Hat Linux 8.0 \u5e73\u53f0\u4e0a \uff0c\u4f7f\u7528 root \u6b0a\u9650 \uff0c\u4ee5 C \u8207 C++ \u4f86\u9a45\u52d5 8255 I/O \u5be6\u9a57\u677f\u3002 \u786c\u789f\u4f7f\u7528 Quantum Fireball Ex( 6449M ) \u4e26\u5b89\u88dd\u4ee5\u4e0b\u7684\u7cfb\u7d71. NO \u8edf\u9ad4\u540d\u7a31 \u8aaa\u660e \u5099\u8a3b 1 RedHat Linux 8.0 \u542b X window( X 11 \uff1b\u8996\u7a97\u74b0\u5883 ) Linux \u4f5c\u696d\u5e73\u53f0 2 gcc 3.2 (20020903) C \u8a9e\u8a00(GNU C) \u7d44\u8b6f\u5668 \u4e0b gcc -v \u6307\u4ee4 \u53ef\u67e5\u770b gcc \u7248\u672c 3 g++ C++ \u8a9e\u8a00\u7d44\u8b6f\u5668 \u7d44\u8b6f\u5668 4 QT KDE UI \u5de5\u5177\u7d44 \u9700\u4f7f\u7528 g++ \u7de8\u8b6f\u5668. QT \u53c3\u8003\u624b\u518a \u7c21\u9ad4 5 Kate \u7de8\u8f2f C/C++ \u8a9e\u8a00\u7528 \u7de8\u8f2f\u5668 \u4f7f\u7528 C \u8a9e\u8a00 \u8207 C++ \u8a9e\u8a00\u4f86\u63a7\u5236 I/O \u6240\u9700 include \u7684\u6a19\u982d\u6a94. NO \u4f7f\u7528\u8a9e\u8a00 \u6240\u9700 INCLUDE \u7684\u6a94\u6848\u8207\u8a9e\u6cd5 1 C \u8a9e\u8a00 #include 2 C++\u8a9e\u8a00 #include","title":"Red Hat Linux"},{"location":"io/isa/#c","text":"There are some programs which can help us to verify the hardware and software. NO \u7a0b\u5f0f\u540d\u7a31 \u8aaa\u660e 1 hello.c Linux C \u7684\u57fa\u672c\u6e2c\u8a66\uff0c\u5370\u51fa Hello, world 2 kb.c \u985e\u4f3c DOS \u4e0a \u7684 kbhit \u51fd\u5f0f(\u5075\u6e2c\u9375\u76e4\u662f\u5426\u88ab\u6309\u4e0b)\u529f\u80fd 3 io.c \u4ee5 Linux C \u63a7\u5236 \u9583\u720d 8255 I/O \u5be6\u9a57\u677f\u4e0a\u7684 LED 4 blink.c \u7d50\u5408kb.c\u8207io.c.\u8b93\u5be6\u9a57\u677f\u4e0a\u7684LED\u4e0d\u505c\u9583\u720d\uff0c\u76f4\u5230\u6309\u4e0bq\u9375\u624d\u96e2\u958b 5 pili_testing.c \u8dd1\u99ac\u71c8\u6a21\u64ec\u7a0b\u5f0f\u3002\u75311\u8a08\u6578\u81f3128,128\u8a08\u6578\u81f31,\u4f86\u56de\u5217\u537020 \u6b21 6 pili.c LED \u8dd1\u99ac\u71c8\u3002\u8b93\u5be6\u9a57\u677f\u4e0a\u7684 LED\u4f86\u56de\u9583\u720d\uff0c\u76f4\u5230\u6309\u4e0b q \u624d\u96e2\u958b \u7531\u6700\u5f8c\u7684\u8dd1\u99ac\u71c8\u7a0b\u5f0f\uff0c\u6700\u5f8c\u78ba\u5b9a \u53ef\u63a7\u5236 8255 I/O \u5be6\u9a57\u677f.","title":"C"},{"location":"io/isa/#programming","text":"hello.c /**************************************************************************** Filename: hello.c Compiler: gcc -O -o hello hello.c Author : Jing-Wen.Lai Function: Linux C \u7684\u57fa\u672c\u6e2c\u8a66\uff0c\u5370\u51fa Hello, world\u3002 Date: 3/22 2003 ****************************************************************************/ #include <stdio.h> int main ( int argc , char * argv []) { printf ( \"Hello, world \\n \" ); return 0 ; } kb.c /**************************************************************************** Filename: kb.c Compiler: gcc -O -o kb kb.c Author: Jing-Wen.Lai Function: \u5e73\u5e38\u57f7\u884c Loop \u5370\u51fa \u8a08\u6578 \u8a0a\u606f \uff0c\u9664\u975e\u9375\u76e4\u6309\u4e0b 'q' \u9375 \u5247\u96e2\u958b\u8a08\u6578 Loop \u3002 Date: 03/22 2003 Reference: \u53c3\u8003\u4ee5\u4e0b\u7db2\u8def\u6587\u4ef6\u6539\u5beb http://www.control.auc.dk/~jnn/c2000/programs/mm5/keyboardhit/msg02541.html ****************************************************************************/ #include <stdio.h> #include <termios.h> static struct termios orig , new ; static int peek = -1 ; int main () { int ch = 0 ; /* \u9375\u76e4\u6240\u6309\u4e0b\u7684\u5b57\u5143 */ int loopCount = 1 ; /* Loop \u7528 \u8a08\u6578\u5668 */ tcgetattr ( 0 , & orig ); new = orig ; new . c_lflag &= ~ ICANON ; new . c_lflag &= ~ ECHO ; new . c_lflag &= ~ ISIG ; new . c_cc [ VMIN ] = 1 ; new . c_cc [ VTIME ] = 0 ; tcsetattr ( 0 , TCSANOW , & new ); /* =========================== */ /* [[ \u7576\u8f38\u5165\u5b57\u5143\u4e0d\u70ba q \u6642 ]] */ /* =========================== */ while ( ch != 'q' ) { printf ( \"looping %d time(s) \\n \" , loopCount ); sleep ( 1 ); loopCount ++ ; if ( kbhit ()) { ch = readch (); printf ( \"== Input %c == \\n \" , ch ); } } /* ======================== */ /* [[ \u8f38\u5165\u5b57\u5143 \u70ba q \u6642 ]] */ /* ======================== */ printf ( \"== Quit == \\n \" ); tcsetattr ( 0 , TCSANOW , & orig ); exit ( 0 ); } /* ======================= */ /* SUB Function */ /* ======================= */ int kbhit () { char ch ; int nread ; if ( peek != -1 ) return 1 ; new . c_cc [ VMIN ] = 0 ; tcsetattr ( 0 , TCSANOW , & new ); nread = read ( 0 , & ch , 1 ); new . c_cc [ VMIN ] = 1 ; tcsetattr ( 0 , TCSANOW , & new ); if ( nread == 1 ) { peek = ch ; return 1 ; } return 0 ; } int readch () { char ch ; if ( peek != -1 ) { ch = peek ; peek = -1 ; return ch ; } read ( 0 , & ch , 1 ); return ch ; } io.c /**************************************************************************** -- io.c <Linux I/O \u57e0 \u57fa\u672c\u6e2c\u8a66 -- \u6e2c\u8a66 \u525b\u7d44\u88dd\u5b8c\u6210\u7684 IO \u677f\u7528> -- Author: Jing-Wen.Lai Function: \u4ee5 Linux C \u63a7\u5236 8255 I/O \u5be6\u9a57\u677f\u4e0a\u7684 LED, Compiler: \u4f7f\u7528 `gcc -O2 -o io io.c', Running: \u4ee5 root \u7684\u8eab\u4efd\u57f7\u884c `./io'. Reference: \u7531<<CLDP -- Linux \u4e2d\u6587\u6587\u4ef6\u8a08\u5283>>\u6539\u5beb http://www.linux.org.tw/CLDP/mini/IO-Port-Programming-9.html ****************************************************************************/ #include <stdio.h> #include <unistd.h> #include <asm/io.h> #define CCW 0x303 /* 8255 CCW */ #define PA 0x300 /* 8255 PORT A */ int main () { int i = 0 ; /* \u53d6\u5f97\u57e0\u4f4d\u5740\u7684\u5b58\u53d6\u6b0a\u9650 */ if ( ioperm ( CCW , 3 , 1 )) { perror ( \"ioperm\" ); exit ( 1 );} if ( ioperm ( PA , 3 , 1 )) { perror ( \"ioperm\" ); exit ( 1 );} /* \u5b9a\u7fa9 8255 \u5de5\u4f5c\u6a21\u5f0f */ outb ( 0x80 , CCW ); /* \u91cd\u7f6e 8255 PORT A \u7684\u8f38\u51fa\u8cc7\u6599\u4fe1\u865f (D0-7) \u5168\u70ba\u96f6 (0) */ outb ( 0 , PA ); /* LED \u4ea4\u4e92 \u9583\u720d 10 \u6b21 \uff0c\u6bcf\u6b21 1000 ms */ for ( i = 1 ; i <= 10 ; i ++ ){ usleep ( 1000000 ); if ( i % 2 == 0 ){ outb ( 0x00 , PA ); printf ( \"-X- step: %d \\n \" , i ); } else { outb ( 0xFF , PA ); printf ( \"-O- step: %d \\n \" , i ); } } /* \u6211\u5011\u4e0d\u518d\u9700\u8981\u9019\u4e9b\u57e0\u4f4d\u5740 */ if ( ioperm ( CCW , 3 , 0 )) { perror ( \"ioperm\" ); exit ( 1 );} if ( ioperm ( PA , 3 , 0 )) { perror ( \"ioperm\" ); exit ( 1 );} exit ( 0 ); /* \u7d50\u675f io.c */ } blink.c /****************************************************************************** Filename: blink.c Compiler: gcc -O -o blink blink.c Author: Jing-Wen.Lai Function: \u5e73\u5e38\u57f7\u884c Loop \u5370\u51fa \u8a08\u6578 \u8a0a\u606f \uff0c 8255 I/O \u5be6\u9a57\u677f\u4e0a\u7684 LED \u4ea6\u96a8\u4e4b\u9583\u720d \u9664\u975e\u9375\u76e4\u6309\u4e0b 'q' \u9375 \u5247\u96e2\u958b\u8a08\u6578 Loop \u3002 Date: May. 22/2003 ******************************************************************************/ #include <stdio.h> #include <termios.h> #include <unistd.h> #include <asm/io.h> #define CCW 0x303 /* 8255 CCW */ #define PA 0x300 /* 8255 PORT A */ static struct termios orig , new ; static int peek = -1 ; int main () { int ch = 0 ; /* \u9375\u76e4\u6240\u6309\u4e0b\u7684\u5b57\u5143 */ int loopCount = 0 ; /* Loop \u7528 \u8a08\u6578\u5668 */ tcgetattr ( 0 , & orig ); new = orig ; new . c_lflag &= ~ ICANON ; new . c_lflag &= ~ ECHO ; new . c_lflag &= ~ ISIG ; new . c_cc [ VMIN ] = 1 ; new . c_cc [ VTIME ] = 0 ; tcsetattr ( 0 , TCSANOW , & new ); /* \u53d6\u5f97\u57e0\u4f4d\u5740\u7684\u5b58\u53d6\u6b0a\u9650 */ if ( ioperm ( CCW , 3 , 1 )) { perror ( \"ioperm\" ); exit ( 1 );} if ( ioperm ( PA , 3 , 1 )) { perror ( \"ioperm\" ); exit ( 1 );} /* \u5b9a\u7fa9 8255 \u5de5\u4f5c\u6a21\u5f0f */ outb ( 0x80 , CCW ); /* \u91cd\u7f6e 8255 PORT A \u7684\u8f38\u51fa\u8cc7\u6599\u4fe1\u865f (D0-7) \u5168\u70ba\u96f6 (0) */ outb ( 0 , PA ); /* =========================== */ /* [[ \u7576\u8f38\u5165\u5b57\u5143\u4e0d\u70ba q \u6642 ]] */ /* =========================== */ /* LED \u4ea4\u4e92 \u9583\u720d */ while ( ch != 'q' ) { //printf(\"looping %d times \\n\",loopCount); sleep ( 1 ); loopCount ++ ; if ( loopCount % 2 == 0 ){ outb ( 0x00 , PA ); printf ( \"-X- step: %d \\n \" , loopCount ); } else { outb ( 0xFF , PA ); printf ( \"-O- step: %d \\n \" , loopCount ); } if ( kbhit ()) { ch = readch (); } } /* ======================== */ /* [[ \u8f38\u5165\u5b57\u5143 \u70ba q \u6642 ]] */ /* ======================== */ // LED \u4e0d\u4eae outb ( 0x00 , PA ); /* \u6211\u5011\u4e0d\u518d\u9700\u8981\u9019\u4e9b\u57e0\u4f4d\u5740 */ if ( ioperm ( CCW , 3 , 0 )) { perror ( \"ioperm\" ); exit ( 1 );} if ( ioperm ( PA , 3 , 0 )) { perror ( \"ioperm\" ); exit ( 1 );} printf ( \"== Quit == \\n \" ); tcsetattr ( 0 , TCSANOW , & orig ); exit ( 0 ); } /* ======================= */ /* sub Function */ /* ======================= */ int kbhit () { char ch ; int nread ; if ( peek != -1 ) return 1 ; new . c_cc [ VMIN ] = 0 ; tcsetattr ( 0 , TCSANOW , & new ); nread = read ( 0 , & ch , 1 ); new . c_cc [ VMIN ] = 1 ; tcsetattr ( 0 , TCSANOW , & new ); if ( nread == 1 ) { peek = ch ; return 1 ; } return 0 ; } int readch () { char ch ; if ( peek != -1 ) { ch = peek ; peek = -1 ; return ch ; } read ( 0 , & ch , 1 ); return ch ; } pili_test.c /**************************************************************************** Filename: pili_test.c Compiler: gcc -O -o pili_test pili_test.c Author : Jing-Wen.Lai Function : \u7531 1 \u8a08\u6578\u81f3 128 \uff0c 128 \u8a08\u6578\u81f3 1\uff0c\u4f86\u56de\u5217\u5370 Date : 3/23 2003 ****************************************************************************/ #include <stdio.h> int main (){ int LED_Data = 0x01 ; /* \u521d\u59cb\u5316\u8cc7\u6599 */ int directionFlag = 1 ; /* 1: LED \u5411\u5de6\u9ede\u4eae ; 0:LED \u5411\u53f3\u9ede\u4eae */ int i ; for ( i = 0 ; i < 20 ; i ++ ){ printf ( \"%d \\n \" , LED_Data ); if ( directionFlag == 1 ) { LED_Data *= 2 ; if ( LED_Data == 128 ){ directionFlag = 0 ; } } else { LED_Data /= 2 ; if ( LED_Data == 1 ){ directionFlag = 1 ; } } } } pili.c /**************************************************************************** Filename: blink.c Compiler: gcc -O -o blink blink.c Author: Jing-Wen.Lai Function: \u76ee\u7684 :: LED \u8d70\u99ac\u71c8\u3002\u9664\u975e\u9375\u76e4\u6309\u4e0b 'q' \u9375 \u5247\u96e2\u958b\u8a08\u6578 Loop \u3002 Date: 3/22 2003 ****************************************************************************/ #include <stdio.h> #include <termios.h> #include <unistd.h> #include <asm/io.h> #define CCW 0x303 /* 8255 CCW */ #define PA 0x300 /* 8255 PORT A */ static struct termios orig , new ; static int peek = -1 ; int main () { int ch = 0 ; /* \u9375\u76e4\u6240\u6309\u4e0b\u7684\u5b57\u5143 */ int loopCount = 0 ; /* Loop \u7528 \u8a08\u6578\u5668 */ int LED_Data = 0x01 ; /* \u521d\u59cb\u5316\u8cc7\u6599 */ int directionFlag = 1 ; /* 1: LED \u5411\u5de6\u9ede\u4eae ; 0:LED \u5411\u53f3\u9ede\u4eae */ tcgetattr ( 0 , & orig ); new = orig ; new . c_lflag &= ~ ICANON ; new . c_lflag &= ~ ECHO ; new . c_lflag &= ~ ISIG ; new . c_cc [ VMIN ] = 1 ; new . c_cc [ VTIME ] = 0 ; tcsetattr ( 0 , TCSANOW , & new ); /* \u53d6\u5f97\u57e0\u4f4d\u5740\u7684\u5b58\u53d6\u6b0a\u9650 */ if ( ioperm ( CCW , 3 , 1 )) { perror ( \"ioperm\" ); exit ( 1 );} if ( ioperm ( PA , 3 , 1 )) { perror ( \"ioperm\" ); exit ( 1 );} /* \u5b9a\u7fa9 8255 \u5de5\u4f5c\u6a21\u5f0f */ outb ( 0x80 , CCW ); /* \u91cd\u7f6e 8255 PORT A \u7684\u8f38\u51fa\u8cc7\u6599\u4fe1\u865f (D0-7) \u5168\u70ba\u96f6 (0) */ outb ( 0 , PA ); /* =========================== */ /* [[ \u7576\u8f38\u5165\u5b57\u5143\u4e0d\u70ba q \u6642 ]] */ /* =========================== */ /* LED \u4ea4\u4e92 \u9583\u720d */ while ( ch != 'q' ) { sleep ( 1 ); outb ( LED_Data , PA ); printf ( \"Pili Lamp is Running and The 8255-Port-A's outData is %d \\n \" , LED_Data ); if ( directionFlag == 1 ){ LED_Data *= 2 ; if ( LED_Data == 128 ){ directionFlag = 0 ; } } else { LED_Data /= 2 ; if ( LED_Data == 1 ){ directionFlag = 1 ; } } if ( kbhit ()) { ch = readch (); } } /* ======================== */ /* [[ \u8f38\u5165\u5b57\u5143 \u70ba q \u6642 ]] */ /* ======================== */ // LED \u4e0d\u4eae outb ( 0x00 , PA ); /* \u6211\u5011\u4e0d\u518d\u9700\u8981\u9019\u4e9b\u57e0\u4f4d\u5740 */ if ( ioperm ( CCW , 3 , 0 )) { perror ( \"ioperm\" ); exit ( 1 );} if ( ioperm ( PA , 3 , 0 )) { perror ( \"ioperm\" ); exit ( 1 );} printf ( \"== Quit == \\n \" ); tcsetattr ( 0 , TCSANOW , & orig ); exit ( 0 ); } /* ======================= */ /* sub Function */ /* ======================= */ int kbhit () { char ch ; int nread ; if ( peek != -1 ) return 1 ; new . c_cc [ VMIN ] = 0 ; tcsetattr ( 0 , TCSANOW , & new ); nread = read ( 0 , & ch , 1 ); new . c_cc [ VMIN ] = 1 ; tcsetattr ( 0 , TCSANOW , & new ); if ( nread == 1 ) { peek = ch ; return 1 ; } return 0 ; } int readch () { char ch ; if ( peek != -1 ) { ch = peek ; peek = -1 ; return ch ; } read ( 0 , & ch , 1 ); return ch ; }","title":"Programming"},{"location":"io/isa/#c_1","text":"There are some programs which can help us to verify the hardware and software. ID \u7a0b\u5f0f\u540d\u7a31 \u8aaa\u660e 1 hello.cpp Linux C++ \u7684\u57fa\u672c\u6e2c\u8a66\uff0c\u5370\u51fa Hello C++ ! 2 io.cpp Linux I/O \u57e0 \u57fa\u672c\u6e2c\u8a66 -- \u6e2c\u8a66 \u525b\u7d44\u88dd\u5b8c\u6210\u7684 IO \u677f\u7528 3 class_io.cpp LED \u8dd1\u99ac\u71c8\u3002\u5168\u6697, \u5168\u4eae, \u5de6\u79fb, \u53f3\u79fb \u6e2c\u8a66 hello.cpp /****************************************************************************** Filename: hello.cpp Compiler: g++ -Wno-deprecated -ohello hello.cpp Function: C++ \u7684\u57fa\u672c\u6e2c\u8a66\uff0c\u5370\u51fa Hello C++!\u3002 Date: 3/23 2003 Reference: ******************************************************************************/ #include <iostream.h> int main () { cout << \"Hello C++ !\" << endl ; return ( 0 ); } io.cpp /****************************************************************************** Filename: io.cpp Function: Linux I/O \u57e0 \u57fa\u672c\u6e2c\u8a66 -- \u6e2c\u8a66 \u525b\u7d44\u88dd\u5b8c\u6210\u7684 IO \u677f\u7528 Compiler: \u4f7f\u7528 `g++ -O -o io io.cpp', Running: \u4ee5 root \u7684\u8eab\u4efd\u57f7\u884c `./io'. Reference: \u7531<<CLDP -- Linux \u4e2d\u6587\u6587\u4ef6\u8a08\u5283>>\u6539\u5beb http://www.linux.org.tw/CLDP/mini/IO-Port-Programming-9.html ******************************************************************************/ #include <stdio.h> #include <unistd.h> #include <sys/io.h> #define CCW 0x303 /* 8255 CCW */ #define PA 0x300 /* 8255 PORT A */ int main () { /* \u53d6\u5f97\u57e0\u4f4d\u5740\u7684\u5b58\u53d6\u6b0a\u9650 */ if ( ioperm ( CCW , 3 , 1 )) { perror ( \"ioperm\" ); return ( 0 );} if ( ioperm ( PA , 3 , 1 )) { perror ( \"ioperm\" ); return ( 0 );} /* \u5b9a\u7fa9 8255 \u5de5\u4f5c\u6a21\u5f0f */ outb ( 0x80 , CCW ); /* \u91cd\u7f6e 8255 PORT A \u7684\u8f38\u51fa\u8cc7\u6599\u4fe1\u865f (D0-7) \u5168\u70ba\u96f6 (0) */ outb ( 0 , PA ); /* PILI \u71c8 (1000 ms) \u4ea4\u4e92 \u9583\u720d */ for ( int i = 1 ; i <= 10 ; i ++ ){ usleep ( 1000000 ); if ( i % 2 == 0 ){ outb ( 0x00 , PA ); printf ( \"-X- step: %d \\n \" , i ); } else { outb ( 0xFF , PA ); printf ( \"-O- step: %d \\n \" , i ); } } /* \u6211\u5011\u4e0d\u518d\u9700\u8981\u9019\u4e9b\u57e0\u4f4d\u5740 */ if ( ioperm ( CCW , 3 , 0 )) { perror ( \"ioperm\" ); return ( 0 );} if ( ioperm ( PA , 3 , 0 )) { perror ( \"ioperm\" ); return ( 0 );} return ( 0 ); } class_io.cpp /****************************************************************************** Filename: class_io.cpp Compiler: g++ -Wno-deprecated -oclass_io class_io.cpp Author: Jing-Wen.Lai Function: \u63a7\u5236 8255 I/O \u5361\u4e0a\u7684 LED , \u4f7f\u4e4b\u80fd\u5920 \u5411\u7cfb\u7d71\u7533\u8acb 8255\u5361\u6240\u9700\u7684\u4f4d\u7f6e, \u5c07 8255\u5361\u6240\u9700\u7684\u4f4d\u7f6e\u9084\u7d66\u7cfb\u7d71,\u8207 (1) LED \u5168\u90e8\u9ede\u4eae, (2) LED \u5168\u90e8\u7184\u6ec5, (3) LED \u7531\u5de6\u5f80\u53f3\u8dd1, (4) LED \u7531\u53f3\u5f80\u5de6\u8dd1. ******************************************************************************/ #include <iostream.h> #include <stdio.h> #include <termios.h> #include <unistd.h> #include <sys/io.h> #define CCW 0x303 /* 8255 CCW */ #define PA 0x300 /* 8255 PORT A */ class ClassForPio8255Card // \u985e\u5225Person\u5ba3\u544a { private : int pio8255CardPort_A_Data ; public : int initAndApplySystemAddrFor8255Card (); // \u5411\u7cfb\u7d71\u7533\u8acb 8255\u5361\u6240\u9700\u7684\u4f4d\u7f6e int releaseSystemAddrFor8255Card (); // \u5c07 8255\u5361\u6240\u4f54\u7528\u7684\u4f4d\u7f6e\u9084\u7d66\u7cfb\u7d71 void piliLampFromMSBtoLSB (); // 8255\u5361\u4e0a\u7684LED \u6703\u7531\u9ad8\u4f4d\u5143\u9ede\u4eae\u5230\u4f4e\u4f4d\u5143 void piliLampFromLSBtoMSB (); // 8255\u5361\u4e0a\u7684LED \u6703\u7531\u4f4e\u4f4d\u5143\u9ede\u4eae\u5230\u9ad8\u4f4d\u5143 void brightAllLedOn8255Card (); // \u9ede\u4eae 8255\u5361\u4e0a\u7684 LED void darkAllLedOn8255Card (); // \u7184\u6389 8255\u5361\u4e0a\u7684 LED }; int main () { int ch = 0 ; /* \u9375\u76e4\u6240\u6309\u4e0b\u7684\u5b57\u5143 */ ClassForPio8255Card pio8255Card ; pio8255Card . initAndApplySystemAddrFor8255Card (); // \u521d\u59cb\u5316 8255 \u5361 while ( ch != 5 ){ cout << \"1:Brighting all LED 2:Darking all LED 3:PILI LED(MSB->LSB) 4:PILI LED(LSB->MSB) \\n \" ; cin >> ch ; cout << \"Selected Function is :\" << ch << \" \\n \" ; switch ( ch ){ case 1 : pio8255Card . brightAllLedOn8255Card (); break ; case 2 : pio8255Card . darkAllLedOn8255Card (); break ; case 3 : pio8255Card . piliLampFromMSBtoLSB (); break ; case 4 : pio8255Card . piliLampFromLSBtoMSB (); break ; default : cout << \"undefine Function ,try again please! \\n \" ; break ; } } pio8255Card . releaseSystemAddrFor8255Card (); return ( 0 ); } int ClassForPio8255Card::initAndApplySystemAddrFor8255Card (){ //cout << \"initAndApplySystemAddrFor8255Card\\n\"; /* \u53d6\u5f97\u57e0\u4f4d\u5740\u7684\u5b58\u53d6\u6b0a\u9650 */ if ( ioperm ( CCW , 3 , 1 )) { perror ( \"ioperm\" ); return ( 0 );} if ( ioperm ( PA , 3 , 1 )) { perror ( \"ioperm\" ); return ( 0 );} /* \u5b9a\u7fa9 8255 \u5de5\u4f5c\u6a21\u5f0f */ outb ( 0x80 , CCW ); /* \u91cd\u7f6e 8255 PORT A \u7684\u8f38\u51fa\u8cc7\u6599\u4fe1\u865f (D0-7) \u5168\u70ba\u96f6 (0) */ outb ( 0 , PA ); } void ClassForPio8255Card::brightAllLedOn8255Card (){ //cout << \"brightAllLedOn8255Card\\n\"; outb ( 0xff , PA ); } void ClassForPio8255Card::darkAllLedOn8255Card (){ //cout << \"darkAllLedOn8255Card\\n\"; outb ( 0x00 , PA ); } void ClassForPio8255Card::piliLampFromLSBtoMSB (){ pio8255CardPort_A_Data = 0x01 ; for ( int i = 0 ; i < 8 ; i ++ ){ outb ( pio8255CardPort_A_Data , PA ); usleep ( 1000000 ); pio8255CardPort_A_Data *= 2 ; } } void ClassForPio8255Card::piliLampFromMSBtoLSB (){ pio8255CardPort_A_Data = 0x80 ; for ( int i = 0 ; i < 8 ; i ++ ){ outb ( pio8255CardPort_A_Data , PA ); usleep ( 1000000 ); pio8255CardPort_A_Data /= 2 ; } } int ClassForPio8255Card::releaseSystemAddrFor8255Card (){ //cout << \"releaseSystemAddrFor8255Card\\n\"; // LED \u6697 outb ( 0x00 , PA ); /* \u6211\u5011\u4e0d\u518d\u9700\u8981\u9019\u4e9b\u57e0\u4f4d\u5740 */ if ( ioperm ( CCW , 3 , 0 )) { perror ( \"ioperm\" ); return ( 0 );} if ( ioperm ( PA , 3 , 0 )) { perror ( \"ioperm\" ); return ( 0 );} }","title":"C++"},{"location":"io/isa/#windows","text":"","title":"Windows"},{"location":"io/isa/#turbo-c","text":"//********************************************************************************** //-- PC\u4e0a\u4ecb\u9762\u5be6\u7fd2 8255 \u8207 8254 \u6e2c\u8a66 //-- \u7248\u672c: v0.1 6/6/2001 //-- \u8aaa\u660e: \u6e2c\u8a66 \u7d44\u88dd \u5b8c\u7562 \u7684 8255 \u8207 8254 \u662f\u5426\u53ef\u52d5\u4f5c //-- \u4f7f\u7528\u65b9\u5f0f: \u96a8\u610f\u6309\u4efb\u4e00\u6309\u9375, \u87a2\u5e55\u4e0a \u986f\u793a \"O\", \u6b64\u6642 LED 1,2,5,6 \u4eae, \u4e26\u4e14\u5587\u53ed\u767c\u51fa\u8072\u97f3 //-- \u518d\u96a8\u610f\u6309\u4efb\u4e00\u6309\u9375, \u87a2\u5e55\u4e0a \u986f\u793a \"X\", \u6b64\u6642 LED \u5168\u90e8 \u4e0d\u4eae, \u4e26\u4e14\u5587\u53ed\u4e0d\u767c\u51fa\u8072\u97f3 //-- \u6309 \"Esc\" \u9375 \u53ef \u96e2\u958b\u672c\u7a0b\u5f0f //--================================================================================ //-- IO \u4f4d\u5740 : \u8acb \u53c3\u8003 \u4e0b\u9762 #define \u7684\u5b9a\u7fa9 //-- \u914d\u5408\u786c\u9ad4 : \u53c3\u8003 \u4e0b\u9762 \u53c3\u8003\u6587\u4ef6 //-- \u5143\u4ef6\u5217\u8868 : 8255 X 1 ( \u53ef\u7a0b\u5f0f\u898f\u5283\u908f\u8f2f\u4ecb\u9762 ; PPI) //-- 8254 X 1 ( \u53ef\u7a0b\u5f0f\u898f\u5283\u8a08\u6578(\u6642)\u4ecb\u9762 / \u6700\u9ad8\u8f38\u5165\u6642\u5e8f 8 MHz ) //-- ( \u65e5\u672c NEC \u7de8\u865f\u7684 8254 \u70ba D71054C ) //-- //-- 74LS138 X 1 ( \u89e3\u78bc\u81f4\u80fd 8255 \u8207 8254 \u7528 ) //-- 74LS00 X 1 ( \u89e3\u78bc\u81f4\u80fd 74LS138 \u8207 \u5587\u53ed\u96fb\u8def ) //-- //-- 5K \u53ef\u8abf\u5f0f\u96fb\u963b X 1 ( \u5587\u53ed\u96fb\u8def\u7528 ) //-- C1815 X 1 ( \u5587\u53ed\u96fb\u8def\u7528 , \u7de8\u865f\u9762 \u63a5\u8173 ECB) //-- \u5587\u53ed X 1 ( \u5587\u53ed\u96fb\u8def\u7528, \u4f7f\u7528 PC \u4e0a\u7684\u5587\u53ed\u5373\u53ef) //-- LED X 8 ( \u6aa2\u89968255 portA \u8f38\u51fa\u7528(\u5341\u9846\u5305\u88dd\u578b LED \u6709\u6642\u7121\u6cd5\u52d5\u4f5c)) //-- //-- \u91d1\u624b\u6307 AT \u4ecb\u9762\u96fb\u8def\u677f //-- \u4e0a\u8ff0 IC \u6240\u9700\u8173\u5ea7 \u53ca \u4e00\u822c\u710a\u63a5\u5de5\u5177 //--================================================================================ //-- \u7de8\u8f2f\u5668 : Jext ( http://www.jext.org/ ) //-- \u7d44\u8b6f\u5668 : Turbo C++ //-- \u53c3\u8003\u6587\u4ef6 : PC XT/AT \u4ecb\u9762\u8a2d\u8a08\u8207\u61c9\u7528 Visual Basic 6.0 \u7248(ISBN:957-499-229-2) / \u5112\u6797 //-- 8254 \u96fb\u8def\u5716 P 5-57 //-- 8255 \u96fb\u8def\u5716 P 3-49 (\u4f4d\u5740\u9078\u53d6\u65b9\u5f0f \u6539\u7528 8255 \u9078\u53d6\u65b9\u5f0f) //-- \u539f\u66f8\u932f\u8aa4\u66f4\u6b63 : // p5-62 DEBUG \u5167\u7684 \u5012\u6578\u7b2c\u516b\u500b\u6307\u4ee4\u70ba -O 303 00 //-- \u61c9\u6539\u70ba -O 302 00 //-- \u5012\u6578\u7b2c\u4e03\u500b\u6307\u4ee4\u70ba -O 303 02 //-- \u61c9\u6539\u70ba -O 302 02 //-- \u5012\u6578\u7b2c\u4e09\u500b\u6307\u4ee4\u70ba -O 303 01 //-- \u61c9\u6539\u70ba -O 302 01 //-- \u5012\u6578\u7b2c\u4e8c\u500b\u6307\u4ee4\u70ba -O 323 03 //-- \u61c9\u6539\u70ba -O 302 03 //-- \u5012\u6578\u7b2c\u4e00\u500b\u6307\u4ee4\u70ba -O 303 02 \u8a3b\u89e3\u8655\u70ba \u7981\u80fd \u8702\u9cf4\u5668 //-- \u61c9\u6539\u70ba -O 302 02 \u61c9\u6539\u70ba \u7981\u80fd \u7b2c\u4e8c\u8a08\u6578\u5668 //-- p5-65 \u7a0b\u5f0f\u78bc\u5167\u4f5c\u8005\u628a PPI_PC \u548c PPI_CW \u7684\u4f4d\u5740 \u6709\u6642\u5f04\u6df7\u310b //-- ( \u932f\u8aa4\u883b\u591a\u7684 \u6539\u7684\u6709\u9ede \u773c\u82b1\u310b ,\u4e0d\u904e\u4f9d\u4f5c\u8005\u7684\u932f\u8aa4\u7a0b\u5f0f\u78bc\u537b\u53ef\u4ee5\u57f7\u884c,\u771f\u4ee4\u4eba\u8a1d\u7570) //-- \u5099\u8a3b: \u7121\u6cd5\u5728 \u6211\u7684 P-II \u4e0a\u6e2c\u8a66(\u6216\u8a31\u9700\u8abf\u6574 \u5b89\u9081 ROM \u5167 CLK \u7684\u8a2d\u5b9a,\u4f46\u8207\u53ef\u4ee5\u6e2c\u8a66\u7684 P-I \u4e3b\u6a5f ROM \u8a2d\u5b9a\u5167\u7121\u6cd5\u767c\u73fe\u76f8\u540c\u7684 Function) //-- ,\u6539\u6210\u65bc \u6aa2\u4f86\u7684 P-I \u4e0a\u6e2c\u8a66 ,\u7531\u65bc P-I \u7684\u914d\u5099\u8f03\u967d\u6625 \u6545\u5c07\u7a0b\u5f0f\u78bc \u6539\u6210\u7528 Turbo C++ \u5beb //-- \u6ce8\u610f: \u5728 #define \u5f8c\u7684 \u8a3b\u89e3 \u9700\u4ee5 \" // \" \u958b\u982d \u4e0d\u80fd\u4f7f\u7528 \" ; \" //-- \u66f4\u65b0Log: // //********************************************************************************** #include <iostream.h> //#include <bios.h> //#include <dos.h> #include <conio.h> //>>>>>>>>>>>>>>>>>>>>>>>>> 8255 \u7528 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< #define PPI_8255_CW 0x3f3 // 8255 \u5167\u7684 \u63a7\u5236\u5b57\u7d44 \u4f4d\u5740 #define PPI_8255_CW_STATE 0x80 // \u8a2d\u5b9a 8255 \u70ba MODE0 \u5168\u90e8 PORT \u7686\u70ba\u8f38\u51fa //>>>>>>>>>>>>>>>>>>>>>>>>> 8255 portA LED \u986f\u793a \u7528 <<<<<<<<<<<<<<<<<<<<<<< #define PPI_8255_PA 0X3f0 // 8255 \u5167\u7684 PORT A \u4f4d\u5740 #define ledEnable 0x00 // 8255 port A \u8f38\u51fa\u81f3 LED 1,2,5,6 \u4eae #define ledDisable 0xff // 8255 port A \u8f38\u51fa\u81f3 LED \u5168\u90e8 \u4e0d\u4eae //>>>>>>>>>>>>>>>>>>>>>>>>> 8254 \u7528 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< #define PPC_8254_CW 0x323 // 8254 \u5167\u7684 \u63a7\u5236\u5b57\u7d44 \u4f4d\u5740 #define PPC_8254_CW_STATE 0XB6 // \u8a2d\u5b9a 8254 \u7b2c\u4e8c\u8a08\u6578\u5668 \u70ba \u6a21\u5f0f\u4e09 ,\u8b80\u5beb \u9ad8\u4f4e\u4f4d\u5143\u7d44 , HEX //>>>>>>>>>>>>>>>>>>>>>>>>> \u8702\u9cf4\u5668 \u7528 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< #define PPI_8255_PC 0X3f2 // 8255 \u5167\u7684 PORT C \u4f4d\u5740 , PC 0 \u63a7\u5236 8254 \u7b2c\u4e8c\u8a08\u6578\u5668 \u7528 , PC 1 \u63a7\u5236 \u8702\u9cf4\u5668 \u7528 #define PPC_8254_C2 0X322 // 8254 \u5167\u7684 \u7b2c\u4e8c\u8a08\u6578\u5668 \u4f4d\u5740 #define PPC_8254_C2_STATE 0XFF // 8254 \u5167\u7684 \u7b2c\u4e8c\u8a08\u6578\u5668 \u7684\u9ad8\u4f4e\u4f4d\u5143\u7d44\u8a08\u6578\u503c #define bellDisable 0x00 // \u7981\u80fd \u7b2c\u4e8c\u8a08\u6578\u5668 ,\u7981\u80fd\u63da\u8072\u5668 #define bellEnable 0xff // \u81f4\u80fd \u7b2c\u4e8c\u8a08\u6578\u5668 ,\u81f4\u80fd\u63da\u8072\u5668 void out ( unsigned int ioAddr , unsigned char ioData ) { asm { mov dx , ioAddr mov al , ioData out dx , al }; } void main () { clrscr (); cout << \"push Esc to exit\" << endl ; //>>>>>>>>> 8255 \u521d\u59cb\u5316 <<<<<<<<< out ( PPI_8255_CW , PPI_8255_CW_STATE ); // \u8a2d\u5b9a 8255 //outportb(PPI_8255_CW, PPI_8255_CW_STATE); // \u8a2d\u5b9a 8255 out ( PPI_8255_PC , bellDisable ); // \u5148\u7981\u80fd \u8702\u9cf4\u5668\u53ca 8254 out ( PPC_8254_CW , PPC_8254_CW_STATE ); // \u8a2d\u5b9a 8254 \u7b2c\u4e8c\u8a08\u6578\u5668 out ( PPC_8254_C2 , PPC_8254_C2_STATE ); // \u8a08\u6578\u503c\u5beb\u5165 \u7b2c\u4e8c\u8a08\u6578\u5668\u7684 \u4f4e\u4f4d\u5143\u7d44 out ( PPC_8254_C2 , PPC_8254_C2_STATE ); // \u8a08\u6578\u503c\u5beb\u5165 \u7b2c\u4e8c\u8a08\u6578\u5668\u7684 \u9ad8\u4f4d\u5143\u7d44 int i = 0 , j = 0 ; while ( i < 500 ){ if ( i % 2 == 0 ){ cout << \"O\" << endl ; for ( j = 0 ; j < 25000 ; j ++ ) out ( PPI_8255_PA , ledEnable ); // \u81f4\u80fd LED // out(PPI_8255_PC ,bellEnable); // \u81f4\u80fd \u8702\u9cf4\u5668 } else { cout << \"X\" << endl ; for ( j = 0 ; j < 25000 ; j ++ ) out ( PPI_8255_PA , ledDisable ); // \u7981\u80fd LED // out(PPI_8255_PC ,bellDisable); // \u7981\u80fd \u8702\u9cf4\u5668 } // -- if \u8ff4\u5708 \u7d50\u675f i ++ ; } //-- while \u8ff4\u5708 \u7d50\u675f }","title":"Turbo C"},{"location":"io/isa/#advanced","text":"FIXME: It could be more friendly if there is any GUI interface to manipulate the LED.","title":"Advanced"},{"location":"io/isa/#linux-device-driver","text":"Linux \u5728 user-space \u7531\u65bc\u90fd\u9700\u4ee5 root \u6b0a\u9650\u9a45\u52d5\u786c\u9ad4\uff0c \u82e5\u9700\u8b93\u4e00\u822c\u4f7f\u7528\u8005\u4e5f\u80fd\u9a45\u52d5\u786c\u9ad4\uff0c\u9700\u8003\u616e\u64b0\u5beb\u4f7f\u7528 kernal-space \u7684Linux Device Driver`.","title":"Linux Device Driver"},{"location":"io/isa/#qt","text":"hello_qt.cpp /**************************************************************************** Filename: hello_qt.cpp Compiler: g++ -I$QTDIR/include -L$QTDIR/lib -lqt -o hello_qt hello_qt.cpp Running: ./hello_qt& ( \u4e1f\u5230\u80cc\u666f\u57f7\u884c ) Function: Linux GUI \u8996\u7a97\u7a0b\u5f0f \u7684\u57fa\u672c\u6e2c\u8a66\uff0c\u5efa\u7acb\u4e00\u500b Hello QT! \u7684\u57fa\u672c\u8996\u7a97 Date: 3/23 2003 Reference: http://doc.trolltech.com/3.1/tutorial1-01.html ****************************************************************************/ #include <qapplication.h> #include <qpushbutton.h> int main ( int argc , char ** argv ){ QApplication a ( argc , argv ); QPushButton hello ( \"Hello QT!\" , 0 ); hello . resize ( 100 , 30 ); a . setMainWidget ( & hello ); hello . show (); return a . exec (); } frame: moc \u4f7f\u7528\u8a0a\u865f \u8207\u2571\u6216 \u6e9d\u69fd\u7684\u985e\u5225\u7684\u4e00\u822c\u9aa8\u67b6 (\u6458\u9304\u65bc Programming with Qt p.32) class MyClass : public Qobject { Q_OBJECT ... signals : // \u5c07\u4f60\u7684 \u8a0a\u865f \u653e\u5728\u9019\u88e1,\u5982 void somethingDone (); ... public slots : // \u5c07\u4f60 \u516c\u958b\u7684\u6e9d\u69fd \u653e\u5728\u9019\u88e1,\u5982 viod soltDoSomething (); private slots : // \u5c07\u4f60 \u79c1\u6709\u7684\u6e9d\u69fd \u653e\u5728\u9019\u88e1,\u5982 void slotDoSomethingInternal (); // \u7576\u7136, \u4f60\u53ef\u4ee5\u52a0\u5165\u5176\u4ed6\u7684\u5ba3\u544a }; \u8a0a\u865f \u8207\u2571\u6216 \u6e9d\u69fd\u7684 \u985e\u5225 (\u6458\u9304\u65bc Programming with Qt p.35 ) mocDemo2.cpp /**************************************************************************** Filename: mocDemo2.cpp Compiler: g++ -I$QTDIR/include -L$QTDIR/lib -lqt -o mocDemo2 mocDemo2.cpp Running: ./mocDemo2& ( \u4e1f\u5230\u80cc\u666f\u57f7\u884c ) Function: \u4e86\u89e3 moc \u7684\u7528\u6cd5 \u3002 Reference: \u51fa\u81ea Programming with QT , exercise-2-4-1.cpp (p35 \u7684 \u7df4\u7fd2\u984c ) Date: 03/24 2003 Comment: \u4e26\u6c92\u6709 \u7528 Programming with QT \u66f8\u4e2d\u4ee5 moc (moc -o moc_file.cpp myfile.h) \u4f86\u8655\u7406 \u5305\u542b\u985e\u5225\u5ba3\u544a\u7684\u6a94\u6848\u4ea6\u53ef\u52d5\u4f5c \u6240\u4ee5\u4e26\u4e0d\u78ba\u5b9a qt3 \u4ee5\u5f8c\u7684\u505a\u6cd5 ****************************************************************************/ #include <qapplication.h> #include <qpushbutton.h> #include <qslider.h> #include <qlcdnumber.h> int main ( int argc , char * argv [] ) { QApplication myapp ( argc , argv ); QWidget * mywidget = new QWidget (); mywidget -> setGeometry ( 400 , 300 , 170 , 150 ); QSlider * myslider = new QSlider ( 0 , // minimum value 9 , // maximum value 1 , // step 1 , // initial value QSlider :: Horizontal , // orientation mywidget // parent ); myslider -> setGeometry ( 10 , 10 , 150 , 30 ); QLCDNumber * mylcdnum = new QLCDNumber ( 1 , // number of digits mywidget // parent ); mylcdnum -> setGeometry ( 60 , 50 , 50 , 50 ); mylcdnum -> display ( 1 ); // display initial value // connect slider and number display QObject :: connect ( myslider , SIGNAL ( valueChanged ( int ) ), mylcdnum , SLOT ( display ( int ) ) ); // create two push buttons for decrementing and // incrementing the slider values QPushButton * decrement = new QPushButton ( \"<\" , mywidget ); decrement -> setGeometry ( 10 , 110 , 50 , 30 ); QPushButton * increment = new QPushButton ( \">\" , mywidget ); increment -> setGeometry ( 110 , 110 , 50 , 30 ); // connect the clicked() signal of the buttons to the slots that // increment and decrement the slider value QObject :: connect ( decrement , SIGNAL ( clicked () ), myslider , SLOT ( subtractStep () ) ); QObject :: connect ( increment , SIGNAL ( clicked () ), myslider , SLOT ( addStep () ) ); myapp . setMainWidget ( mywidget ); mywidget -> show (); return myapp . exec (); } - QT socket Running","title":"QT"},{"location":"io/isa/#reference","text":"ID \u53c3\u8003\u8cc7\u6599 \u8aaa\u660e 1 Programmer \u6df1\u5ea6\u8ad6\u58c7 \u7a0b\u5f0f\u5beb\u4f5c\u8a0e\u8ad6\u5340 2 32 Bit Delphi \u6df1\u5ea6\u6b77\u96aa \u53ef\u4ee5\u4e0b\u8f09 DLPORT \u5143\u4ef6( \u5728 XP \u5e73\u53f0\u4e0a\u63a7\u5236 I/O ) 3 \u5fb7\u5dde\u5100\u5668 \u53ef\u4ee5\u641c\u5c0b IC \u683c\u8cc7\u6599 4 \u8208\u5fb7\u8cc7\u8a0a \u5546\u696d\u7248\u9a45\u52d5\u7a0b\u5f0f 5 \u96fb\u8166\u9054\u4eba\u990a\u6210\u8a08\u756b 4-3\uff1a\u6b77\u4ee3\u64f4\u5145\u4ecb\u9762\u5361\u6a19\u6e96 (\u4e0a) 6 Welding\u3001brazing\u3001soldering\u4e09\u7a2e\u5dee\u5225","title":"Reference"},{"location":"io/isa/#appendix","text":"","title":"Appendix"},{"location":"io/isa/#appendix-a-pc-at-interface-pinout","text":"A1~A31 and B1~B31 (8-Bit XT-Bus) Input/Output Description Pin Pin Description Input/Output GROUND GND B1 A1 -I/O CH CK I O RESET DRV B2 A2 SD7 I/O POWER +5V DC B3 A3 SD6 I/O I IRQ9 B4 A4 SD5 I/O POWER -5V DC B5 A5 SD4 I/O I DRQ2 B6 A6 SD3 I/O POWER -12V DC B7 A7 SD2 I/O I OWS B8 A8 SD1 I/O POWER +12V DC B9 A9 SD0 I/O GROUND GND B10 A10 -I/O CH RDY I O -SMEMW B11 A11 AEN O O -SMEMR B12 A12 SA19 I/O I/O -IOW B13 A13 SA18 I/O I/O -IOR B14 A14 SA17 I/O O -DACK3 B15 A15 SA16 I/O I DRQ3 B16 A16 SA15 I/O O -DACK1 B17 A17 SA14 I/O I DRQ1 B18 A18 SA13 I/O I/O -REFRESH B19 A19 SA12 I/O O CLK B20 A20 SA11 I/O I IRQ7 B21 A21 SA10 I/O I IRQ6 B22 A22 SA9 I/O I IRQ5 B23 A23 SA8 I/O I IRQ4 B24 A24 SA7 I/O I IRQ3 B25 A25 SA6 I/O O -DACK2 B26 A26 SA5 I/O O T/C B27 A27 SA4 I/O O BALE B28 A28 SA3 I/O POWER +5V DC B29 A29 SA2 I/O O OSC B30 A30 SA1 I/O GROUND GND B31 A31 SA0 I/O C1~C18 and D1~D18 Input/Output Description Pin Pin Description Input/Output I -MEM CS16 D1 C1 SBHE I/O I -I/O CS16 D2 C2 LA23 I/O I IRQ10 D3 C3 LA22 I/O I IRQ11 D4 C4 LA21 I/O I IRQ12 D5 C5 LA20 I/O I IRQ15 D6 C6 LA19 I/O I IRQ14 D7 C7 LA18 I/O O -DACK0 D8 C8 LA17 I/O I DRQ0 D9 C9 -MEMR I/O O -DACK5 D10 C10 -MEMW I/O I DRQ5 D11 C11 SD8 I/O O -DACK6 D12 C12 SD9 I/O I DRQ6 D13 C13 SD10 I/O O -DACK7 D14 C14 SD11 I/O I DRQ7 D15 C15 SD12 I/O POWER +5V DC D16 C16 SD13 I/O I MASTER D17 C17 SD14 I/O GROUND GND D18 C18 SD15 I/O","title":"Appendix A - PC AT Interface Pinout"},{"location":"io/isa/#appendix-b-intel-82c55a-programmable-peripheral-interface-pinout","text":"Intel 82C55A PINOUT Description Pin Pin Description PA3 1 40 PA4 PA2 2 39 PA5 PA1 3 38 PA6 PA0 4 37 PA7 -RD 5 36 -WR -CS 6 35 RESET GND 7 34 D0 A1 8 33 D1 A2 9 32 D2 PC7 10 31 D3 PC6 11 30 D4 PC5 12 29 D5 PC4 13 28 D6 PC0 14 27 D7 PC1 15 26 VCC PC2 16 25 PB7 PC3 17 24 PB6 PB0 18 23 PB5 PB1 19 22 PB4 PB2 20 21 PB3","title":"Appendix B - Intel 82C55A Programmable Peripheral Interface Pinout"},{"location":"io/isa/#appendix-c-intel-8254-programmable-interval-timer-pinout","text":"Intel 82C54 PINOUT Description Pin Pin Description D7 1 24 VCC D6 2 23 -WR D5 3 22 -RD D4 4 21 -CS D3 5 20 A1 D2 6 19 A0 D1 7 18 CLK2 D0 8 17 OUT2 CLK0 9 16 GATE2 OUT0 10 15 CLK1 GATE0 11 14 GATE1 GND 12 13 OUT1","title":"Appendix C - Intel 8254 Programmable Interval Timer Pinout"},{"location":"io/isa/#appendix-d-remote-access-by-vnc","text":"\u4ee5\u4e0b\u5217\u51fa C \u8a9e\u8a00\u7a0b\u5f0f\u78bc \u8207\u57f7\u884c\u7d50\u679c\u3002 \u70ba\u4e86\u65b9\u4fbf \u64b0\u5beb\u7a0b\u5f0f\u78bc\u3001\u6e2c\u8a66\u7d50\u679c\uff0c\u64b0\u5beb\u6b64\u4efd\u8aaa\u660e\u6587\u4ef6\uff0c\u4e0a\u7db2\u807d\u4e32\u6d41\u97f3\u6a02\uff0c\u2026 \u5728\u4e3b\u6a5f\u7aef\u67b6\u8a2d\u4e86 FTP Server ( \u5c07 Win-XP \u4e0b\u7de8\u5beb\u7684\u7a0b\u5f0f\u78bc\u4e0a\u50b3\u81f3 RedHat Linux ) \u8207 VNC Server( \u9060\u7aef\u9059\u63a7 RedHat Linux )\uff0c \u4f7f\u7528 VNC \u8edf\u9ad4\uff0c\u7531 Win-XP \u9060\u7aef\u9023\u7dda\u5230 RedHat Linux 8.0 \u57f7\u884c\u7a0b\u5f0f\uff0c\u5728 Win-XP \u57f7\u884c\u7d50\u679c\u3002 VNC Server \u9023\u7dda\u6b65\u9a5f. \u6b65\u9a5f RedHat Linux 8.0 Win-XP \u8aaa\u660e Step.0 \u9032\u5165 \u7d42\u7aef\u6a5f \u2500 \u8d85\u7d1a\u4f7f\u7528\u8005\u6a21\u5f0f, \u4e26\u8f38\u5165\u4ee5\u4e0b\u547d\u4ee4 Step.1 # adsl-start RedHat Linux \u4e3b\u6a5f\u9023\u7dda\u81f3\u7db2\u969b\u7db2\u8def Step.2 # vncserver \u555f\u52d5 vncserver Step.3 # ifconfig \u67e5\u770b dhcp \u6240\u5206\u914d\u5230\u7684 IP Step.4 Run VNC Viewer \u555f\u52d5 VNC client \u7aef, \u8f38\u5165\u4e3b\u6a5f IP Step.5 \u8f38\u5165\u767b\u5165\u7684\u5bc6\u78bc Step.6 \u767b\u5165\u5b8c\u7562","title":"Appendix D - Remote Access by VNC"},{"location":"io/ldd/","text":"Under Construction now ... Man-Machine Interfaces Parallel Port Device and Linux Device Driver $author: Jin-Wen (Ed) Lai, s9360511[at]ntut[dot]org[dot]tw $date: May. 2003 $revised: Mar. 2018 $keywords: man, machine, interface An exercise of an implementation of Linux Device Driver. Content Concept Requirements Hardware Software Programming Stand-alone Edition Online Edition Application Demonstration Concept \u9a45\u52d5\u96fb\u8166\u4e26\u5217\u57e0\u4e0a\u7684 LED. Super I/O Parallel Port Breadboard Sorry, your browser does not support inline SVG. Requirements Hardware PC (w/. Parallel Port) Software RedHat Linux Linux GCC Hardware Schematic Breadboard Background IO Port Address in PC I/O\u57e0 LPT1 LPT2 Monochrome Display Adapter \u8cc7\u6599\u8f38\u51fa\u57e0 0x378 0x278 0x3BC \u72c0\u614b\u8f38\u5165\u57e0 0x379 0x279 0x3BD \u63a7\u5236\u8f38\u51fa\u57e0 0x37A 0x27A 0x3BE BIOS \u6578\u64da\u5340 \u7576BIOS\u5c0b\u627e\u5230\u5e73\u884c\u57e0\u5f8c, \u9664\u6703\u6a19\u660eLPT\u540d\u7a31\u5916, \u4e5f\u6703\u5728BIOS\u6578\u64da\u5340\uff08Data Area\uff09\u5167\u5132\u5b58BIOS\u898f\u5283\u7d66\u5e73\u884c\u57e0\u7684\u4f4d\u5740. BIOS\u6578\u64da\u5340\u662f\u4e00\u500b\u8a18\u61b6\u9ad4\u5340\u57df, \u5176\u5167\u90e8\u5132\u5b58\u8457\u8a18\u9304PC\u6240\u6709\u88dd\u7f6e\u7684\u6620\u5c04\u8868(mapping table). \u56e0\u6b64, \u82e5\u7121\u6cd5\u5229\u7528\u4f5c\u696d\u7cfb\u7d71\u7372\u5f97\u5e73\u884c\u57e0\u7684 378 \u6216 278 \u4f4d\u5740, \u90a3\u5c31\u5fc5\u9808\u900f\u904eBIOS\u7684\u6620\u5c04\u8868\u4f86\u53d6\u5f97. Super IO \u76ee\u524d PC \u4e0a\u7684 Parallel port , \u5e7e\u4e4e\u6709\u5df2\u6574\u5408\u5230 Super IO \u88e1\u9762. \u6240\u4ee5\u6211\u5011\u53ef\u4ee5\u53c3\u8003 Super IO \u7684\u898f\u683c. IT8712F \u7684\u65b9\u584a\u5716 IT8712F \u8173\u4f4d\u5b9a\u7fa9\u8868\u683c ( P.100~P117 ) Pin Signal Pin Signal Pin Signal Pin Signal 1 DTR2# 33 SCRIO/GP12 65 DSKCHG# 97 VIN1 2 RTS2# 34 SCRCLK/GP11 66 IRTX/GP47 98 VIN0 3 DSR2# 35 VCC 67 VCCH 99 VCC 4 VCC 36 LPCPD# 68 COPEN# 100 SLCT 5 SOUT2 37 LRESET# 69 VBAT 101 PE 6 SIN2 38 LDRQ# 70 IRRX/GP46 102 BUSY 7 FAN_TAC1 39 SERIRQ 71 PSIN/GP45 103 ACK# 8 FAN_CTL1 40 LFRAME# 72 PWRON#/GP44 104 SLIN# 9 FAN_TAC2/GP52 41 LAD0 73 PME#/GP54 105 INIT# 10 FAN_CTL2/GP51 42 LAD1 74 GNDD 106 ERR# 11 FAN_TAC3/GP37 43 LAD2 75 PANSWH#/GP43 107 AFD# 12 FAN_CTL3/GP36 44 LAD3 76 PSON#/GP42 108 STB# 13 WTI#/GP35 45 KRST# 77 RING#/GP53 109 PD0 14 VID4/GP34 46 GA20 78 GP41 110 PD1 15 GNDD 47 PCICLK 79 GP40 111 PD2 16 VID3/GP33 48 CLKRUN#/GP50 80 KDAT 112 PD3 17 VID2/GP32 49 CLKIN 81 KCLK 113 PD4 18 VID1/GP31 50 GNDD 82 MDAT 114 PD5 19 VID0/GP30 51 DENSEL# 83 MCLK 115 PD6 20 JSBB2/GP27 52 MTRA# 84 SCRPRES#/GP10 116 PD7 21 JSBB1/GP26 53 MTRB# 85 CIRRX/COPENO#/GP55 117 GNDD 22 JSBCY/GP25 54 DRVA# 86 GNDA 118 DCD1# 23 JSBCX/GP24 55 DRVB# 87 TMPIN3 119 RI1# 24 JSAB2/GP23 56 WDATA# 88 TMPIN2 120 CTS1# 25 JSAB1/GP22 57 DIR# 89 TMPIN1 121 DTR1#/JP1 26 JSACY/GP21 58 STEP# 90 VREF 122 RTS1#/JP2 27 JSACX/GP20 59 HDSEL# 91 VIN7 123 DSR1# 28 MIDI_OUT/GP17 60 WGATE# 92 VIN6 124 SOUT1/JP3 29 MIDI_IN/GP16 61 RDATA# 93 VIN5 125 SIN1 30 CIRTX/GP15 62 TRK0# 94 VIN4 126 DCD2# 31 SCRRST/GP14 63 INDEX# 95 VIN3 127 RI2# 32 SCRPFET#/GP13 64 WPT# 96 VIN2 128 CTS2# IT8712F \u4e26\u5217\u57e0\u8173\u4f4d\u5b9a\u7fa9\u63cf\u8ff0 Pin(s) No. Symbol I/O Power Description 100 SLCT DI VCC Printer Select. This signal goes high when the line printer has been selected. 101 PE DI VCC Printer Paper End. This signal is set high by the printer when it runs out of paper. 102 BUSY DI VCC Printer Busy. This signal goes high when the line printer has a local operation in progress and cannot accept data. 103 ACK# DI VCC Printer Acknowledge #. This signal goes low to indicate that the printer has already received a character and is ready to accept another. 104 SLIN# DIO24 VCC Printer Select Input #. When low, the printer is selected. This signal is derived from the complement of bit 3 of the printer control register. 105 INIT# DIO24 VCC Printer Initialize #, active low. This signal is derived from bit 2 of the printer control register, and is used to initialize the printer. 106 ERR# DI VCC Printer Error #. When low, it indicates that the printer has encountered an error. The error message can be read from bit 3 of the printer status register. 107 AFD# DIO24 VCC Printer Auto Line Feed #, active low. This signal is derived from the complement of bit 1 of the printer control register, and is used to advance one line after each line is printed. 108 STB# DIO24 VCC Printer Strobe #, active low. This signal is the complement of bit 0 of the printer control register, and is used to strobe the printing data into the printer. 109 - 116 PD[0:7] DIO24 VCC Parallel Port Data Bus. This bus provides a byte-wide input or output to the system. The eight lines are held in a high impedance state when the port is deselected. IT8712F IC\u8173\u4f4d\u5b9a\u7fa9 IT8712F \u4e26\u5217\u57e0\u7dda\u8def IT8712F BIOS Initialize function Borrowed from Specifications \u4e3b\u7a0b\u5f0f(Main): Main: CALL Enter_Configuration_mode CALL Ch eck_Chip ;Don't need in BIOS POST code JNC Initial_OK ;Don't need in BIOS POST code CALL Earlyio_Program CALL Initialize_All_Device CALL Before_Boot CALL Exit_Configuration_mode CALL Reset_System ;Don't need in BIOS POST code Initial_OK: CALL Exit_Configuration_mode ;Don't need in BIOS POST code MOV AH , 4Ch INT 21h \u9a45\u52d5\u9031\u908a\u88dd\u7f6e: Initialize_All_Device PROC NEAR APC_PME_Status: KBC_Keyboard_Status: KBC_Mouse_Status: MIDI_Status: Game_Status: CIR_Status: FDC_Status: FDC_Function: Register: Serial1_Status: Serial2_Status: Serial2_Function: ConfigurationRegister2: \u95dc\u65bc\u5370\u8868\u6a5f\u57e0\u7684\u521d\u503c\u8a2d\u5b9a\u7a0b\u5f0f\u7247\u6bb5: Parallel_Status: MOV BH , 03h ;LDN=03h -> Parallel port MOV BL , BYTE PTR CS :[ Parallel ] ;Enable/Disable Parallel port CALL Set_Device_Status MOV BX , WORD PTR CS :[ Parallel + 01h ] ;Set Parallel portbaseaddress CALL Set_Device_Port MOV BL , BYTE PTR CS :[ Parallel + 03h ] ;Set Parallel port IRQ CALL Set_Device_IRQ Parallel_Function: MOV AL , 0F0h ;(Index 0F0h) MOV AH , BYTE PTR CS :[ P_Mode ] ;Parallel Port Special ConfigurationRegister: CALL Write_Configuration_Data ;P_Mode->SPP, EPP, ECP... MOV AH , BYTE PTR CS :[ P_Mode ] AND AH , 02h JZ No_Set_DMA MOV AL , 074h MOV AH , BYTE PTR CS :[ P_DMA ] ;Set Parallel DMA channel CALL Write_Configuration_Data ;P_DMA->DMA channel No_Set_DMA: RET Initialize_All_Device ENDP \u5370\u8868\u6a5f\u53c3\u6578\u9810\u8a2d\u503c: ;------------------------------------------------------------------------------- Parallel DB 01h ;00h->Disable, 01h->Enable DW 378h ;3BCh->LPT0, 378h->LPT1, 278h->LPT2 DB 07h ;07h->IRQ7, 05h->IRQ5 P_Mode DB 03h ;00h->SPP, 01h->EPP, 02h->ECP, 03h->EPP&ECP P_DMA DB 03h ;01h->DMA1, 03h->DMA3 ;------------------------------------------------------------------------------- Programming Stand-alone Edition Module Code Kernel Space Device Driver coding ( ldd.c ) /****************************************************************************** Linux Device drivers Compiler: $ sudo make Enable: $ sudo sdd_load #<= loading it on your kernel Disable: $ sudo sdd_unload #<= remove it on you kernel Usage: $ sudo echo -n \"12345\" > /dev/sddw Files: 1. Makefile 2. sdd_load 3. sdd_unload ******************************************************************************/ #if defined(CONFIG_MODVERSIONS) && ! defined(MODVERSIONS) #include <linux/modversions.h> #define MODVERSIONS #endif #include <linux/kernel.h> #include <linux/module.h> #include <linux/fs.h> #include <asm/uaccess.h> // for put_user, #include <linux/ioport.h> // for check_region... #include <linux/sched.h> // for request_irq ... #include <linux/errno.h> // for -EIO... #include <asm/io.h> // for inb_p outb_p #include <linux/delay.h> // for u_delay /* Sub Proc */ int init_module ( void ); void cleanup_module ( void ); static int sdd_open ( struct inode * , struct file * ); static int sdd_release ( struct inode * , struct file * ); static int sdd_ioctl ( struct inode * , struct file * , unsigned int , unsigned long ); static int sdd_read ( struct file * , const char * , size_t , loff_t * ); static int sdd_write ( struct file * , const char * , size_t , loff_t * ); static void sdd_irq_handler ( int , void * , struct pt_regs * ); #define DEVICE_NAME \"sdd\" // major device number #define SDD_MAJOR 0 // SDD_MAJOR = 0 \u8868\u793a\u7531\u7cfb\u7d71\u52d5\u614b\u914d\u7f6e // minor device number #define SDD_WRITE 0 #define SDD_READ 1 // ioctl commands #define SDD_TRON _IO('M',0x01) #define SDD_TROFF _IO('M',0x02) // I/O ports used by the device #define SDD_BASE 0x378 // base port (the First Printer port ) #define SDD_REGSIZE 3 // size of I/O port regin #define SDD_OUT (SDD_BASE + 0) #define SDD_IN (SDD_BASE + 2) // interrupt line used by the device #define SDD_IRQ 0x7 #define TRACE_CHR(chr) \\ if (sdd_trace) printk(\"%c\",(chr)); #define TRACE_TXT(txt) \\ if (sdd_trace) printk(KERN_INFO\"%s\\n\",(txt)); static int sdd_trace ; static int read_busy ; static int write_busy ; static int Major ; // Major Device Number static int myint ; // for delay loop MODULE_PARM ( myint , \"i\" ); // i: integer static int i ; MODULE_PARM ( i , \"i\" ); static char b ; // b: single byte MODULE_PARM ( b , \"b\" ); static struct file_operations fops = { . read = sdd_read , . write = sdd_write , . ioctl = sdd_ioctl , . open = sdd_open , . release = sdd_release }; // .............................. Functions ................................. int init_module ( void ) { Major = register_chrdev ( SDD_MAJOR , DEVICE_NAME , & fops ); if ( Major < 0 ) { printk ( KERN_WARNING \"SDD:Registering the character device failed with %d \\n \" , Major ); return Major ; return - EIO ; } if ( check_region ( SDD_BASE , SDD_REGSIZE )) { printk ( KERN_WARNING \"SDD:Cannot Register ports at %04x \\n \" , SDD_BASE ); unregister_chrdev ( Major , \"sdd\" ); return - EIO ; } request_region ( SDD_MAJOR , SDD_REGSIZE , \"sdd\" ); if ( request_irq ( SDD_IRQ , sdd_irq_handler , SA_INTERRUPT , \"sdd\" , NULL )){ printk ( KERN_WARNING \"SDD:Cannot Register IRQ %d\" , SDD_IRQ ); release_region ( SDD_BASE , SDD_REGSIZE ); unregister_chrdev ( Major , \"sdd\" ); return - EIO ; } sdd_trace = 0 ; read_busy = 0 ; write_busy = 0 ; printk ( KERN_INFO \" \\n SDD:Register \\n \" ); return 0 ; } void cleanup_module ( void ) { free_irq ( SDD_IRQ , NULL ); release_region ( SDD_BASE , SDD_REGSIZE ); int ret = unregister_chrdev ( Major , DEVICE_NAME ); if ( ret < 0 ){ printk ( \"Error in unregister_chrdev: %d \\n \" , ret ); } else { printk ( KERN_INFO \"SDD:unRegistered \\n \" ); } } static int sdd_open ( struct inode * inode , struct file * file ){ TRACE_TXT ( \"sdd_open\" ); switch ( MINOR ( inode -> i_rdev )){ case SDD_WRITE : if ( write_busy ) return - EBUSY ; write_busy = 1 ; break ; case SDD_READ : if ( read_busy ) return - EBUSY ; read_busy = 1 ; break ; default : return - ENXIO ; } MOD_INC_USE_COUNT ; return 0 ; } static int sdd_release ( struct inode * inode , struct file * file ){ TRACE_TXT ( \"RELEASE\" ); switch ( MINOR ( inode -> i_rdev )){ case SDD_WRITE : write_busy = 0 ; break ; case SDD_READ : read_busy = 0 ; break ; default : return - ENXIO ; } MOD_DEC_USE_COUNT ; return 0 ; } static int sdd_read ( struct file * file , const char * buf , size_t count , loff_t * ppos ){ TRACE_TXT ( \"sdd:read\" ); if ( MINOR ( file -> f_dentry -> d_inode -> i_rdev ) != SDD_READ ){ return - EINVAL ; } printk ( \"<1>%d \\n \" , count ); for ( i = 0 ; i < count ; i ++ ){ if ( put_user ( inb_p ( SDD_IN ), buf + i )){ return - EFAULT ; } TRACE_CHR ( 'r' ); } TRACE_CHR ( '\\n' ); return i ; } /* Called when a process writes to dev file: echo \"hi\" > /dev/hello */ static int sdd_write ( struct file * file , const char * buf , size_t count , loff_t * ppos ) { TRACE_TXT ( \"sdd:write\" ); if ( MINOR ( file -> f_dentry -> d_inode -> i_rdev ) != SDD_WRITE ) return - EINVAL ; for ( i = 0 ; i < count ; i ++ ){ if ( get_user ( b , buf + i )){ return - EFAULT ; } else { outb_p ( b , SDD_OUT ); for ( myint = 1 ; myint <= 1000 ; myint ++ ){ udelay ( 1000 ); } } TRACE_CHR ( 'w' ); } TRACE_CHR ( '\\n' ); return i ; } static int sdd_ioctl ( struct inode * inode , struct file * file , unsigned int cmd , unsigned long arg ){ TRACE_TXT ( \"sdd:ioctl\" ); switch ( cmd ){ case SDD_TRON : sdd_trace = 1 ; return 0 ; case SDD_TROFF : sdd_trace = 0 ; return 0 ; default : return - EINVAL ; } } static void sdd_irq_handler ( int irq , void * dev_id , struct pt_regs * regs ){ sdd_trace = 1 - sdd_trace ; } MODULE_LICENSE ( \"GPL\" ); MODULE_AUTHOR ( \"SDD\" ); MODULE_DESCRIPTION ( \"Smart Device Drivers\" ); MODULE_SUPPORTED_DEVICE ( \"Smart Device Drivers\" ); Makefile , \u7de8\u8b6f\u6210 obj \u6a94,\u4f7f\u4e4b\u53ef\u8f09\u5165\u7cfb\u7d71\u6838\u5fc3. WARN := -W -Wall -Wstrict-prototypes -Wmissing-prototypes INCLUDE := -isystem /lib/modules/`uname -r`/build/include CFLAGS := -O2 -DMODULE -D__KERNEL__ ${WARN} ${INCLUDE} CC := gcc-3.2 OBJS := ${patsubst %.c, %.o, ${wildcard *.c}} all: ${OBJS} .PHONY: clean clean: rm -rf *.o User Space Utility, for inputting value to Kernel Space . sub echoString { $mainArea -> delete ( \"1.0\" , \"end\" ); unless ( $echoString eq \"\" ){ $status -> configure ( - text => \"echo String \" . $echoString . \" to SDD.\" ); $command = \"echo -n \\\"\" . $echoString . \"\\\" > /dev/sddw\" ; system ( $command ); $mainArea -> insert ( 'end' , \"Finish Downloaded ASCII Code \" . $echoString . \" by shell command(echo) \" . \" ..\" ); $status -> configure ( - text => \"download ok\" ); $echoString = \"\" ; } else { $status -> configure ( - text => \"Empty !! Please make sure again!!\" ); } } # --------------------------------------------------------------------------- # \u4e0b\u8f09\u8cc7\u6599\u5230\u88dd\u7f6e ( \u7d93\u7531 Perl Script open/Close Function\u4e0b\u8f09 ): # \u540c\u4e0a\u8ff0 STEP 1 \u81f3 STEP 7 # \u8f38\u5165\u6b32\u50b3\u8f38\u7684 ASCII Code \u8f38\u5165 Entry \u6309\u4e0b \u300e SUMIT to SDD by open a Device \u300f # \u88dd\u7f6e\u4e0a\u7684 LED \u6703\u5c07 \u9001\u5230\u88dd\u7f6e\u4e0a\u7684 ASCII Code \u4f9d\u5e8f \u986f\u793a\u5728 LED \u4e0a # \u4f7f\u7528shell command (echo) \u8f38\u51fa\u7a0b\u5f0f\u78bc\u8aaa\u660e Perl code # \u7d05\u8272\u90e8\u5206\u5373\u662f\u7528 Perl\u958b\u555f(open)\u8207 \u95dc\u9589(close)\u88dd\u7f6e\u7684Script # --------------------------------------------------------------------------- sub writeDevice { $mainArea -> delete ( \"1.0\" , \"end\" ); unless ( $echoString eq \"\" ){ $devicepath = \"> \\/dev\\/sddw\" ; @_ = split ( // , $echoString ); $mainArea -> insert ( 'end' , \"Downloading ASCII Code \" . $echoString . \" now\\n\" ); $status -> configure ( - text => \"sending\" . $_ . \" now \" ); foreach $_ ( @_ ) { open ( FILE , $devicepath ); print \"download ASCII code --> \" . $_ . \" now \\n\" ; print FILE $_ ; close ( FILE ); } $mainArea -> insert ( 'end' , \"Finish Downloaded by ASCII Code \" . $echoString . \" PERL Script open\\/close Function..\" ); $status -> configure ( - text => \"Writing to SDD ok\" ); $echoString = \"\" ; } else { $status -> configure ( - text => \"Empty !! Please make sure again!!\" ); } } Loading module The Steps \u52d5\u614b\u8f09\u5165\u6a21\u7d44 \u627e\u51fa \u88dd\u7f6e\u4e3b\u8981\u4ee3\u78bc \u4e0d\u7ba1\u88dd\u7f6e\u5b58\u4e0d\u5b58\u5728\u5b89\u5168\u8d77\u898b\u5148\u79fb\u9664\u88dd\u7f6e \u5efa\u7acb\u7bc0\u9ede ( \u6b21\u8981 \u7bc0\u9ede Minor Number ) \u88fd\u4f5c\u6a94\u6848\u9023\u7d50 6.\u5217\u51fa\u8a72\u88dd\u7f6e\u8cc7\u8a0a Shell Script #!/bin/sh module=\"sdd\" device=\"sdd\" mode=\"666\" ########################################## # Step <1> \u52d5\u614b\u8f09\u5165\u6a21\u7d44 ########################################## /sbin/insmod ${module}.o || exit 1 ########################################### # Step <2> Finding Device drivers's major Number # \u627e\u51fa\u88dd\u7f6e\u7684\u4e3b\u8981\u4ee3\u78bc ########################################### major=`cat /proc/devices | grep sdd | awk '{ print $1 }'` ##################################################### # Step <3> Remove Old SDD Device drivers If it's exist ... # \u4e0d\u7ba1\u88dd\u7f6e\u5b58\u4e0d\u5b58\u5728 \u5b89\u5168\u8d77\u898b \u5148\u79fb\u9664\u88dd\u7f6e ##################################################### rm -f /dev/${device}0 rm -f /dev/${device}1 rm -f /dev/${device}r rm -f /dev/${device}w ##################################################### # Step <4> \u5efa\u7acb \u7bc0\u9ede ( \u6b21\u8981 \u7bc0\u9ede Minor Number ) ##################################################### mknod --m=${mode} /dev/${device}0 c ${major} 0 mknod --m=${mode} /dev/${device}1 c ${major} 1 ########################################## # Step <5> \u5236\u4f5c \u6377\u5f91 ########################################## ln -sf sdd0 /dev/${device}w ln -sf sdd1 /dev/${device}r ########################################## # Step <6> \u5217 \u51fa \u5efa \u7acb \u597d \u7684 \u88dd \u7f6e ########################################## ls -l /dev | grep sdd Module Unloading sdd_unload The Steps \u5982\u679c\u4e0d\u518d\u4f7f\u7528\u79fb\u9664\u8a72\u6a21\u7d44 \u79fb\u9664\u6a94\u6848\u9023\u7d50 \u81ea\u7cfb\u7d71\u4e2d\u79fb\u9664\u6a21\u7d44 Shell Script #!/bin/sh module=\"sdd\" device=\"sdd\" rm -f /dev/${device}0 rm -f /dev/${device}1 rm -f /dev/${device}r rm -f /dev/${device}w Running Input $ sudo echo -n \"12345\" > /dev/sddw Output # sudo cat /dev/sddr Running automatically, user can add the script to /etc/rc.d/rc.local Utility User Space Utility (sddHelper.pl), use Perl/TK to create the WebUI for helping users to insert , remove module and so on. GUI Coding #!/usr/bin/perl -w use Tk ; # Create main window. my $main = new MainWindow ; $main -> title ( \"SDD HELPER\" ); # A menu bar is really a Frame. $menubar = $main -> Frame ( - relief => \"raised\" , - borderwidth => 2 ); # Menubuttons appear on the menu bar. $filebutton = $menubar -> Menubutton ( - text => \"Module\" , - underline => 0 , - menuitems => [[ 'command' => \"make SDD\" , - command => \\& make_choice ], [ 'command' => \"Load SDD\" , - command => \\& loadSDD_choice ], [ 'command' => \"unload SDD\" , - command => \\& unloadSDD_choice ], \"-\" , [ 'command' => \"lsmod\" , - command => \\& lsmod_choice ], [ 'command' => \"Exit\" , - command =>\\& exit_choice ]]); $filebutton -> pack ( - side => \"left\" ); # Resource menu. $resousebutton = $menubar -> Menubutton ( - text => \"Resouse\" , - underline => 0 , - menuitems => [[ 'command' => \"I/O...\" , - command => \\& ioResouse ], [ 'command' => \"Modules(lsmod)\" , - command => \\& modulesResouse ], [ 'command' => \"Ksyms\" , - command => \\& KsymsResouse ], [ 'command' => \"Devices\" , - command => \\& DevicesResouse ], [ 'command' => \"IRQ\" , - command => \\& IrqResouse ], \"-\" , [ 'command' => \"Loglevel String\" , - command => \\& logLevelResouse ], [ 'command' => \".....\" , - command => \\& modulesResouse ]]); $resousebutton -> pack ( - side => \"left\" ); # Command menu. $commandbutton = $menubar -> Menubutton ( - text => \"Command\" , - underline => 0 , - menuitems => [[ 'command' => \"ps\" , - command => \\& psCommand ], [ 'command' => \"dmesg\" , - command => \\& dmesgCommand ], [ 'command' => \"ls -l /dev\" , - command => \\& lsDevCommand ], [ 'command' => \"--\" , - command => \\& DevicesResouse ], [ 'command' => \".....\" , - command => \\& modulesResouse ]]); $commandbutton -> pack ( - side => \"left\" ); # Help menu. $helpbutton = $menubar -> Menubutton ( - text => \"Help\" , - underline => 0 , - menuitems => [[ 'command' => \"About...\" , - command => \\& about_choice ]]); # Help menu should appear on the right. $helpbutton -> pack ( - side => \"right\" ); $menubar -> pack ( - side => \"top\" , - fill => \"x\" ); $echoString = \"\" ; # ........................................ $main -> Label ( - text => \"send String By Echo command Shell / Open Print Port:\" ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); $main -> Entry ( - textvariable => \\ $echoString ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); # ........................................ $main -> Button ( - text => \"SUMIT to SDD by SHELL (Echo) command\" , - relief => 'ridge' , - command => \\& echoString ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); $main -> Button ( - text => \"SUMIT to SDD by OPEN a Device\" , - relief => 'ridge' , - command => \\& writeDevice ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); $main -> Button ( - text => \"read the Data From SDD Device\" , - relief => 'ridge' , - command => \\& readDevice ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); # Create a label widget for the main area. $mainArea = $main -> Scrolled ( qw/Text -setgrid true -width 100 -height 10 -scrollbars e -wrap word/ ); $mainArea -> pack ( qw/-expand yes -fill both -side top/ ); $main -> Button ( - text => \"makeing SDD \" , - relief => 'ridge' , - command => \\& make_choice ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); $main -> Button ( - text => \"Loading SDD \" , - relief => 'ridge' , - command => \\& loadSDD_choice ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); $main -> Button ( - text => \"Remove SDD \" , - relief => 'ridge' , - command => \\& unloadSDD_choice ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); $main -> Button ( - text => \"Who am I\" , - relief => 'ridge' , - command => \\& whoAmI_choise ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); # Create a status area. $status = $main -> Label ( - text => \"Status area\" , - borderwidth => 2 , - anchor => \"w\" ); $status -> pack ( - side => \"top\" , - fill => \"x\" ); # Let Perl/Tk handle window events. MainLoop ; sub echoString { $mainArea -> delete ( \"1.0\" , \"end\" ); unless ( $echoString eq \"\" ){ $status -> configure ( - text => \"echo String \" . $echoString . \" to SDD.\" ); $command = \"echo -n \\\"\" . $echoString . \"\\\" > /dev/sddw\" ; system ( $command ); $mainArea -> insert ( 'end' , \"Finish Downloaded ASCII Code \" . $echoString . \" by shell command(echo) \" . \" ..\" ); $status -> configure ( - text => \"download ok\" ); $echoString = \"\" ; } else { $status -> configure ( - text => \"Empty !! Please make sure again!!\" ); } } # Todo \u8981\u6709\u88dd\u7f6e lock \u529f\u80fd sub writeDevice { $mainArea -> delete ( \"1.0\" , \"end\" ); unless ( $echoString eq \"\" ){ $devicepath = \"> \\/dev\\/sddw\" ; @_ = split ( // , $echoString ); $mainArea -> insert ( 'end' , \"Downloading ASCII Code \" . $echoString . \" now\\n\" ); $status -> configure ( - text => \"sending\" . $_ . \" now \" ); foreach $_ ( @_ ) { open ( FILE , $devicepath ); print \"download ASCII code --> \" . $_ . \" now \\n\" ; print FILE $_ ; close ( FILE ); } $mainArea -> insert ( 'end' , \"Finish Downloaded by ASCII Code \" . $echoString . \" PERL Script open\\/close Function..\" ); $status -> configure ( - text => \"Writing to SDD ok\" ); $echoString = \"\" ; } else { $status -> configure ( - text => \"Empty !! Please make sure again!!\" ); } } sub readDevice { $devicepath = \"\\/dev\\/sddr\" ; $mainArea -> delete ( \"1.0\" , \"end\" ); open ( FILE , $devicepath ); while ( <FILE> ){ print $_ . \"\\n\" ; ; # next | last | last if ($i == 1) } close ( FILE ); } sub whoAmI_choise { $mainArea -> delete ( \"1.0\" , \"end\" ); exeCommand ( \"whoami\" ); $status -> configure ( - text => \"Who are You !!\" ); } # ................................................. # Subroutine to handle button click. sub exit_choice { print \"Bye!\\n\" ; exit ; } sub lsmod_choice { exeCommand ( \"lsmod\" ); $status -> configure ( - text => \"List Module .\" ); } sub make_choice { exeCommand ( \"make\" ); $status -> configure ( - text => \"making SDD. ok\" ); } sub loadSDD_choice { exeCommand ( \"./sdd_load\" ); $status -> configure ( - text => \"Loading SDD.\" ); } sub unloadSDD_choice { exeCommand ( \"./sdd_unload\" ); $status -> configure ( - text => \"unLoad SDD.\" ); } sub about_choice { $mainArea -> delete ( \"1.0\" , \"end\" ); $mainArea -> insert ( 'end' , \"SDD Helper 1.0\" ); $status -> configure ( - text => \"About the SDD.\" ); } # ................................................. sub ioResouse { & readFile ( \"/proc/ioports\" ); $status -> configure ( - text => \"IO port List p.53 \" ); } sub modulesResouse { & readFile ( \"/proc/modules\" ); $status -> configure ( - text => \"Module Info p.51\" ); } sub KsymsResouse { & readFile ( \"/proc/ksyms\" ); $status -> configure ( - text => \"Kernel Table p.53\" ); } sub DevicesResouse { & readFile ( \"/proc/devices\" ); $status -> configure ( - text => \" Devices p.61\" ); } sub IrqResouse { & readFile ( \"/proc/interrupts\" ); $status -> configure ( - text => \" Devices p.245\" ); } sub logLevelResouse { & readFile ( \"/usr/src/linux-2.4.19-16mdk/include/linux/kernel.h\" ); $status -> configure ( - text => \" logLevel String p.95\" ); } # ................................................. sub psCommand { exeCommand ( \"ps\" ); $status -> configure ( - text => \"PS OK\" ); } sub dmesgCommand { exeCommand ( \"dmesg\" ); $status -> configure ( - text => \"Dmesg OK\" ); } sub lsDevCommand { exeCommand ( \"ls -l /dev\" ); $status -> configure ( - text => \"finding Major and Minor number(c:char node/ b:block node) p.58\" ); } # ................................................. sub exeCommand { $command = $_ [ 0 ] . \">response.txt\" ; system ( $command ); & readFile ( \"response.txt\" ); system ( \"rm -f response.txt\" ); } # ................................................. sub readFile { $mainArea -> delete ( \"1.0\" , \"end\" ); open ( FILENAME , $_ [ 0 ] ); @context = <FILENAME> ; close ( FILENAME ); foreach $i ( @context ){ $mainArea -> insert ( 'end' , $i ); } Online Edition Topology Client:Personal Computer,Brower,FTP Client,AP(off-line) Server:Apache HTTP Server,PHP Script,GD,Database,Perl Script, Bash shell Uplink (I) Uplink (II) Running \u6253\u958b\u700f\u89bd\u5668,\u9023\u63a5\u524d\u7aef\u975c\u614bForm\u7db2\u9801,\u9375\u5165\u9810\u50b3\u7d66\u88dd\u7f6e\u4e4b\u503c,\u4e4b\u5f8c\u6309\u4e0b\u63d0\u4ea4\u9001\u51fa \u5982\u679c\u8a72\u503c\u6709\u6548\u7684\u8a71,PHP Script \u958b\u555f\u88dd\u7f6e\u4e26\u9001\u51faASCII code \u5230\u8a72\u88dd\u7f6e,\u88dd\u7f6e\u6536\u5230\u8a72\u503c\u4e26\u986f\u793a\u5728LED\u4e0a,HTTP Server \u4e26\u56de\u5831\u6210\u529f \u5982\u679c\u8a72\u503c\u7121\u6548\u7684\u8a71,\u88dd\u7f6e\u4e0d\u52d5\u4f5cHTTP Server\u56de\u5831\u5931\u6557 Static Web page ( index.html ), providing this web page for user to input the value remotely. <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"> < html > < head > < title > downing ascii code to /drv/sddw </ title > </ head > < body > < h3 > downloading ASCII code to < br > Remote Server's < font color = #0000ff > /dev/sddw </ font > </ h3 > < p > < form action = \"download.php\" method = \"GET\" target = \"_parent\" > < table cellpadding = \"0\" >< tr > < td > < input type = \"text\" name = downLoadString > </ td > < td >< input name = \"sumit\" type = \"submit\" > </ td > </ tr ></ table > </ form > < p > \u9019\u7db2\u9801\u6703\u5c07\u4f60\u6240\u9375\u5165\u7684 ASCII Code < br > \u9001\u5230\u9060\u7aef\u4e3b\u6a5f\u7684 /dev/sddw \u88dd\u7f6e < p > The Page is at /var/www/html ( remote machine ) < br > Edited by BuleFish </ body > </ html > Dynamic Web Pages ( download.php ), opening the device and feed the value to device driver via PHP code. <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"> <html> <head> <title>Download ASCII code to /drv/sddw</title> </head> <body> <? echo \"<h3> Download ASCII code \\\" <font color=#ff0000>\" . $downLoadString . \"</font> \\\" <br> to Remote Server's /dev/sddw </h3>\" ; echo \"<hr><p><p>\" ; if ( $downLoadString != \"\" ){ echo \"The ASCII Code \\\" \" . $downLoadString . \" \\\" download Ok...\" ; $fp = fopen ( \"/dev/sddw\" , \"w\" ); fwrite ( $fp , $downLoadString ); fclose ( $fp ); } else { echo \" Empty!! Please make sure again !!<p>\" ; echo \"<a href='download.html'> Try Again </a><p>\" ; } ?> <p> <p> <hr> Opening the <font color=#0000ff><b>/sdd/sddw </b></font> by <font color=#0000ff><b> PHP </b></font> script <br> fopen/fwrite function [ download.php ] <p> PS. if download speed is too slow, <br>try to mak a under downloading page </body> </html> Application Data Collection Demonstration Please click \u25b6 to play below video. Your browser does not support HTML5 video.","title":"Parallel Port Device (LPT) and Linux Device Driver"},{"location":"io/ldd/#under-construction-now","text":"","title":"Under Construction now ..."},{"location":"io/ldd/#man-machine-interfaces","text":"","title":"Man-Machine Interfaces"},{"location":"io/ldd/#parallel-port-device-and-linux-device-driver","text":"$author: Jin-Wen (Ed) Lai, s9360511[at]ntut[dot]org[dot]tw $date: May. 2003 $revised: Mar. 2018 $keywords: man, machine, interface An exercise of an implementation of Linux Device Driver.","title":"Parallel Port Device and Linux Device Driver"},{"location":"io/ldd/#content","text":"Concept Requirements Hardware Software Programming Stand-alone Edition Online Edition Application Demonstration","title":"Content"},{"location":"io/ldd/#concept","text":"\u9a45\u52d5\u96fb\u8166\u4e26\u5217\u57e0\u4e0a\u7684 LED. Super I/O Parallel Port Breadboard Sorry, your browser does not support inline SVG.","title":"Concept"},{"location":"io/ldd/#requirements","text":"","title":"Requirements"},{"location":"io/ldd/#hardware","text":"PC (w/. Parallel Port)","title":"Hardware"},{"location":"io/ldd/#software","text":"RedHat Linux Linux GCC","title":"Software"},{"location":"io/ldd/#hardware_1","text":"Schematic Breadboard","title":"Hardware"},{"location":"io/ldd/#background","text":"","title":"Background"},{"location":"io/ldd/#io-port-address-in-pc","text":"I/O\u57e0 LPT1 LPT2 Monochrome Display Adapter \u8cc7\u6599\u8f38\u51fa\u57e0 0x378 0x278 0x3BC \u72c0\u614b\u8f38\u5165\u57e0 0x379 0x279 0x3BD \u63a7\u5236\u8f38\u51fa\u57e0 0x37A 0x27A 0x3BE","title":"IO Port Address in PC"},{"location":"io/ldd/#bios","text":"\u7576BIOS\u5c0b\u627e\u5230\u5e73\u884c\u57e0\u5f8c, \u9664\u6703\u6a19\u660eLPT\u540d\u7a31\u5916, \u4e5f\u6703\u5728BIOS\u6578\u64da\u5340\uff08Data Area\uff09\u5167\u5132\u5b58BIOS\u898f\u5283\u7d66\u5e73\u884c\u57e0\u7684\u4f4d\u5740. BIOS\u6578\u64da\u5340\u662f\u4e00\u500b\u8a18\u61b6\u9ad4\u5340\u57df, \u5176\u5167\u90e8\u5132\u5b58\u8457\u8a18\u9304PC\u6240\u6709\u88dd\u7f6e\u7684\u6620\u5c04\u8868(mapping table). \u56e0\u6b64, \u82e5\u7121\u6cd5\u5229\u7528\u4f5c\u696d\u7cfb\u7d71\u7372\u5f97\u5e73\u884c\u57e0\u7684 378 \u6216 278 \u4f4d\u5740, \u90a3\u5c31\u5fc5\u9808\u900f\u904eBIOS\u7684\u6620\u5c04\u8868\u4f86\u53d6\u5f97.","title":"BIOS \u6578\u64da\u5340"},{"location":"io/ldd/#super-io","text":"\u76ee\u524d PC \u4e0a\u7684 Parallel port , \u5e7e\u4e4e\u6709\u5df2\u6574\u5408\u5230 Super IO \u88e1\u9762. \u6240\u4ee5\u6211\u5011\u53ef\u4ee5\u53c3\u8003 Super IO \u7684\u898f\u683c. IT8712F \u7684\u65b9\u584a\u5716 IT8712F \u8173\u4f4d\u5b9a\u7fa9\u8868\u683c ( P.100~P117 ) Pin Signal Pin Signal Pin Signal Pin Signal 1 DTR2# 33 SCRIO/GP12 65 DSKCHG# 97 VIN1 2 RTS2# 34 SCRCLK/GP11 66 IRTX/GP47 98 VIN0 3 DSR2# 35 VCC 67 VCCH 99 VCC 4 VCC 36 LPCPD# 68 COPEN# 100 SLCT 5 SOUT2 37 LRESET# 69 VBAT 101 PE 6 SIN2 38 LDRQ# 70 IRRX/GP46 102 BUSY 7 FAN_TAC1 39 SERIRQ 71 PSIN/GP45 103 ACK# 8 FAN_CTL1 40 LFRAME# 72 PWRON#/GP44 104 SLIN# 9 FAN_TAC2/GP52 41 LAD0 73 PME#/GP54 105 INIT# 10 FAN_CTL2/GP51 42 LAD1 74 GNDD 106 ERR# 11 FAN_TAC3/GP37 43 LAD2 75 PANSWH#/GP43 107 AFD# 12 FAN_CTL3/GP36 44 LAD3 76 PSON#/GP42 108 STB# 13 WTI#/GP35 45 KRST# 77 RING#/GP53 109 PD0 14 VID4/GP34 46 GA20 78 GP41 110 PD1 15 GNDD 47 PCICLK 79 GP40 111 PD2 16 VID3/GP33 48 CLKRUN#/GP50 80 KDAT 112 PD3 17 VID2/GP32 49 CLKIN 81 KCLK 113 PD4 18 VID1/GP31 50 GNDD 82 MDAT 114 PD5 19 VID0/GP30 51 DENSEL# 83 MCLK 115 PD6 20 JSBB2/GP27 52 MTRA# 84 SCRPRES#/GP10 116 PD7 21 JSBB1/GP26 53 MTRB# 85 CIRRX/COPENO#/GP55 117 GNDD 22 JSBCY/GP25 54 DRVA# 86 GNDA 118 DCD1# 23 JSBCX/GP24 55 DRVB# 87 TMPIN3 119 RI1# 24 JSAB2/GP23 56 WDATA# 88 TMPIN2 120 CTS1# 25 JSAB1/GP22 57 DIR# 89 TMPIN1 121 DTR1#/JP1 26 JSACY/GP21 58 STEP# 90 VREF 122 RTS1#/JP2 27 JSACX/GP20 59 HDSEL# 91 VIN7 123 DSR1# 28 MIDI_OUT/GP17 60 WGATE# 92 VIN6 124 SOUT1/JP3 29 MIDI_IN/GP16 61 RDATA# 93 VIN5 125 SIN1 30 CIRTX/GP15 62 TRK0# 94 VIN4 126 DCD2# 31 SCRRST/GP14 63 INDEX# 95 VIN3 127 RI2# 32 SCRPFET#/GP13 64 WPT# 96 VIN2 128 CTS2# IT8712F \u4e26\u5217\u57e0\u8173\u4f4d\u5b9a\u7fa9\u63cf\u8ff0 Pin(s) No. Symbol I/O Power Description 100 SLCT DI VCC Printer Select. This signal goes high when the line printer has been selected. 101 PE DI VCC Printer Paper End. This signal is set high by the printer when it runs out of paper. 102 BUSY DI VCC Printer Busy. This signal goes high when the line printer has a local operation in progress and cannot accept data. 103 ACK# DI VCC Printer Acknowledge #. This signal goes low to indicate that the printer has already received a character and is ready to accept another. 104 SLIN# DIO24 VCC Printer Select Input #. When low, the printer is selected. This signal is derived from the complement of bit 3 of the printer control register. 105 INIT# DIO24 VCC Printer Initialize #, active low. This signal is derived from bit 2 of the printer control register, and is used to initialize the printer. 106 ERR# DI VCC Printer Error #. When low, it indicates that the printer has encountered an error. The error message can be read from bit 3 of the printer status register. 107 AFD# DIO24 VCC Printer Auto Line Feed #, active low. This signal is derived from the complement of bit 1 of the printer control register, and is used to advance one line after each line is printed. 108 STB# DIO24 VCC Printer Strobe #, active low. This signal is the complement of bit 0 of the printer control register, and is used to strobe the printing data into the printer. 109 - 116 PD[0:7] DIO24 VCC Parallel Port Data Bus. This bus provides a byte-wide input or output to the system. The eight lines are held in a high impedance state when the port is deselected. IT8712F IC\u8173\u4f4d\u5b9a\u7fa9 IT8712F \u4e26\u5217\u57e0\u7dda\u8def IT8712F BIOS Initialize function Borrowed from Specifications \u4e3b\u7a0b\u5f0f(Main): Main: CALL Enter_Configuration_mode CALL Ch eck_Chip ;Don't need in BIOS POST code JNC Initial_OK ;Don't need in BIOS POST code CALL Earlyio_Program CALL Initialize_All_Device CALL Before_Boot CALL Exit_Configuration_mode CALL Reset_System ;Don't need in BIOS POST code Initial_OK: CALL Exit_Configuration_mode ;Don't need in BIOS POST code MOV AH , 4Ch INT 21h \u9a45\u52d5\u9031\u908a\u88dd\u7f6e: Initialize_All_Device PROC NEAR APC_PME_Status: KBC_Keyboard_Status: KBC_Mouse_Status: MIDI_Status: Game_Status: CIR_Status: FDC_Status: FDC_Function: Register: Serial1_Status: Serial2_Status: Serial2_Function: ConfigurationRegister2: \u95dc\u65bc\u5370\u8868\u6a5f\u57e0\u7684\u521d\u503c\u8a2d\u5b9a\u7a0b\u5f0f\u7247\u6bb5: Parallel_Status: MOV BH , 03h ;LDN=03h -> Parallel port MOV BL , BYTE PTR CS :[ Parallel ] ;Enable/Disable Parallel port CALL Set_Device_Status MOV BX , WORD PTR CS :[ Parallel + 01h ] ;Set Parallel portbaseaddress CALL Set_Device_Port MOV BL , BYTE PTR CS :[ Parallel + 03h ] ;Set Parallel port IRQ CALL Set_Device_IRQ Parallel_Function: MOV AL , 0F0h ;(Index 0F0h) MOV AH , BYTE PTR CS :[ P_Mode ] ;Parallel Port Special ConfigurationRegister: CALL Write_Configuration_Data ;P_Mode->SPP, EPP, ECP... MOV AH , BYTE PTR CS :[ P_Mode ] AND AH , 02h JZ No_Set_DMA MOV AL , 074h MOV AH , BYTE PTR CS :[ P_DMA ] ;Set Parallel DMA channel CALL Write_Configuration_Data ;P_DMA->DMA channel No_Set_DMA: RET Initialize_All_Device ENDP \u5370\u8868\u6a5f\u53c3\u6578\u9810\u8a2d\u503c: ;------------------------------------------------------------------------------- Parallel DB 01h ;00h->Disable, 01h->Enable DW 378h ;3BCh->LPT0, 378h->LPT1, 278h->LPT2 DB 07h ;07h->IRQ7, 05h->IRQ5 P_Mode DB 03h ;00h->SPP, 01h->EPP, 02h->ECP, 03h->EPP&ECP P_DMA DB 03h ;01h->DMA1, 03h->DMA3 ;-------------------------------------------------------------------------------","title":"Super IO"},{"location":"io/ldd/#programming","text":"","title":"Programming"},{"location":"io/ldd/#stand-alone-edition","text":"","title":"Stand-alone Edition"},{"location":"io/ldd/#module-code","text":"Kernel Space Device Driver coding ( ldd.c ) /****************************************************************************** Linux Device drivers Compiler: $ sudo make Enable: $ sudo sdd_load #<= loading it on your kernel Disable: $ sudo sdd_unload #<= remove it on you kernel Usage: $ sudo echo -n \"12345\" > /dev/sddw Files: 1. Makefile 2. sdd_load 3. sdd_unload ******************************************************************************/ #if defined(CONFIG_MODVERSIONS) && ! defined(MODVERSIONS) #include <linux/modversions.h> #define MODVERSIONS #endif #include <linux/kernel.h> #include <linux/module.h> #include <linux/fs.h> #include <asm/uaccess.h> // for put_user, #include <linux/ioport.h> // for check_region... #include <linux/sched.h> // for request_irq ... #include <linux/errno.h> // for -EIO... #include <asm/io.h> // for inb_p outb_p #include <linux/delay.h> // for u_delay /* Sub Proc */ int init_module ( void ); void cleanup_module ( void ); static int sdd_open ( struct inode * , struct file * ); static int sdd_release ( struct inode * , struct file * ); static int sdd_ioctl ( struct inode * , struct file * , unsigned int , unsigned long ); static int sdd_read ( struct file * , const char * , size_t , loff_t * ); static int sdd_write ( struct file * , const char * , size_t , loff_t * ); static void sdd_irq_handler ( int , void * , struct pt_regs * ); #define DEVICE_NAME \"sdd\" // major device number #define SDD_MAJOR 0 // SDD_MAJOR = 0 \u8868\u793a\u7531\u7cfb\u7d71\u52d5\u614b\u914d\u7f6e // minor device number #define SDD_WRITE 0 #define SDD_READ 1 // ioctl commands #define SDD_TRON _IO('M',0x01) #define SDD_TROFF _IO('M',0x02) // I/O ports used by the device #define SDD_BASE 0x378 // base port (the First Printer port ) #define SDD_REGSIZE 3 // size of I/O port regin #define SDD_OUT (SDD_BASE + 0) #define SDD_IN (SDD_BASE + 2) // interrupt line used by the device #define SDD_IRQ 0x7 #define TRACE_CHR(chr) \\ if (sdd_trace) printk(\"%c\",(chr)); #define TRACE_TXT(txt) \\ if (sdd_trace) printk(KERN_INFO\"%s\\n\",(txt)); static int sdd_trace ; static int read_busy ; static int write_busy ; static int Major ; // Major Device Number static int myint ; // for delay loop MODULE_PARM ( myint , \"i\" ); // i: integer static int i ; MODULE_PARM ( i , \"i\" ); static char b ; // b: single byte MODULE_PARM ( b , \"b\" ); static struct file_operations fops = { . read = sdd_read , . write = sdd_write , . ioctl = sdd_ioctl , . open = sdd_open , . release = sdd_release }; // .............................. Functions ................................. int init_module ( void ) { Major = register_chrdev ( SDD_MAJOR , DEVICE_NAME , & fops ); if ( Major < 0 ) { printk ( KERN_WARNING \"SDD:Registering the character device failed with %d \\n \" , Major ); return Major ; return - EIO ; } if ( check_region ( SDD_BASE , SDD_REGSIZE )) { printk ( KERN_WARNING \"SDD:Cannot Register ports at %04x \\n \" , SDD_BASE ); unregister_chrdev ( Major , \"sdd\" ); return - EIO ; } request_region ( SDD_MAJOR , SDD_REGSIZE , \"sdd\" ); if ( request_irq ( SDD_IRQ , sdd_irq_handler , SA_INTERRUPT , \"sdd\" , NULL )){ printk ( KERN_WARNING \"SDD:Cannot Register IRQ %d\" , SDD_IRQ ); release_region ( SDD_BASE , SDD_REGSIZE ); unregister_chrdev ( Major , \"sdd\" ); return - EIO ; } sdd_trace = 0 ; read_busy = 0 ; write_busy = 0 ; printk ( KERN_INFO \" \\n SDD:Register \\n \" ); return 0 ; } void cleanup_module ( void ) { free_irq ( SDD_IRQ , NULL ); release_region ( SDD_BASE , SDD_REGSIZE ); int ret = unregister_chrdev ( Major , DEVICE_NAME ); if ( ret < 0 ){ printk ( \"Error in unregister_chrdev: %d \\n \" , ret ); } else { printk ( KERN_INFO \"SDD:unRegistered \\n \" ); } } static int sdd_open ( struct inode * inode , struct file * file ){ TRACE_TXT ( \"sdd_open\" ); switch ( MINOR ( inode -> i_rdev )){ case SDD_WRITE : if ( write_busy ) return - EBUSY ; write_busy = 1 ; break ; case SDD_READ : if ( read_busy ) return - EBUSY ; read_busy = 1 ; break ; default : return - ENXIO ; } MOD_INC_USE_COUNT ; return 0 ; } static int sdd_release ( struct inode * inode , struct file * file ){ TRACE_TXT ( \"RELEASE\" ); switch ( MINOR ( inode -> i_rdev )){ case SDD_WRITE : write_busy = 0 ; break ; case SDD_READ : read_busy = 0 ; break ; default : return - ENXIO ; } MOD_DEC_USE_COUNT ; return 0 ; } static int sdd_read ( struct file * file , const char * buf , size_t count , loff_t * ppos ){ TRACE_TXT ( \"sdd:read\" ); if ( MINOR ( file -> f_dentry -> d_inode -> i_rdev ) != SDD_READ ){ return - EINVAL ; } printk ( \"<1>%d \\n \" , count ); for ( i = 0 ; i < count ; i ++ ){ if ( put_user ( inb_p ( SDD_IN ), buf + i )){ return - EFAULT ; } TRACE_CHR ( 'r' ); } TRACE_CHR ( '\\n' ); return i ; } /* Called when a process writes to dev file: echo \"hi\" > /dev/hello */ static int sdd_write ( struct file * file , const char * buf , size_t count , loff_t * ppos ) { TRACE_TXT ( \"sdd:write\" ); if ( MINOR ( file -> f_dentry -> d_inode -> i_rdev ) != SDD_WRITE ) return - EINVAL ; for ( i = 0 ; i < count ; i ++ ){ if ( get_user ( b , buf + i )){ return - EFAULT ; } else { outb_p ( b , SDD_OUT ); for ( myint = 1 ; myint <= 1000 ; myint ++ ){ udelay ( 1000 ); } } TRACE_CHR ( 'w' ); } TRACE_CHR ( '\\n' ); return i ; } static int sdd_ioctl ( struct inode * inode , struct file * file , unsigned int cmd , unsigned long arg ){ TRACE_TXT ( \"sdd:ioctl\" ); switch ( cmd ){ case SDD_TRON : sdd_trace = 1 ; return 0 ; case SDD_TROFF : sdd_trace = 0 ; return 0 ; default : return - EINVAL ; } } static void sdd_irq_handler ( int irq , void * dev_id , struct pt_regs * regs ){ sdd_trace = 1 - sdd_trace ; } MODULE_LICENSE ( \"GPL\" ); MODULE_AUTHOR ( \"SDD\" ); MODULE_DESCRIPTION ( \"Smart Device Drivers\" ); MODULE_SUPPORTED_DEVICE ( \"Smart Device Drivers\" ); Makefile , \u7de8\u8b6f\u6210 obj \u6a94,\u4f7f\u4e4b\u53ef\u8f09\u5165\u7cfb\u7d71\u6838\u5fc3. WARN := -W -Wall -Wstrict-prototypes -Wmissing-prototypes INCLUDE := -isystem /lib/modules/`uname -r`/build/include CFLAGS := -O2 -DMODULE -D__KERNEL__ ${WARN} ${INCLUDE} CC := gcc-3.2 OBJS := ${patsubst %.c, %.o, ${wildcard *.c}} all: ${OBJS} .PHONY: clean clean: rm -rf *.o","title":"Module Code"},{"location":"io/ldd/#user-space-utility-for-inputting-value-to-kernel-space","text":"sub echoString { $mainArea -> delete ( \"1.0\" , \"end\" ); unless ( $echoString eq \"\" ){ $status -> configure ( - text => \"echo String \" . $echoString . \" to SDD.\" ); $command = \"echo -n \\\"\" . $echoString . \"\\\" > /dev/sddw\" ; system ( $command ); $mainArea -> insert ( 'end' , \"Finish Downloaded ASCII Code \" . $echoString . \" by shell command(echo) \" . \" ..\" ); $status -> configure ( - text => \"download ok\" ); $echoString = \"\" ; } else { $status -> configure ( - text => \"Empty !! Please make sure again!!\" ); } } # --------------------------------------------------------------------------- # \u4e0b\u8f09\u8cc7\u6599\u5230\u88dd\u7f6e ( \u7d93\u7531 Perl Script open/Close Function\u4e0b\u8f09 ): # \u540c\u4e0a\u8ff0 STEP 1 \u81f3 STEP 7 # \u8f38\u5165\u6b32\u50b3\u8f38\u7684 ASCII Code \u8f38\u5165 Entry \u6309\u4e0b \u300e SUMIT to SDD by open a Device \u300f # \u88dd\u7f6e\u4e0a\u7684 LED \u6703\u5c07 \u9001\u5230\u88dd\u7f6e\u4e0a\u7684 ASCII Code \u4f9d\u5e8f \u986f\u793a\u5728 LED \u4e0a # \u4f7f\u7528shell command (echo) \u8f38\u51fa\u7a0b\u5f0f\u78bc\u8aaa\u660e Perl code # \u7d05\u8272\u90e8\u5206\u5373\u662f\u7528 Perl\u958b\u555f(open)\u8207 \u95dc\u9589(close)\u88dd\u7f6e\u7684Script # --------------------------------------------------------------------------- sub writeDevice { $mainArea -> delete ( \"1.0\" , \"end\" ); unless ( $echoString eq \"\" ){ $devicepath = \"> \\/dev\\/sddw\" ; @_ = split ( // , $echoString ); $mainArea -> insert ( 'end' , \"Downloading ASCII Code \" . $echoString . \" now\\n\" ); $status -> configure ( - text => \"sending\" . $_ . \" now \" ); foreach $_ ( @_ ) { open ( FILE , $devicepath ); print \"download ASCII code --> \" . $_ . \" now \\n\" ; print FILE $_ ; close ( FILE ); } $mainArea -> insert ( 'end' , \"Finish Downloaded by ASCII Code \" . $echoString . \" PERL Script open\\/close Function..\" ); $status -> configure ( - text => \"Writing to SDD ok\" ); $echoString = \"\" ; } else { $status -> configure ( - text => \"Empty !! Please make sure again!!\" ); } }","title":"User Space Utility, for inputting value to Kernel Space."},{"location":"io/ldd/#loading-module","text":"The Steps \u52d5\u614b\u8f09\u5165\u6a21\u7d44 \u627e\u51fa \u88dd\u7f6e\u4e3b\u8981\u4ee3\u78bc \u4e0d\u7ba1\u88dd\u7f6e\u5b58\u4e0d\u5b58\u5728\u5b89\u5168\u8d77\u898b\u5148\u79fb\u9664\u88dd\u7f6e \u5efa\u7acb\u7bc0\u9ede ( \u6b21\u8981 \u7bc0\u9ede Minor Number ) \u88fd\u4f5c\u6a94\u6848\u9023\u7d50 6.\u5217\u51fa\u8a72\u88dd\u7f6e\u8cc7\u8a0a Shell Script #!/bin/sh module=\"sdd\" device=\"sdd\" mode=\"666\" ########################################## # Step <1> \u52d5\u614b\u8f09\u5165\u6a21\u7d44 ########################################## /sbin/insmod ${module}.o || exit 1 ########################################### # Step <2> Finding Device drivers's major Number # \u627e\u51fa\u88dd\u7f6e\u7684\u4e3b\u8981\u4ee3\u78bc ########################################### major=`cat /proc/devices | grep sdd | awk '{ print $1 }'` ##################################################### # Step <3> Remove Old SDD Device drivers If it's exist ... # \u4e0d\u7ba1\u88dd\u7f6e\u5b58\u4e0d\u5b58\u5728 \u5b89\u5168\u8d77\u898b \u5148\u79fb\u9664\u88dd\u7f6e ##################################################### rm -f /dev/${device}0 rm -f /dev/${device}1 rm -f /dev/${device}r rm -f /dev/${device}w ##################################################### # Step <4> \u5efa\u7acb \u7bc0\u9ede ( \u6b21\u8981 \u7bc0\u9ede Minor Number ) ##################################################### mknod --m=${mode} /dev/${device}0 c ${major} 0 mknod --m=${mode} /dev/${device}1 c ${major} 1 ########################################## # Step <5> \u5236\u4f5c \u6377\u5f91 ########################################## ln -sf sdd0 /dev/${device}w ln -sf sdd1 /dev/${device}r ########################################## # Step <6> \u5217 \u51fa \u5efa \u7acb \u597d \u7684 \u88dd \u7f6e ########################################## ls -l /dev | grep sdd","title":"Loading module"},{"location":"io/ldd/#module-unloading-sdd_unload","text":"The Steps \u5982\u679c\u4e0d\u518d\u4f7f\u7528\u79fb\u9664\u8a72\u6a21\u7d44 \u79fb\u9664\u6a94\u6848\u9023\u7d50 \u81ea\u7cfb\u7d71\u4e2d\u79fb\u9664\u6a21\u7d44 Shell Script #!/bin/sh module=\"sdd\" device=\"sdd\" rm -f /dev/${device}0 rm -f /dev/${device}1 rm -f /dev/${device}r rm -f /dev/${device}w","title":"Module Unloading sdd_unload"},{"location":"io/ldd/#running","text":"Input $ sudo echo -n \"12345\" > /dev/sddw Output # sudo cat /dev/sddr Running automatically, user can add the script to /etc/rc.d/rc.local","title":"Running"},{"location":"io/ldd/#utility","text":"User Space Utility (sddHelper.pl), use Perl/TK to create the WebUI for helping users to insert , remove module and so on. GUI Coding #!/usr/bin/perl -w use Tk ; # Create main window. my $main = new MainWindow ; $main -> title ( \"SDD HELPER\" ); # A menu bar is really a Frame. $menubar = $main -> Frame ( - relief => \"raised\" , - borderwidth => 2 ); # Menubuttons appear on the menu bar. $filebutton = $menubar -> Menubutton ( - text => \"Module\" , - underline => 0 , - menuitems => [[ 'command' => \"make SDD\" , - command => \\& make_choice ], [ 'command' => \"Load SDD\" , - command => \\& loadSDD_choice ], [ 'command' => \"unload SDD\" , - command => \\& unloadSDD_choice ], \"-\" , [ 'command' => \"lsmod\" , - command => \\& lsmod_choice ], [ 'command' => \"Exit\" , - command =>\\& exit_choice ]]); $filebutton -> pack ( - side => \"left\" ); # Resource menu. $resousebutton = $menubar -> Menubutton ( - text => \"Resouse\" , - underline => 0 , - menuitems => [[ 'command' => \"I/O...\" , - command => \\& ioResouse ], [ 'command' => \"Modules(lsmod)\" , - command => \\& modulesResouse ], [ 'command' => \"Ksyms\" , - command => \\& KsymsResouse ], [ 'command' => \"Devices\" , - command => \\& DevicesResouse ], [ 'command' => \"IRQ\" , - command => \\& IrqResouse ], \"-\" , [ 'command' => \"Loglevel String\" , - command => \\& logLevelResouse ], [ 'command' => \".....\" , - command => \\& modulesResouse ]]); $resousebutton -> pack ( - side => \"left\" ); # Command menu. $commandbutton = $menubar -> Menubutton ( - text => \"Command\" , - underline => 0 , - menuitems => [[ 'command' => \"ps\" , - command => \\& psCommand ], [ 'command' => \"dmesg\" , - command => \\& dmesgCommand ], [ 'command' => \"ls -l /dev\" , - command => \\& lsDevCommand ], [ 'command' => \"--\" , - command => \\& DevicesResouse ], [ 'command' => \".....\" , - command => \\& modulesResouse ]]); $commandbutton -> pack ( - side => \"left\" ); # Help menu. $helpbutton = $menubar -> Menubutton ( - text => \"Help\" , - underline => 0 , - menuitems => [[ 'command' => \"About...\" , - command => \\& about_choice ]]); # Help menu should appear on the right. $helpbutton -> pack ( - side => \"right\" ); $menubar -> pack ( - side => \"top\" , - fill => \"x\" ); $echoString = \"\" ; # ........................................ $main -> Label ( - text => \"send String By Echo command Shell / Open Print Port:\" ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); $main -> Entry ( - textvariable => \\ $echoString ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); # ........................................ $main -> Button ( - text => \"SUMIT to SDD by SHELL (Echo) command\" , - relief => 'ridge' , - command => \\& echoString ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); $main -> Button ( - text => \"SUMIT to SDD by OPEN a Device\" , - relief => 'ridge' , - command => \\& writeDevice ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); $main -> Button ( - text => \"read the Data From SDD Device\" , - relief => 'ridge' , - command => \\& readDevice ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); # Create a label widget for the main area. $mainArea = $main -> Scrolled ( qw/Text -setgrid true -width 100 -height 10 -scrollbars e -wrap word/ ); $mainArea -> pack ( qw/-expand yes -fill both -side top/ ); $main -> Button ( - text => \"makeing SDD \" , - relief => 'ridge' , - command => \\& make_choice ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); $main -> Button ( - text => \"Loading SDD \" , - relief => 'ridge' , - command => \\& loadSDD_choice ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); $main -> Button ( - text => \"Remove SDD \" , - relief => 'ridge' , - command => \\& unloadSDD_choice ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); $main -> Button ( - text => \"Who am I\" , - relief => 'ridge' , - command => \\& whoAmI_choise ) -> pack ( - side => 'top' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); # Create a status area. $status = $main -> Label ( - text => \"Status area\" , - borderwidth => 2 , - anchor => \"w\" ); $status -> pack ( - side => \"top\" , - fill => \"x\" ); # Let Perl/Tk handle window events. MainLoop ; sub echoString { $mainArea -> delete ( \"1.0\" , \"end\" ); unless ( $echoString eq \"\" ){ $status -> configure ( - text => \"echo String \" . $echoString . \" to SDD.\" ); $command = \"echo -n \\\"\" . $echoString . \"\\\" > /dev/sddw\" ; system ( $command ); $mainArea -> insert ( 'end' , \"Finish Downloaded ASCII Code \" . $echoString . \" by shell command(echo) \" . \" ..\" ); $status -> configure ( - text => \"download ok\" ); $echoString = \"\" ; } else { $status -> configure ( - text => \"Empty !! Please make sure again!!\" ); } } # Todo \u8981\u6709\u88dd\u7f6e lock \u529f\u80fd sub writeDevice { $mainArea -> delete ( \"1.0\" , \"end\" ); unless ( $echoString eq \"\" ){ $devicepath = \"> \\/dev\\/sddw\" ; @_ = split ( // , $echoString ); $mainArea -> insert ( 'end' , \"Downloading ASCII Code \" . $echoString . \" now\\n\" ); $status -> configure ( - text => \"sending\" . $_ . \" now \" ); foreach $_ ( @_ ) { open ( FILE , $devicepath ); print \"download ASCII code --> \" . $_ . \" now \\n\" ; print FILE $_ ; close ( FILE ); } $mainArea -> insert ( 'end' , \"Finish Downloaded by ASCII Code \" . $echoString . \" PERL Script open\\/close Function..\" ); $status -> configure ( - text => \"Writing to SDD ok\" ); $echoString = \"\" ; } else { $status -> configure ( - text => \"Empty !! Please make sure again!!\" ); } } sub readDevice { $devicepath = \"\\/dev\\/sddr\" ; $mainArea -> delete ( \"1.0\" , \"end\" ); open ( FILE , $devicepath ); while ( <FILE> ){ print $_ . \"\\n\" ; ; # next | last | last if ($i == 1) } close ( FILE ); } sub whoAmI_choise { $mainArea -> delete ( \"1.0\" , \"end\" ); exeCommand ( \"whoami\" ); $status -> configure ( - text => \"Who are You !!\" ); } # ................................................. # Subroutine to handle button click. sub exit_choice { print \"Bye!\\n\" ; exit ; } sub lsmod_choice { exeCommand ( \"lsmod\" ); $status -> configure ( - text => \"List Module .\" ); } sub make_choice { exeCommand ( \"make\" ); $status -> configure ( - text => \"making SDD. ok\" ); } sub loadSDD_choice { exeCommand ( \"./sdd_load\" ); $status -> configure ( - text => \"Loading SDD.\" ); } sub unloadSDD_choice { exeCommand ( \"./sdd_unload\" ); $status -> configure ( - text => \"unLoad SDD.\" ); } sub about_choice { $mainArea -> delete ( \"1.0\" , \"end\" ); $mainArea -> insert ( 'end' , \"SDD Helper 1.0\" ); $status -> configure ( - text => \"About the SDD.\" ); } # ................................................. sub ioResouse { & readFile ( \"/proc/ioports\" ); $status -> configure ( - text => \"IO port List p.53 \" ); } sub modulesResouse { & readFile ( \"/proc/modules\" ); $status -> configure ( - text => \"Module Info p.51\" ); } sub KsymsResouse { & readFile ( \"/proc/ksyms\" ); $status -> configure ( - text => \"Kernel Table p.53\" ); } sub DevicesResouse { & readFile ( \"/proc/devices\" ); $status -> configure ( - text => \" Devices p.61\" ); } sub IrqResouse { & readFile ( \"/proc/interrupts\" ); $status -> configure ( - text => \" Devices p.245\" ); } sub logLevelResouse { & readFile ( \"/usr/src/linux-2.4.19-16mdk/include/linux/kernel.h\" ); $status -> configure ( - text => \" logLevel String p.95\" ); } # ................................................. sub psCommand { exeCommand ( \"ps\" ); $status -> configure ( - text => \"PS OK\" ); } sub dmesgCommand { exeCommand ( \"dmesg\" ); $status -> configure ( - text => \"Dmesg OK\" ); } sub lsDevCommand { exeCommand ( \"ls -l /dev\" ); $status -> configure ( - text => \"finding Major and Minor number(c:char node/ b:block node) p.58\" ); } # ................................................. sub exeCommand { $command = $_ [ 0 ] . \">response.txt\" ; system ( $command ); & readFile ( \"response.txt\" ); system ( \"rm -f response.txt\" ); } # ................................................. sub readFile { $mainArea -> delete ( \"1.0\" , \"end\" ); open ( FILENAME , $_ [ 0 ] ); @context = <FILENAME> ; close ( FILENAME ); foreach $i ( @context ){ $mainArea -> insert ( 'end' , $i ); }","title":"Utility"},{"location":"io/ldd/#online-edition","text":"Topology Client:Personal Computer,Brower,FTP Client,AP(off-line) Server:Apache HTTP Server,PHP Script,GD,Database,Perl Script, Bash shell Uplink (I) Uplink (II) Running \u6253\u958b\u700f\u89bd\u5668,\u9023\u63a5\u524d\u7aef\u975c\u614bForm\u7db2\u9801,\u9375\u5165\u9810\u50b3\u7d66\u88dd\u7f6e\u4e4b\u503c,\u4e4b\u5f8c\u6309\u4e0b\u63d0\u4ea4\u9001\u51fa \u5982\u679c\u8a72\u503c\u6709\u6548\u7684\u8a71,PHP Script \u958b\u555f\u88dd\u7f6e\u4e26\u9001\u51faASCII code \u5230\u8a72\u88dd\u7f6e,\u88dd\u7f6e\u6536\u5230\u8a72\u503c\u4e26\u986f\u793a\u5728LED\u4e0a,HTTP Server \u4e26\u56de\u5831\u6210\u529f \u5982\u679c\u8a72\u503c\u7121\u6548\u7684\u8a71,\u88dd\u7f6e\u4e0d\u52d5\u4f5cHTTP Server\u56de\u5831\u5931\u6557 Static Web page ( index.html ), providing this web page for user to input the value remotely. <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"> < html > < head > < title > downing ascii code to /drv/sddw </ title > </ head > < body > < h3 > downloading ASCII code to < br > Remote Server's < font color = #0000ff > /dev/sddw </ font > </ h3 > < p > < form action = \"download.php\" method = \"GET\" target = \"_parent\" > < table cellpadding = \"0\" >< tr > < td > < input type = \"text\" name = downLoadString > </ td > < td >< input name = \"sumit\" type = \"submit\" > </ td > </ tr ></ table > </ form > < p > \u9019\u7db2\u9801\u6703\u5c07\u4f60\u6240\u9375\u5165\u7684 ASCII Code < br > \u9001\u5230\u9060\u7aef\u4e3b\u6a5f\u7684 /dev/sddw \u88dd\u7f6e < p > The Page is at /var/www/html ( remote machine ) < br > Edited by BuleFish </ body > </ html > Dynamic Web Pages ( download.php ), opening the device and feed the value to device driver via PHP code. <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"> <html> <head> <title>Download ASCII code to /drv/sddw</title> </head> <body> <? echo \"<h3> Download ASCII code \\\" <font color=#ff0000>\" . $downLoadString . \"</font> \\\" <br> to Remote Server's /dev/sddw </h3>\" ; echo \"<hr><p><p>\" ; if ( $downLoadString != \"\" ){ echo \"The ASCII Code \\\" \" . $downLoadString . \" \\\" download Ok...\" ; $fp = fopen ( \"/dev/sddw\" , \"w\" ); fwrite ( $fp , $downLoadString ); fclose ( $fp ); } else { echo \" Empty!! Please make sure again !!<p>\" ; echo \"<a href='download.html'> Try Again </a><p>\" ; } ?> <p> <p> <hr> Opening the <font color=#0000ff><b>/sdd/sddw </b></font> by <font color=#0000ff><b> PHP </b></font> script <br> fopen/fwrite function [ download.php ] <p> PS. if download speed is too slow, <br>try to mak a under downloading page </body> </html>","title":"Online Edition"},{"location":"io/ldd/#application","text":"Data Collection","title":"Application"},{"location":"io/ldd/#demonstration","text":"Please click \u25b6 to play below video. Your browser does not support HTML5 video.","title":"Demonstration"},{"location":"io/pci/","text":"Man-Machine Interfaces Peripheral Component Interconnect (PCI) $author: Ching-Wen (Ed) Lai $date: May. 2003 $revised: Mar. 2018 $keywords: man, machine, interface, peripheral component interconnect, pci An exercise of PCI interface control by Assembly . Content Concept Requirements Hardware Software Programming Advanced Concept ISA \u7684\u7f3a\u9ede\u5c31\u662f\u53ef\u80fd\u6703\u767c\u751fI/O Port\u885d\u7a81\u7684\u554f\u984c, \u6700\u6df1\u523b\u7684\u5370\u8c61\u5c31\u662f\u5728 DOS \u6642\u4ee3, \u73a9\u904a\u6232\u6709\u6642\u5f8c\u6703\u51fa\u73fe\uff0c \u8072\u9738\u5361 \u8207\u5176\u5b83ISA\u5361\u4f4d\u5740\u885d\u7a81\uff0c\u800c\u9700\u7279\u5225\u624b\u52d5\u8abf\u6574\u8072\u9738\u5361\u6216\u5176\u5b83ISA\u5361\u7684I/O\u4f4d\u7f6e. PCI \u7684\u51fa\u73fe\uff0c\u800c\u900f\u904e\u96fb\u8166\u81ea\u52d5\u8207PCI\u5361\u6307\u5b9aPCI\u4ecb\u9762\u5361 I/O \u6216 Memory \u4f4d\u7f6e. PCI \u81ea\u52d5\u6307\u5b9a I/O \u6216 Memory \u4f4d\u7f6e, \u4e3b\u8981\u662f\u900f\u904e\u4ee5\u4e0b\u5169\u500b I/O Port\u4f86\u5f97\u5230\u52d5\u614b I/O address. I/O Port Address Name 0x0cf8 PCI CONFIG Address Port 0x0cfc PCI DATA Port \u4f46\u5728\u6b64\u6b21\u7684\u7df4\u7fd2\u70ba\u4e86\u65b9\u4fbf\u8d77\u898b, Leap PCI Target Board \u9084\u662f\u4ee5\u56fa\u5b9aIO\u70ba\u4e3b. Requirements Microsoft Windows ME Microsoft MASM (Macro Assembler) Leap PCI Card and Target Board Hardware PCI Card - Front View (Master) PCI Card - Rear View (Master) Leap PCI Target Board Software \u5b89\u88dd \u5c07 Leap PCI card \u63d2\u5165 \u96fb\u8166\u4e3b\u6a5f\u7684 PCI Solt \u5167, \u91cd\u958b\u6a5f\u5f8c OS \u6703\u63d0\u793a\u5df2\u7d93\u767c\u73fe\u4e0b\u5217\u786c\u9ad4 \u2013 PCI Early non-VGA Device . \u9078\u64c7 \u6307\u5b9a\u9a45\u52d5\u7a0b\u5f0f\u7684\u4f4d\u5740(\u9032\u968e)(S) \u5b89\u88dd\u88dd\u7f6e\u9a45\u52d5\u7a0b\u5f0f\u3002 \u9069\u7576\u7684\u9078\u64c7\u9a45\u52d5\u7a0b\u5f0f\u7684\u4f4d\u5740( \\Win32\\Driver\\Wdn ),\u4e26\u9ede\u9078\u300e\u4e0b\u4e00\u6b65\u300f\u3002 \u5b89\u88dd\u5f8c\u51fa\u73fe\u4e0a\u9762\u8996\u7a97,\u9ede\u9078 \u5b8c\u6210 ,\u5b8c\u6210\u5b89\u88dd\u9a45\u52d5\u7a0b\u5f0f\u3002 \u958b\u555f \u958b\u59cb/ \u8a2d\u5b9a/ \u63a7\u5236\u53f0/ \u7cfb\u7d71/ \u786c\u9ad4/ \u88dd\u7f6e\u7ba1\u7406\u54e1 , \u9ede\u9078 \u5176\u4ed6\u88dd\u7f6e/ Custom(OEM) PCI 9050/9052 Board \u5373\u53ef\u67e5\u770b\u8a72\u88dd\u7f6e\u5167\u5bb9\u3002 \u8f38\u5165\u8f38\u51fa\u7bc4\u570d \u6bcf\u53f0\u96fb\u8166\u4e0a\u7684\u88dd\u7f6e\u5167\u5bb9\u4e0d\u76e1\u76f8\u540c,\u6211\u96fb\u8166\u4e0a\u7684\u88dd\u7f6e\u5167\u5bb9\u6574\u7406\u5982\u4e0b \u4e2d\u65b7\u8981\u6c42 10 \u8a18\u61b6\u9ad4\u7bc4\u570d EE021000-EE02107F \u8a18\u61b6\u9ad4\u7bc4\u570d EE000000-EE01FFFF \u8f38\u5165\u8f38\u51fa\u7bc4\u570d(\u6700\u4f4e I/O) E000-E07F \u8f38\u5165\u8f38\u51fa\u7bc4\u570d(\u6b21\u4f4e I/O) E400-E403 \u8f38\u5165\u8f38\u51fa\u7bc4\u570d(\u6700\u9ad8 I/O) E800-E8FF Leap PCI \u88dd\u7f6e\u53ef\u7528\u7684 \u88dd\u7f6e I/O \u5b9a\u7fa9\u70ba Programming \u4ee5\u4e0b\u7a0b\u5f0f\u4ee5\u63a7\u5236\u4e03\u6bb5\u986f\u793a\u5668\u7684\u4e0a\u6578. \u4e03\u6bb5\u986f\u793a\u5668\u4f4d\u5740\u7dda\u4f4d\u65bc IO_Bank_1 IO-8~15, \u8cc7\u6599\u7dda\u4f4d\u65bcIO_Bank_1 IO-40~47, \u900f\u904e\u8207 Base \u7684\u52a0\u6b0a,\u5373\u53ef\u627e\u51fa\u76f8\u5c0d\u61c9\u7684\u4f4d\u5740\u3002 MODEL SMALL .386 .STACK .DATA IO_PORT0 EQU 0E811H ; io_bank_1 io-8~15 IO_PORT1 EQU 0E815H ; io_bank_1 io-40~47 OUT_DISABLED EQU 0E808H ; io_bank_0 IO_PORT0D EQU 0E800H ; io_bank_0 IO_PORT1D EQU 0E804H ; io_bank_0 .CODE BEGIN: PUSH DS MOV AX , 0 PUSH AX MOV AX , @ DATA MOV DS , AX DISP_BEGIN: MOV DX , IO_PORT1 ;\u7b2c\u4e00\u500b\u4e03\u6bb5\u78bc\u4eae MOV AX , 0005H ;0000-0005 \u4e0d\u540c\u4f4d\u5740\u8f38\u51fa OUT DX , AX CALL COUNT_7SEG CALL WAIT_1S MOV AH , 0BH ;\u6309\u4efb\u610f\u9375\u7d50\u675f\u7a0b\u5f0f INT 21H ;\u4e2d\u65b7\u5411\u91cf21h CMP AL , 0FFH JNZ DISP _BEGIN JMP EXIT ;\u7a0b\u5f0f\u7d50\u675f COUNT_7SEG: ;\u986f\u793a0~9\u6578\u5b57 MOV DX , IO_PORT0 ;\u986f\u793a O MOV AX , 003FH ;0011_1111 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 1 MOV AX , 0006H ;0000_0110 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 2 MOV AX , 005BH ;0101_1011 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 3 MOV AX , 004FH ;0100_1111 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 4 MOV AX , 0066H ;0110_0110 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 5 MOV AX , 006DH ;0110_1101 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 6 MOV AX , 007DH ;0111_1101 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 7 MOV AX , 0007H ;0000_0111 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 8 MOV AX , 007FH ;0111_1111 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 9 MOV AX , 006FH ;0110_1111 OUT DX , AX CALL WAIT_1S RET WAIT_1S: MOV BX , 0007FH WAIT_LOOP: CALL WAIT_1MS DEC BX CMP BX , 0000H JBE WAIT_1S_EXIT LOOP WAIT_LOOP WAIT_1S_EXIT: RET WAIT_1MS: MOV CX , 03FFFH WAIT_LOOP1: MOV BX , BX MOV BX , BX MOV BX , BX MOV BX , BX MOV BX , BX MOV BX , BX MOV BX , BX LOOP WAIT_LOOP1 RET EXIT: MOV DX , OUT_DISABLED ;\u6e05\u9664\u6240\u6709\u8a2d\u5b9a\u3002 MOV AX , 0000H OUT DX , AX MOV DX , IO_PORT0D MOV EAX , 00000000H OUT DX , EAX MOV DX , IO_PORT1D MOV AX , 0000H OUT DX , AX MOV AH , 4CH INT 21H END BEGIN Running \u4f7f\u7528 MASM \u7de8\u8b6f\u7a0b\u5f0f\u78bc C: \\M ASM \\M L 7SEG-1.TXT \u57f7\u884c\u4e4b\u5f8c\u7522\u6210 OBJ \u8207 EXE \u6a94, \u76f4\u63a5\u57f7\u884c C: \\M ASM \\7 SEG-1 \u5373\u53ef\u770b\u5230 7-SEG \u7fa4 \u7684\u5de6\u5074\u7b2c\u4e00\u500b\u7531 0 \u958b\u59cb\u5f80\u4e0a\u6578\u81f39, \u4e26\u4e14\u4e00\u76f4\u5faa\u74b0. Advanced PCI Host PCI Bridge","title":"Peripheral Component Interconnect (PCI)"},{"location":"io/pci/#man-machine-interfaces","text":"","title":"Man-Machine Interfaces"},{"location":"io/pci/#peripheral-component-interconnect-pci","text":"$author: Ching-Wen (Ed) Lai $date: May. 2003 $revised: Mar. 2018 $keywords: man, machine, interface, peripheral component interconnect, pci An exercise of PCI interface control by Assembly .","title":"Peripheral Component Interconnect (PCI)"},{"location":"io/pci/#content","text":"Concept Requirements Hardware Software Programming Advanced","title":"Content"},{"location":"io/pci/#concept","text":"ISA \u7684\u7f3a\u9ede\u5c31\u662f\u53ef\u80fd\u6703\u767c\u751fI/O Port\u885d\u7a81\u7684\u554f\u984c, \u6700\u6df1\u523b\u7684\u5370\u8c61\u5c31\u662f\u5728 DOS \u6642\u4ee3, \u73a9\u904a\u6232\u6709\u6642\u5f8c\u6703\u51fa\u73fe\uff0c \u8072\u9738\u5361 \u8207\u5176\u5b83ISA\u5361\u4f4d\u5740\u885d\u7a81\uff0c\u800c\u9700\u7279\u5225\u624b\u52d5\u8abf\u6574\u8072\u9738\u5361\u6216\u5176\u5b83ISA\u5361\u7684I/O\u4f4d\u7f6e. PCI \u7684\u51fa\u73fe\uff0c\u800c\u900f\u904e\u96fb\u8166\u81ea\u52d5\u8207PCI\u5361\u6307\u5b9aPCI\u4ecb\u9762\u5361 I/O \u6216 Memory \u4f4d\u7f6e. PCI \u81ea\u52d5\u6307\u5b9a I/O \u6216 Memory \u4f4d\u7f6e, \u4e3b\u8981\u662f\u900f\u904e\u4ee5\u4e0b\u5169\u500b I/O Port\u4f86\u5f97\u5230\u52d5\u614b I/O address. I/O Port Address Name 0x0cf8 PCI CONFIG Address Port 0x0cfc PCI DATA Port \u4f46\u5728\u6b64\u6b21\u7684\u7df4\u7fd2\u70ba\u4e86\u65b9\u4fbf\u8d77\u898b, Leap PCI Target Board \u9084\u662f\u4ee5\u56fa\u5b9aIO\u70ba\u4e3b.","title":"Concept"},{"location":"io/pci/#requirements","text":"Microsoft Windows ME Microsoft MASM (Macro Assembler) Leap PCI Card and Target Board","title":"Requirements"},{"location":"io/pci/#hardware","text":"PCI Card - Front View (Master) PCI Card - Rear View (Master) Leap PCI Target Board","title":"Hardware"},{"location":"io/pci/#software","text":"\u5b89\u88dd \u5c07 Leap PCI card \u63d2\u5165 \u96fb\u8166\u4e3b\u6a5f\u7684 PCI Solt \u5167, \u91cd\u958b\u6a5f\u5f8c OS \u6703\u63d0\u793a\u5df2\u7d93\u767c\u73fe\u4e0b\u5217\u786c\u9ad4 \u2013 PCI Early non-VGA Device . \u9078\u64c7 \u6307\u5b9a\u9a45\u52d5\u7a0b\u5f0f\u7684\u4f4d\u5740(\u9032\u968e)(S) \u5b89\u88dd\u88dd\u7f6e\u9a45\u52d5\u7a0b\u5f0f\u3002 \u9069\u7576\u7684\u9078\u64c7\u9a45\u52d5\u7a0b\u5f0f\u7684\u4f4d\u5740( \\Win32\\Driver\\Wdn ),\u4e26\u9ede\u9078\u300e\u4e0b\u4e00\u6b65\u300f\u3002 \u5b89\u88dd\u5f8c\u51fa\u73fe\u4e0a\u9762\u8996\u7a97,\u9ede\u9078 \u5b8c\u6210 ,\u5b8c\u6210\u5b89\u88dd\u9a45\u52d5\u7a0b\u5f0f\u3002 \u958b\u555f \u958b\u59cb/ \u8a2d\u5b9a/ \u63a7\u5236\u53f0/ \u7cfb\u7d71/ \u786c\u9ad4/ \u88dd\u7f6e\u7ba1\u7406\u54e1 , \u9ede\u9078 \u5176\u4ed6\u88dd\u7f6e/ Custom(OEM) PCI 9050/9052 Board \u5373\u53ef\u67e5\u770b\u8a72\u88dd\u7f6e\u5167\u5bb9\u3002 \u8f38\u5165\u8f38\u51fa\u7bc4\u570d \u6bcf\u53f0\u96fb\u8166\u4e0a\u7684\u88dd\u7f6e\u5167\u5bb9\u4e0d\u76e1\u76f8\u540c,\u6211\u96fb\u8166\u4e0a\u7684\u88dd\u7f6e\u5167\u5bb9\u6574\u7406\u5982\u4e0b \u4e2d\u65b7\u8981\u6c42 10 \u8a18\u61b6\u9ad4\u7bc4\u570d EE021000-EE02107F \u8a18\u61b6\u9ad4\u7bc4\u570d EE000000-EE01FFFF \u8f38\u5165\u8f38\u51fa\u7bc4\u570d(\u6700\u4f4e I/O) E000-E07F \u8f38\u5165\u8f38\u51fa\u7bc4\u570d(\u6b21\u4f4e I/O) E400-E403 \u8f38\u5165\u8f38\u51fa\u7bc4\u570d(\u6700\u9ad8 I/O) E800-E8FF Leap PCI \u88dd\u7f6e\u53ef\u7528\u7684 \u88dd\u7f6e I/O \u5b9a\u7fa9\u70ba","title":"Software"},{"location":"io/pci/#programming","text":"\u4ee5\u4e0b\u7a0b\u5f0f\u4ee5\u63a7\u5236\u4e03\u6bb5\u986f\u793a\u5668\u7684\u4e0a\u6578. \u4e03\u6bb5\u986f\u793a\u5668\u4f4d\u5740\u7dda\u4f4d\u65bc IO_Bank_1 IO-8~15, \u8cc7\u6599\u7dda\u4f4d\u65bcIO_Bank_1 IO-40~47, \u900f\u904e\u8207 Base \u7684\u52a0\u6b0a,\u5373\u53ef\u627e\u51fa\u76f8\u5c0d\u61c9\u7684\u4f4d\u5740\u3002 MODEL SMALL .386 .STACK .DATA IO_PORT0 EQU 0E811H ; io_bank_1 io-8~15 IO_PORT1 EQU 0E815H ; io_bank_1 io-40~47 OUT_DISABLED EQU 0E808H ; io_bank_0 IO_PORT0D EQU 0E800H ; io_bank_0 IO_PORT1D EQU 0E804H ; io_bank_0 .CODE BEGIN: PUSH DS MOV AX , 0 PUSH AX MOV AX , @ DATA MOV DS , AX DISP_BEGIN: MOV DX , IO_PORT1 ;\u7b2c\u4e00\u500b\u4e03\u6bb5\u78bc\u4eae MOV AX , 0005H ;0000-0005 \u4e0d\u540c\u4f4d\u5740\u8f38\u51fa OUT DX , AX CALL COUNT_7SEG CALL WAIT_1S MOV AH , 0BH ;\u6309\u4efb\u610f\u9375\u7d50\u675f\u7a0b\u5f0f INT 21H ;\u4e2d\u65b7\u5411\u91cf21h CMP AL , 0FFH JNZ DISP _BEGIN JMP EXIT ;\u7a0b\u5f0f\u7d50\u675f COUNT_7SEG: ;\u986f\u793a0~9\u6578\u5b57 MOV DX , IO_PORT0 ;\u986f\u793a O MOV AX , 003FH ;0011_1111 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 1 MOV AX , 0006H ;0000_0110 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 2 MOV AX , 005BH ;0101_1011 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 3 MOV AX , 004FH ;0100_1111 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 4 MOV AX , 0066H ;0110_0110 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 5 MOV AX , 006DH ;0110_1101 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 6 MOV AX , 007DH ;0111_1101 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 7 MOV AX , 0007H ;0000_0111 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 8 MOV AX , 007FH ;0111_1111 OUT DX , AX CALL WAIT_1S MOV DX , IO_PORT0 ;\u986f\u793a 9 MOV AX , 006FH ;0110_1111 OUT DX , AX CALL WAIT_1S RET WAIT_1S: MOV BX , 0007FH WAIT_LOOP: CALL WAIT_1MS DEC BX CMP BX , 0000H JBE WAIT_1S_EXIT LOOP WAIT_LOOP WAIT_1S_EXIT: RET WAIT_1MS: MOV CX , 03FFFH WAIT_LOOP1: MOV BX , BX MOV BX , BX MOV BX , BX MOV BX , BX MOV BX , BX MOV BX , BX MOV BX , BX LOOP WAIT_LOOP1 RET EXIT: MOV DX , OUT_DISABLED ;\u6e05\u9664\u6240\u6709\u8a2d\u5b9a\u3002 MOV AX , 0000H OUT DX , AX MOV DX , IO_PORT0D MOV EAX , 00000000H OUT DX , EAX MOV DX , IO_PORT1D MOV AX , 0000H OUT DX , AX MOV AH , 4CH INT 21H END BEGIN","title":"Programming"},{"location":"io/pci/#running","text":"\u4f7f\u7528 MASM \u7de8\u8b6f\u7a0b\u5f0f\u78bc C: \\M ASM \\M L 7SEG-1.TXT \u57f7\u884c\u4e4b\u5f8c\u7522\u6210 OBJ \u8207 EXE \u6a94, \u76f4\u63a5\u57f7\u884c C: \\M ASM \\7 SEG-1 \u5373\u53ef\u770b\u5230 7-SEG \u7fa4 \u7684\u5de6\u5074\u7b2c\u4e00\u500b\u7531 0 \u958b\u59cb\u5f80\u4e0a\u6578\u81f39, \u4e26\u4e14\u4e00\u76f4\u5faa\u74b0.","title":"Running"},{"location":"io/pci/#advanced","text":"PCI Host PCI Bridge","title":"Advanced"},{"location":"io/smbus/","text":"Under Construction ... System Management Bus(SMBus) System Management Bus(SMBus): Thermal Sensor $author: Jin-Wen (Ed) Lai $date: Mar. 2018 $revised: Jun. 2018 $Keywords: An exercise of fetching the values of Thermal Sensors from CPU. Content Requirements Command Line Interface Programming Running Result Observation Analysis Conclusion Advanced Reference Appendix Requirements Ubuntu 16.04 SMBus apt install lm-sensors Command Line Interface Confirm the OS version, 18.04 $ sudo cat /etc/os-release NAME = \"Ubuntu\" VERSION = \"18.04 LTS (Bionic Beaver)\" ID = ubuntu ID_LIKE = debian PRETTY_NAME = \"Ubuntu 18.04 LTS\" VERSION_ID = \"18.04\" HOME_URL = \"https://www.ubuntu.com/\" SUPPORT_URL = \"https://help.ubuntu.com/\" BUG_REPORT_URL = \"https://bugs.launchpad.net/ubuntu/\" PRIVACY_POLICY_URL = \"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\" VERSION_CODENAME = bionic UBUNTU_CODENAME = bionic Confirm the Linux Kernel version 4.15.0 $ sudo uname -a Linux sdr 4 .15.0-23-generic #25-Ubuntu SMP Wed May 23 18:02:16 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux Installation for lm_sensors $ sudo apt install lm-sensors Running configuration for lm_sensors $ sudo sensors-detect # sensors-detect revision 6284 (2015-05-31 14:00:33 +0200) # Board: ASUSTeK COMPUTER INC. PRIME Z270M-PLUS # Kernel: 4.4.0-128-generic x86_64 # Processor: Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz (6/158/9) This program will help you determine which kernel modules you need to load to use lm_sensors most effectively. It is generally safe and recommended to accept the default answers to all questions, unless you know what you 're doing. Some south bridges, CPUs or memory controllers contain embedded sensors. Do you want to scan for them? This is totally safe. (YES/no): YES Module cpuid loaded successfully. Silicon Integrated Systems SIS5595... No VIA VT82C686 Integrated Sensors... No VIA VT8231 Integrated Sensors... No AMD K8 thermal sensors... No AMD Family 10h thermal sensors... No AMD Family 11h thermal sensors... No AMD Family 12h and 14h thermal sensors... No AMD Family 15h thermal sensors... No AMD Family 16h thermal sensors... No AMD Family 15h power sensors... No AMD Family 16h power sensors... No Intel digital thermal sensor... Success! (driver `coretemp' ) Intel AMB FB-DIMM thermal sensor... No Intel 5500 /5520/X58 thermal sensor... No VIA C7 thermal sensor... No VIA Nano thermal sensor... No Some Super I/O chips contain embedded sensors. We have to write to standard I/O ports to probe them. This is usually safe. Do you want to scan for Super I/O sensors? ( YES/no ) : YES Probing for Super-I/O at 0x2e/0x2f Trying family ` National Semiconductor/ITE '... No Trying family `SMSC' ... No Trying family ` VIA/Winbond/Nuvoton/Fintek '... Yes Found unknown chip with ID 0xd121 (logical device B has address 0x290, could be sensors) Probing for Super-I/O at 0x4e/0x4f Trying family `National Semiconductor/ITE' ... No Trying family ` SMSC '... No Trying family `VIA/Winbond/Nuvoton/Fintek' ... No Trying family ` ITE '... No Some systems (mainly servers) implement IPMI, a set of common interfaces through which system health data may be retrieved, amongst other things. We first try to get the information from SMBIOS. If we don' t find it there, we have to read from arbitrary I/O ports to probe for such interfaces. This is normally safe. Do you want to scan for IPMI interfaces? ( YES/no ) : YES Probing for ` IPMI BMC KCS ' at 0xca0... No Probing for `IPMI BMC SMIC' at 0xca8... No Some hardware monitoring chips are accessible through the ISA I/O ports. We have to write to arbitrary I/O ports to probe them. This is usually safe though. Yes, you do have ISA I/O ports even if you do not have any ISA slots! Do you want to scan the ISA I/O ports? ( YES/no ) : YES Probing for ` National Semiconductor LM78 ' at 0x290... No Probing for `National Semiconductor LM79' at 0x290... No Probing for ` Winbond W83781D ' at 0x290... No Probing for `Winbond W83782D' at 0x290... No Lastly, we can probe the I2C/SMBus adapters for connected hardware monitoring devices. This is the most risky part, and while it works reasonably well on most systems, it has been reported to cause trouble on some systems. Do you want to probe the I2C/SMBus adapters now? ( YES/no ) : YES Found unknown SMBus adapter 8086 :a2a3 at 0000 :00:1f.4. Sorry, no supported PCI bus adapters found. Next adapter: i915 gmbus dpc ( i2c-0 ) Do you want to scan it? ( yes/NO/selectively ) : yes Next adapter: i915 gmbus dpb ( i2c-1 ) Do you want to scan it? ( yes/NO/selectively ) : yes Next adapter: i915 gmbus dpd ( i2c-2 ) Do you want to scan it? ( yes/NO/selectively ) : yes Next adapter: DPDDC-E ( i2c-3 ) Do you want to scan it? ( yes/NO/selectively ) : yes Now follows a summary of the probes I have just done . Just press ENTER to continue : Driver ` coretemp ': * Chip `Intel digital thermal sensor' ( confidence: 9 ) To load everything that is needed, add this to /etc/modules: #----cut here---- # Chip drivers coretemp #----cut here---- If you have some drivers built into your kernel, the list above will contain too many modules. Skip the appropriate ones! Do you want to add these lines automatically to /etc/modules? ( yes/NO ) yes Successful! Monitoring programs won 't work until the needed modules are loaded. You may want to run ' /etc/init.d/kmod start ' to load them. Unloading cpuid... OK Fetching CPU Temperature by sensors . But we only got 4 results of Temperatures of Temperature even this is 8-core CPU. asus-isa-0000 Adapter: ISA adapter cpu_fan: 0 RPM acpitz-virtual-0 Adapter: Virtual device temp1: +27.8\u00b0C (crit = +119.0\u00b0C) temp2: +29.8\u00b0C (crit = +119.0\u00b0C) coretemp-isa-0000 Adapter: ISA adapter Package id 0: +33.0\u00b0C (high = +80.0\u00b0C, crit = +100.0\u00b0C) Core 0: +31.0\u00b0C (high = +80.0\u00b0C, crit = +100.0\u00b0C) Core 1: +33.0\u00b0C (high = +80.0\u00b0C, crit = +100.0\u00b0C) Core 2: +32.0\u00b0C (high = +80.0\u00b0C, crit = +100.0\u00b0C) Core 3: +33.0\u00b0C (high = +80.0\u00b0C, crit = +100.0\u00b0C) Workaround Use the highest temperatures in all of the results. It's +33.0\u00b0C in above case. Programming Python n/a Running n/a Result n/a Observation n/a Analysis n/a Conclusion n/a Advanced We can consider to grab below information also Temperature (done) Fan Speed We can consider to grab CPU Temperature by ACPI also ACPI(Advanced Configuration & Power Interface) We can consider to grab CPU Temperature in Windows 7 also CPUZ Reference Appendix The CPU info of i7-7700 $ sudo cat /proc/cpuinfo processor : 0 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4194.140 cache size : 8192 KB physical id : 0 siblings : 8 core id : 0 cpu cores : 4 apicid : 0 initial apicid : 0 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 1 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4169.250 cache size : 8192 KB physical id : 0 siblings : 8 core id : 1 cpu cores : 4 apicid : 2 initial apicid : 2 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 2 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4178.812 cache size : 8192 KB physical id : 0 siblings : 8 core id : 2 cpu cores : 4 apicid : 4 initial apicid : 4 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 3 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4122.000 cache size : 8192 KB physical id : 0 siblings : 8 core id : 3 cpu cores : 4 apicid : 6 initial apicid : 6 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 4 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4130.156 cache size : 8192 KB physical id : 0 siblings : 8 core id : 0 cpu cores : 4 apicid : 1 initial apicid : 1 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 5 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4154.203 cache size : 8192 KB physical id : 0 siblings : 8 core id : 1 cpu cores : 4 apicid : 3 initial apicid : 3 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 6 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4200.187 cache size : 8192 KB physical id : 0 siblings : 8 core id : 2 cpu cores : 4 apicid : 5 initial apicid : 5 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 7 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4152.656 cache size : 8192 KB physical id : 0 siblings : 8 core id : 3 cpu cores : 4 apicid : 7 initial apicid : 7 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management:","title":"Under Construction ..."},{"location":"io/smbus/#under-construction","text":"","title":"Under Construction ..."},{"location":"io/smbus/#system-management-bussmbus","text":"","title":"System Management Bus(SMBus)"},{"location":"io/smbus/#system-management-bussmbus-thermal-sensor","text":"$author: Jin-Wen (Ed) Lai $date: Mar. 2018 $revised: Jun. 2018 $Keywords: An exercise of fetching the values of Thermal Sensors from CPU.","title":"System Management Bus(SMBus): Thermal Sensor"},{"location":"io/smbus/#content","text":"Requirements Command Line Interface Programming Running Result Observation Analysis Conclusion Advanced Reference Appendix","title":"Content"},{"location":"io/smbus/#requirements","text":"","title":"Requirements"},{"location":"io/smbus/#ubuntu-1604","text":"SMBus apt install lm-sensors","title":"Ubuntu 16.04"},{"location":"io/smbus/#command-line-interface","text":"Confirm the OS version, 18.04 $ sudo cat /etc/os-release NAME = \"Ubuntu\" VERSION = \"18.04 LTS (Bionic Beaver)\" ID = ubuntu ID_LIKE = debian PRETTY_NAME = \"Ubuntu 18.04 LTS\" VERSION_ID = \"18.04\" HOME_URL = \"https://www.ubuntu.com/\" SUPPORT_URL = \"https://help.ubuntu.com/\" BUG_REPORT_URL = \"https://bugs.launchpad.net/ubuntu/\" PRIVACY_POLICY_URL = \"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\" VERSION_CODENAME = bionic UBUNTU_CODENAME = bionic Confirm the Linux Kernel version 4.15.0 $ sudo uname -a Linux sdr 4 .15.0-23-generic #25-Ubuntu SMP Wed May 23 18:02:16 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux Installation for lm_sensors $ sudo apt install lm-sensors Running configuration for lm_sensors $ sudo sensors-detect # sensors-detect revision 6284 (2015-05-31 14:00:33 +0200) # Board: ASUSTeK COMPUTER INC. PRIME Z270M-PLUS # Kernel: 4.4.0-128-generic x86_64 # Processor: Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz (6/158/9) This program will help you determine which kernel modules you need to load to use lm_sensors most effectively. It is generally safe and recommended to accept the default answers to all questions, unless you know what you 're doing. Some south bridges, CPUs or memory controllers contain embedded sensors. Do you want to scan for them? This is totally safe. (YES/no): YES Module cpuid loaded successfully. Silicon Integrated Systems SIS5595... No VIA VT82C686 Integrated Sensors... No VIA VT8231 Integrated Sensors... No AMD K8 thermal sensors... No AMD Family 10h thermal sensors... No AMD Family 11h thermal sensors... No AMD Family 12h and 14h thermal sensors... No AMD Family 15h thermal sensors... No AMD Family 16h thermal sensors... No AMD Family 15h power sensors... No AMD Family 16h power sensors... No Intel digital thermal sensor... Success! (driver `coretemp' ) Intel AMB FB-DIMM thermal sensor... No Intel 5500 /5520/X58 thermal sensor... No VIA C7 thermal sensor... No VIA Nano thermal sensor... No Some Super I/O chips contain embedded sensors. We have to write to standard I/O ports to probe them. This is usually safe. Do you want to scan for Super I/O sensors? ( YES/no ) : YES Probing for Super-I/O at 0x2e/0x2f Trying family ` National Semiconductor/ITE '... No Trying family `SMSC' ... No Trying family ` VIA/Winbond/Nuvoton/Fintek '... Yes Found unknown chip with ID 0xd121 (logical device B has address 0x290, could be sensors) Probing for Super-I/O at 0x4e/0x4f Trying family `National Semiconductor/ITE' ... No Trying family ` SMSC '... No Trying family `VIA/Winbond/Nuvoton/Fintek' ... No Trying family ` ITE '... No Some systems (mainly servers) implement IPMI, a set of common interfaces through which system health data may be retrieved, amongst other things. We first try to get the information from SMBIOS. If we don' t find it there, we have to read from arbitrary I/O ports to probe for such interfaces. This is normally safe. Do you want to scan for IPMI interfaces? ( YES/no ) : YES Probing for ` IPMI BMC KCS ' at 0xca0... No Probing for `IPMI BMC SMIC' at 0xca8... No Some hardware monitoring chips are accessible through the ISA I/O ports. We have to write to arbitrary I/O ports to probe them. This is usually safe though. Yes, you do have ISA I/O ports even if you do not have any ISA slots! Do you want to scan the ISA I/O ports? ( YES/no ) : YES Probing for ` National Semiconductor LM78 ' at 0x290... No Probing for `National Semiconductor LM79' at 0x290... No Probing for ` Winbond W83781D ' at 0x290... No Probing for `Winbond W83782D' at 0x290... No Lastly, we can probe the I2C/SMBus adapters for connected hardware monitoring devices. This is the most risky part, and while it works reasonably well on most systems, it has been reported to cause trouble on some systems. Do you want to probe the I2C/SMBus adapters now? ( YES/no ) : YES Found unknown SMBus adapter 8086 :a2a3 at 0000 :00:1f.4. Sorry, no supported PCI bus adapters found. Next adapter: i915 gmbus dpc ( i2c-0 ) Do you want to scan it? ( yes/NO/selectively ) : yes Next adapter: i915 gmbus dpb ( i2c-1 ) Do you want to scan it? ( yes/NO/selectively ) : yes Next adapter: i915 gmbus dpd ( i2c-2 ) Do you want to scan it? ( yes/NO/selectively ) : yes Next adapter: DPDDC-E ( i2c-3 ) Do you want to scan it? ( yes/NO/selectively ) : yes Now follows a summary of the probes I have just done . Just press ENTER to continue : Driver ` coretemp ': * Chip `Intel digital thermal sensor' ( confidence: 9 ) To load everything that is needed, add this to /etc/modules: #----cut here---- # Chip drivers coretemp #----cut here---- If you have some drivers built into your kernel, the list above will contain too many modules. Skip the appropriate ones! Do you want to add these lines automatically to /etc/modules? ( yes/NO ) yes Successful! Monitoring programs won 't work until the needed modules are loaded. You may want to run ' /etc/init.d/kmod start ' to load them. Unloading cpuid... OK Fetching CPU Temperature by sensors . But we only got 4 results of Temperatures of Temperature even this is 8-core CPU. asus-isa-0000 Adapter: ISA adapter cpu_fan: 0 RPM acpitz-virtual-0 Adapter: Virtual device temp1: +27.8\u00b0C (crit = +119.0\u00b0C) temp2: +29.8\u00b0C (crit = +119.0\u00b0C) coretemp-isa-0000 Adapter: ISA adapter Package id 0: +33.0\u00b0C (high = +80.0\u00b0C, crit = +100.0\u00b0C) Core 0: +31.0\u00b0C (high = +80.0\u00b0C, crit = +100.0\u00b0C) Core 1: +33.0\u00b0C (high = +80.0\u00b0C, crit = +100.0\u00b0C) Core 2: +32.0\u00b0C (high = +80.0\u00b0C, crit = +100.0\u00b0C) Core 3: +33.0\u00b0C (high = +80.0\u00b0C, crit = +100.0\u00b0C) Workaround Use the highest temperatures in all of the results. It's +33.0\u00b0C in above case.","title":"Command Line Interface"},{"location":"io/smbus/#programming","text":"Python n/a","title":"Programming"},{"location":"io/smbus/#running","text":"n/a","title":"Running"},{"location":"io/smbus/#result","text":"n/a","title":"Result"},{"location":"io/smbus/#observation","text":"n/a","title":"Observation"},{"location":"io/smbus/#analysis","text":"n/a","title":"Analysis"},{"location":"io/smbus/#conclusion","text":"n/a","title":"Conclusion"},{"location":"io/smbus/#advanced","text":"We can consider to grab below information also Temperature (done) Fan Speed We can consider to grab CPU Temperature by ACPI also ACPI(Advanced Configuration & Power Interface) We can consider to grab CPU Temperature in Windows 7 also CPUZ","title":"Advanced"},{"location":"io/smbus/#reference","text":"","title":"Reference"},{"location":"io/smbus/#appendix","text":"The CPU info of i7-7700 $ sudo cat /proc/cpuinfo processor : 0 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4194.140 cache size : 8192 KB physical id : 0 siblings : 8 core id : 0 cpu cores : 4 apicid : 0 initial apicid : 0 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 1 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4169.250 cache size : 8192 KB physical id : 0 siblings : 8 core id : 1 cpu cores : 4 apicid : 2 initial apicid : 2 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 2 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4178.812 cache size : 8192 KB physical id : 0 siblings : 8 core id : 2 cpu cores : 4 apicid : 4 initial apicid : 4 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 3 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4122.000 cache size : 8192 KB physical id : 0 siblings : 8 core id : 3 cpu cores : 4 apicid : 6 initial apicid : 6 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 4 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4130.156 cache size : 8192 KB physical id : 0 siblings : 8 core id : 0 cpu cores : 4 apicid : 1 initial apicid : 1 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 5 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4154.203 cache size : 8192 KB physical id : 0 siblings : 8 core id : 1 cpu cores : 4 apicid : 3 initial apicid : 3 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 6 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4200.187 cache size : 8192 KB physical id : 0 siblings : 8 core id : 2 cpu cores : 4 apicid : 5 initial apicid : 5 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 7 vendor_id : GenuineIntel cpu family : 6 model : 158 model name : Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz stepping : 9 microcode : 0x84 cpu MHz : 4152.656 cache size : 8192 KB physical id : 0 siblings : 8 core id : 3 cpu cores : 4 apicid : 7 initial apicid : 7 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch invpcid_single intel_pt ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass bogomips : 7199.89 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management:","title":"Appendix"},{"location":"io/usb/","text":"User-Space # apt-get install libusb","title":"Index"},{"location":"io/usb/#user-space","text":"# apt-get install libusb","title":"User-Space"},{"location":"io/wdm/","text":"Under Construction now ... Man-Machine Interfaces WDM - Windows Driver Model $author: Ching-Wen (Ed) Lai $date: May. 2003 $revised: Mar. 2018 $keywords: man, machine, interface An exercise of WDM. Content Concept Requirements Concept Requirements","title":"Under Construction now ..."},{"location":"io/wdm/#under-construction-now","text":"","title":"Under Construction now ..."},{"location":"io/wdm/#man-machine-interfaces","text":"","title":"Man-Machine Interfaces"},{"location":"io/wdm/#wdm-windows-driver-model","text":"$author: Ching-Wen (Ed) Lai $date: May. 2003 $revised: Mar. 2018 $keywords: man, machine, interface An exercise of WDM.","title":"WDM - Windows Driver Model"},{"location":"io/wdm/#content","text":"Concept Requirements","title":"Content"},{"location":"io/wdm/#concept","text":"","title":"Concept"},{"location":"io/wdm/#requirements","text":"","title":"Requirements"},{"location":"misc/","text":"Miscellaneous","title":"Misc"},{"location":"misc/#miscellaneous","text":"","title":"Miscellaneous"},{"location":"motivation/painting/","text":"","title":"Painting"},{"location":"motivation/traveling/","text":"Traveling It always has chance to meet different people and cultural diversity. Biz. Trip # Lab Location(s) Mission(s) Time 1 Kyocera Wireless Lab 10300 Campus Point Drive, San Diego, CA Production Verification (EVDO router) 2005 B.C 2 Kyocera in Venezuela (Movistar) Ambassador Suites Hotel Caracas, Venezuela Fix software bug (EVDO router) 2005 B.C 3 CAT Telecom, HBC Telecom Bangkok, Thailand Product Promotion (HSDPA router) 2006 B.C 4 Telkomsel Telecom Jakarta, Indonesia Product Promotion (HSDPA router) 2006 B.C 5 Maxis Telecom, Celcom Telecom Kuala Lumpur, Malaysia Product Promotion (HSDPA router) 2006 B.C 6 Singtel Telecom, M1 Telecom Singapore City Product Promotion (HSDPA router) 2006 B.C 7 Globe Telecom Manila, Philippine Product Promotion (HSDPA router) 2006 B.C 8 Telkom Indonesia Bandung, Indonesia Proof of concept (Wi-Fi Mesh AP) 2012 B.C 9 Vivo Telefonica Av. Ayrton Senna, 2200 - Barra da Tijuca, Rio de Janeiro - RJ, Brazil Homologation, 4G LTE dongle/router(USSD, STKand so on) 2013 B.C. 10 Telenor Hungary Budapest, Hungary Type Approval (LTE MiFi) 2013 B.C 11 Vivo Telefonica Sao Paulo, Brazil Homologation (LTE router) 2014 B.C. 12 Cyfrowy Polsat (CP Group) Warsaw, Poland Type Approval (3G dongle) 2014 B.C. 13 Tele2 Germany Germany Type Approval (LTE router) 2014 B.C. 14 Cyfrowy Polsat (CP Group) Warsaw, Poland Type Approval (LTE router) 2014 B.C. 15 Vodafone Romania Bucharest, Romania Type Approval (LTE router) 2015 B.C. 16 Verizon (VzW) Innovation Labs 60 Sylvan Rd, Waltham, MA 02451 Pre-certificate using VzW Test Cases (M2M device) 2015 B.C. 17 Ericsson Wireless Lab (E/// Lab) 1206-1298 Commerce Dr, Richardson, TX 75081 Type Approval (eMBMS dongle) 2015 B.C. 18 Nokia Bell Lab (formally Alcatel-Lucent Lab) 600 Mountain Ave bldg 5, New Providence, NJ 07974 Type Approval (eMBMS dongle) 2015 B.C. 19 Verizon (VzW) Innovation Labs 60 Sylvan Rd, Waltham, MA 02451 Pre-certificate using VzW Test Cases (M2M device) 2016 B.C.","title":"Traveling"},{"location":"motivation/traveling/#traveling","text":"It always has chance to meet different people and cultural diversity.","title":"Traveling"},{"location":"motivation/traveling/#biz-trip","text":"# Lab Location(s) Mission(s) Time 1 Kyocera Wireless Lab 10300 Campus Point Drive, San Diego, CA Production Verification (EVDO router) 2005 B.C 2 Kyocera in Venezuela (Movistar) Ambassador Suites Hotel Caracas, Venezuela Fix software bug (EVDO router) 2005 B.C 3 CAT Telecom, HBC Telecom Bangkok, Thailand Product Promotion (HSDPA router) 2006 B.C 4 Telkomsel Telecom Jakarta, Indonesia Product Promotion (HSDPA router) 2006 B.C 5 Maxis Telecom, Celcom Telecom Kuala Lumpur, Malaysia Product Promotion (HSDPA router) 2006 B.C 6 Singtel Telecom, M1 Telecom Singapore City Product Promotion (HSDPA router) 2006 B.C 7 Globe Telecom Manila, Philippine Product Promotion (HSDPA router) 2006 B.C 8 Telkom Indonesia Bandung, Indonesia Proof of concept (Wi-Fi Mesh AP) 2012 B.C 9 Vivo Telefonica Av. Ayrton Senna, 2200 - Barra da Tijuca, Rio de Janeiro - RJ, Brazil Homologation, 4G LTE dongle/router(USSD, STKand so on) 2013 B.C. 10 Telenor Hungary Budapest, Hungary Type Approval (LTE MiFi) 2013 B.C 11 Vivo Telefonica Sao Paulo, Brazil Homologation (LTE router) 2014 B.C. 12 Cyfrowy Polsat (CP Group) Warsaw, Poland Type Approval (3G dongle) 2014 B.C. 13 Tele2 Germany Germany Type Approval (LTE router) 2014 B.C. 14 Cyfrowy Polsat (CP Group) Warsaw, Poland Type Approval (LTE router) 2014 B.C. 15 Vodafone Romania Bucharest, Romania Type Approval (LTE router) 2015 B.C. 16 Verizon (VzW) Innovation Labs 60 Sylvan Rd, Waltham, MA 02451 Pre-certificate using VzW Test Cases (M2M device) 2015 B.C. 17 Ericsson Wireless Lab (E/// Lab) 1206-1298 Commerce Dr, Richardson, TX 75081 Type Approval (eMBMS dongle) 2015 B.C. 18 Nokia Bell Lab (formally Alcatel-Lucent Lab) 600 Mountain Ave bldg 5, New Providence, NJ 07974 Type Approval (eMBMS dongle) 2015 B.C. 19 Verizon (VzW) Innovation Labs 60 Sylvan Rd, Waltham, MA 02451 Pre-certificate using VzW Test Cases (M2M device) 2016 B.C.","title":"Biz. Trip"},{"location":"net/","text":"Computer Networks \ud83d\udc77 : Under Construction ... Application Layer Hypertext Transfer Protocol(HTTP) telnet perl File Transfer Protocol (FTP) telnet Simple Mail Transfer Protocol and Post Office Protocol - Version 3 (IMAP/POP3) telnet Network Time Protocol (NTP) python Domain Name System (DNS) python Network Manager System Simple Network Management Protocol (SNMP) perl Utility Remote Capture (rpcapd) rpcapd Reference Router Scan v2.60 Beta by Stas'M (build 01.01.2018) routerscan","title":"Computer Networks"},{"location":"net/#computer-networks","text":"\ud83d\udc77 : Under Construction ...","title":"Computer Networks"},{"location":"net/#application-layer","text":"Hypertext Transfer Protocol(HTTP) telnet perl File Transfer Protocol (FTP) telnet Simple Mail Transfer Protocol and Post Office Protocol - Version 3 (IMAP/POP3) telnet Network Time Protocol (NTP) python Domain Name System (DNS) python","title":"Application Layer"},{"location":"net/#network-manager-system","text":"Simple Network Management Protocol (SNMP) perl","title":"Network Manager System"},{"location":"net/#utility","text":"Remote Capture (rpcapd) rpcapd","title":"Utility"},{"location":"net/#reference","text":"Router Scan v2.60 Beta by Stas'M (build 01.01.2018) routerscan","title":"Reference"},{"location":"net/file-transfer-protocol/","text":"File Transfer Protocol (FTP) Find and read RFC959 for FTP (Key idea has been discussed in the class) and list all of the client commands that are supported by the RFC. - List all of the FTP client commands - Interactive with FTP Server - Get RFC 959 by Archive and Ftp Concept Users use below applications Ftp clients (e.q. cute-Ftp; ws_ftp...) to access the Ftp Servics. but we will not use any client-side applications to access above Services. instead of telnet . it will help us to know more detail of FTP protocol. Requirements Red-Hat Linux 6.2 + KDE/X-window FTP Step-by-Step by using telnet to access FTP server List all of the client commands that are supported by the RFC 595 . Connect to FTP Server (port 21) and list all commands users can use. User has to login NTUT's Sun OS Server and telnet to NTUT's FTP Server. (Optional, if user wants to run FTP client on Sun OS Server) Issue below command on Terminal to access NTUT FTP Server after login NTUT Sun OS Server . telnet 140 .124.13.2 21 Issue below FTP commands trying to list file(s) from NTUT FTP Server # PROMPT DESCRIPTION 1 user s9360511 \u23ce Identify yourself to the remote FTP server (please use your personal account) 2 pass \u23ce Issue the password to FTP Server(please use your personal password) 3 HELP \u23ce List all FTP commands 4 PWD \u23ce Print the name of the current working directory on the remote machine, in this case we saw /user/student/s9360/s9360511 5 list \u23ce Print a listing of the contents of a directory on the remote machine under folder /user/student/s9360/s9360511 , but it will pop up a warnnig message saying 425 Can't build data connection: Connection refused. Screenshot Screenshot of running telenet Download The File Step-by-Step In above case, When users issue LIST command, Server responses 425 Can't open data connection . Refer to Richard Stevens TCP/IP Illustrated vo1.1 CH27 FTP: File Transfer Protocol , Server has to open Data Channel for Data Connection . Terminal 1: Issue below command to access NTUT FTP Server ( Command Port ) telnet 140 .124.13.2 21 Terminal 1: Issue below command on Command Port find out Data Port 's number STEP PROMPT DESCRIPTION 1 user s9360511 \u23ce Identify yourself to the remote FTP server (please use your personal account) 2 pass \u23ce Issue the password to FTP Server(please use your personal password) 3 PWD \u23ce Print the name of the current working directory on the remote machine, in this case we saw /user/student/s9360/s9360511 4 PASV \u23ce Request the remote server open a port for the data connection and return the address of that port. In this case, 140,124,13,2,195,133 , it means server opens Port 50033(195*256*133) for Data Connection Terminal 2: Issue below command on Terminal 2 to access NTUT FTP Server. telnet 140 .124.13.2 21 Terminal 2: Issue below FTP commands on Terminal 2 , accessing Port 50033 . telnet 140 .124.13.2 50033 Terminal 1: Issue below command on Data port STEP PROMPT DESCRIPTION 5 LIST \u23ce \u56de\u5230\u539f\u672c\u7684 FTP \u63a7\u5236\u57e0(21)\u4e0b\u547d\u4ee4 \u5728 FTP \u8cc7\u6599\u9023\u63a5\u57e0\u7684\u8996\u7a97(Terminal 2)\u5373\u53ef\u770b\u5230\u4e0b LIST \u6307\u4ee4 \u6240\u56de\u61c9\u7684\u8cc7\u6599,\u56de\u61c9\u5b8c\u5f8c\u4e3b\u6a5f\u5373\u5c07\u57e0\u53e3\u95dc\u9589 Terminal 1: Issue below command on Data Port to say Goodbye to FTP Server STEP PROMPT DESCRIPTION 6 QUIT \u23ce Logout FTP Server Screenshot Screenshot of telenet Debug Mode Screenshot Enable Debug Mode (with -d optional) when accessing FTP server. ftp -d 140 .124.13.2 User can observe and diagnostic the command when the FTP-Client issues to FTP-Server. In the case, we learned ls command was the combination of PASV and LIST commands. RFC 959 Get RFC 959 from any FTP Server Try to find the ref959 document from NCU Archie Service . Use NCTU FTP Server. FTP to NCTU FTP Server. Login with anonymous account, use Email Address as Login Password , list available command(s) by pressing help . Listing all files. Navigate to Documents/RFC , issue below command to fetch RFC file. get rfc959.txt #<= get file rfc959.txt quit #<= logout FTP server Reading from the Editor. Get RFC 959 from IEFT We can found RFC from IETF Website also. Display RFC 0959 Advanced FTP Code 226 Closing data connection. Requested file action successful (file transfer, abort, etc.). $author: Jin-Wen (Ed) Lai $date: Oct. 2001 $revised: Mar. 2018 $keywords: computer, networks, network, http, RFC.","title":"File Transfer Protocol (FTP)"},{"location":"net/file-transfer-protocol/#file-transfer-protocol-ftp","text":"Find and read RFC959 for FTP (Key idea has been discussed in the class) and list all of the client commands that are supported by the RFC. - List all of the FTP client commands - Interactive with FTP Server - Get RFC 959 by Archive and Ftp","title":"File Transfer Protocol (FTP)"},{"location":"net/file-transfer-protocol/#concept","text":"Users use below applications Ftp clients (e.q. cute-Ftp; ws_ftp...) to access the Ftp Servics. but we will not use any client-side applications to access above Services. instead of telnet . it will help us to know more detail of FTP protocol.","title":"Concept"},{"location":"net/file-transfer-protocol/#requirements","text":"Red-Hat Linux 6.2 + KDE/X-window","title":"Requirements"},{"location":"net/file-transfer-protocol/#ftp","text":"","title":"FTP"},{"location":"net/file-transfer-protocol/#step-by-step-by-using-telnet-to-access-ftp-server","text":"List all of the client commands that are supported by the RFC 595 . Connect to FTP Server (port 21) and list all commands users can use. User has to login NTUT's Sun OS Server and telnet to NTUT's FTP Server. (Optional, if user wants to run FTP client on Sun OS Server) Issue below command on Terminal to access NTUT FTP Server after login NTUT Sun OS Server . telnet 140 .124.13.2 21 Issue below FTP commands trying to list file(s) from NTUT FTP Server # PROMPT DESCRIPTION 1 user s9360511 \u23ce Identify yourself to the remote FTP server (please use your personal account) 2 pass \u23ce Issue the password to FTP Server(please use your personal password) 3 HELP \u23ce List all FTP commands 4 PWD \u23ce Print the name of the current working directory on the remote machine, in this case we saw /user/student/s9360/s9360511 5 list \u23ce Print a listing of the contents of a directory on the remote machine under folder /user/student/s9360/s9360511 , but it will pop up a warnnig message saying 425 Can't build data connection: Connection refused.","title":"Step-by-Step by using telnet to access FTP server"},{"location":"net/file-transfer-protocol/#screenshot","text":"Screenshot of running telenet","title":"Screenshot"},{"location":"net/file-transfer-protocol/#download-the-file","text":"","title":"Download The File"},{"location":"net/file-transfer-protocol/#step-by-step","text":"In above case, When users issue LIST command, Server responses 425 Can't open data connection . Refer to Richard Stevens TCP/IP Illustrated vo1.1 CH27 FTP: File Transfer Protocol , Server has to open Data Channel for Data Connection . Terminal 1: Issue below command to access NTUT FTP Server ( Command Port ) telnet 140 .124.13.2 21 Terminal 1: Issue below command on Command Port find out Data Port 's number STEP PROMPT DESCRIPTION 1 user s9360511 \u23ce Identify yourself to the remote FTP server (please use your personal account) 2 pass \u23ce Issue the password to FTP Server(please use your personal password) 3 PWD \u23ce Print the name of the current working directory on the remote machine, in this case we saw /user/student/s9360/s9360511 4 PASV \u23ce Request the remote server open a port for the data connection and return the address of that port. In this case, 140,124,13,2,195,133 , it means server opens Port 50033(195*256*133) for Data Connection Terminal 2: Issue below command on Terminal 2 to access NTUT FTP Server. telnet 140 .124.13.2 21 Terminal 2: Issue below FTP commands on Terminal 2 , accessing Port 50033 . telnet 140 .124.13.2 50033 Terminal 1: Issue below command on Data port STEP PROMPT DESCRIPTION 5 LIST \u23ce \u56de\u5230\u539f\u672c\u7684 FTP \u63a7\u5236\u57e0(21)\u4e0b\u547d\u4ee4 \u5728 FTP \u8cc7\u6599\u9023\u63a5\u57e0\u7684\u8996\u7a97(Terminal 2)\u5373\u53ef\u770b\u5230\u4e0b LIST \u6307\u4ee4 \u6240\u56de\u61c9\u7684\u8cc7\u6599,\u56de\u61c9\u5b8c\u5f8c\u4e3b\u6a5f\u5373\u5c07\u57e0\u53e3\u95dc\u9589 Terminal 1: Issue below command on Data Port to say Goodbye to FTP Server STEP PROMPT DESCRIPTION 6 QUIT \u23ce Logout FTP Server","title":"Step-by-Step"},{"location":"net/file-transfer-protocol/#screenshot_1","text":"Screenshot of telenet","title":"Screenshot"},{"location":"net/file-transfer-protocol/#debug-mode","text":"","title":"Debug Mode"},{"location":"net/file-transfer-protocol/#screenshot_2","text":"Enable Debug Mode (with -d optional) when accessing FTP server. ftp -d 140 .124.13.2 User can observe and diagnostic the command when the FTP-Client issues to FTP-Server. In the case, we learned ls command was the combination of PASV and LIST commands.","title":"Screenshot"},{"location":"net/file-transfer-protocol/#rfc-959","text":"","title":"RFC 959"},{"location":"net/file-transfer-protocol/#get-rfc-959-from-any-ftp-server","text":"Try to find the ref959 document from NCU Archie Service . Use NCTU FTP Server. FTP to NCTU FTP Server. Login with anonymous account, use Email Address as Login Password , list available command(s) by pressing help . Listing all files. Navigate to Documents/RFC , issue below command to fetch RFC file. get rfc959.txt #<= get file rfc959.txt quit #<= logout FTP server Reading from the Editor.","title":"Get RFC 959 from any FTP Server"},{"location":"net/file-transfer-protocol/#get-rfc-959-from-ieft","text":"We can found RFC from IETF Website also. Display RFC 0959","title":"Get RFC 959 from IEFT"},{"location":"net/file-transfer-protocol/#advanced","text":"FTP Code 226 Closing data connection. Requested file action successful (file transfer, abort, etc.). $author: Jin-Wen (Ed) Lai $date: Oct. 2001 $revised: Mar. 2018 $keywords: computer, networks, network, http, RFC.","title":"Advanced"},{"location":"net/hypertext-transfer-protocol/","text":"HyperText Transfer Protocol (HTTP) Do the HTTP experiment as explained in the lecture. - At last try to get a html file, show your process and partial result (no need to print all stuff you get to hand in). - You are welcome and hand them in for grading (refer to RFC2068 if you want). Concept Users use below application Web Browsers (e.q. Microsoft Internet Explorer ; Netscape Navigator and so on) to access the Web Services. but we will not use any client-side application to access above HTTP Services, instead of telnet . It will help us to know more detail of HTTP protocol. Requirements Red-Hat Linux 6.2 + KDE/X-window Perl/TK Telnet Step-by-Step by telnet Issue below command on Terminal to access Yahoo Website telnet www.yahoo.com.tw 80 Issue below HTTP commands talking with Yahoo Website to fetch Web content index.html # PROMPT DESCRIPTION 1 GET /index.html HTTP/1.0 \u23ce GET index.htm page using HTTP/1.0 property 2 USER-agent: Lynx/2.8.4 \u23ce Tell Yahoo server our client-side application is Lynx 3 Accept: text/html, image/gif, image/jpeg \u23ce This client accepts html, gif and jpeg format images 4 Accept-language: ch \u23ce The http client is able to accept ch language, according to RFC1766 5 Enter Enter \u23ce Press two Enter keys Screenshots of running telnet Initial the connection to yahoo website, and issue the HTTP commands to grab index.html page It'll display the HTML result on Terminal User can also save index.html to the file yahoo.txt by using Shell command telnet 140 .124.13.2 80 >> yahoo.txt ` Check the result by reading file yahoo.txt (the same index.html ) by using Shell command also cat yahoo.txt | more Users can read the file yahoo.txt by using Web Browser also A Tiny Browser Proposal Basic Concept: \u4f7f\u7528 Socket \u958b\u555f\u9060\u7aef\u7684 http port (80),\u8b80\u53d6\u5176 \u7db2\u9801\u6a94\u6848,\u5256\u6790 \u5176\u6a94\u6848\u5167\u5bb9\u7684 HTML tag , \u4e26\u5c07\u4e4b\u8f49\u6210 \u7d66\u700f\u89bd\u5668\u7684\u6240\u770b\u5230\u7684\u5916\u89c0 \u3002 Current Status: \u76ee\u524d\u53ea\u80fd\u5256\u6790\u57fa\u790e\u7684 A tag(\u8d85\u9023\u7d50 Tag) . Languages used: Perl (GUI framework is Tk) . Screenshot: \u65bc\u7db2\u5740\u8655\u8f38\u5165\u6b32\u9023\u7d50\u7db2\u5740\u5373\u53ef\u8b80\u53d6\u8a72\u7db2\u9801\u6a94\u6848\uff0c\u8b80\u53d6\u5f8c,\u6e38\u6a19\u79fb\u5230\u6709\u8d85\u9023\u7d50\u529f\u80fd\u8655\u984f\u8272\u6703\u6539\u8b8a,\u6309\u4e00\u4e0b\u5f8c,\u5373\u53ef\u9023\u7d50\u5230\u8a72\u7db2\u9801\u4e26\u958b\u555f\u3002 Programming #!/usr/local/bin/perl ################################### webget.pl ############################### # Proposal: a tiny browser # # Description: 1. \u521d\u7d1a\u529f\u80fd # 2. \u9023\u7dda HTTP Server \u5f8c # 3. \u53d6\u5f97 Html Tag \u505a\u51fa <A> tag (\u8d85\u9023\u7d50) \u7684\u529f\u80fd # # Usage: 1. Unix-like OS # 1.1 install Perl on Unix-like OS (Unix ,Linux ,Free BSD ,Sun..) # 1.2 invoke Terminal mode on Xwindow # <s9360511@sun:~/task/ss>[46] chmod 755 webget.pl (chmod to 755) # <s9360511@sun:~/task/ss>[48] ./webget.pl (Running) # # 2. MS Windows \u5e73\u53f0 # 2.1 \u9700\u5148\u5b89\u88dd Perl(www.perl.org) # 2.2 \u5728\u76f4\u63a5\u6309\u672c\u6a94\u6848\u555f\u52d5\u6216\u9032\u5165 MS-DOS \u5e95\u4e0b\u555f\u52d5 # C:\\>perl webget.pl (\u4ee5 Perl\u76f4\u8b6f \u672c\u7a0b\u5f0f\u6a94) # ^^^^ ^^^^^^ # \u76f4\u8b6f\u5668 \u672c\u7a0b\u5f0f # # Limitation: 1. A tag \u529f\u80fd \u4e26\u4e0d\u5b8c\u5168 # Reference: # Issue : # History: n/a ############################################################################### use Tk ; use IO::Socket ; $FONT = '#a0b7ce' ; ############################################################################### ## GUI Layout [ Start ] ############################################################################### $mw = MainWindow -> new ; $mw -> title ( \"Perl \u700f\u89bd\u5668\" ); $f = $mw -> Frame -> pack ( - side => 'top' , - fill => 'x' ); # IP Address/or URL $f -> Label ( - text => \"\u7db2\u5740:\" ) -> pack ( - side => 'left' , - anchor => 'w' ); $f -> Entry ( - textvariable => \\ $url_name ) -> pack ( - side => 'left' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); # Button $f -> Button ( - text => \"Exit\" , - relief => 'ridge' , - command => sub { exit ; } ) -> pack ( - side => 'right' ); $f -> Button ( - text => \"\u9996\u9801\" , - relief => 'ridge' , - command => \\& home_web ) -> pack ( - side => 'right' , - anchor => 'e' ); $f -> Button ( - text => \"\u9023\u7d50\" , - relief => 'ridge' , - command => \\& link_web ) -> pack ( - side => 'right' , - anchor => 'e' ); # Display Area $t = $mw -> Scrolled ( qw/Text -setgrid true -width 60 -height 24 -scrollbars e -wrap word/ , - font => $FONT ); $t -> pack ( qw/-expand yes -fill both/ ); # Set up display styles my ( @bold , @normal , $tag ); if ( $mw -> depth > 1 ) { @bold = ( - background => '#43ce80' , qw/-relief raised -borderwidth 1/ ); @normal = ( - background => undef , qw/-relief flat/ ); } else { @bold = ( qw/-foreground white -background black/ ); @normal = ( - foreground => undef , - background => undef ); } MainLoop ; ############################################################################### ## GUI Layout [ End ] ############################################################################### # ................... Access Website ........................................ sub link_web { @ARGV = split /\\// , $url_name ; & show_page ; } # .............. Default Portal Site is \"www.yahoo.com.tw\" ................ sub home_web { @ARGV = qw(www.yahoo.com.tw /index.html) ; & show_page ; } sub linkSite { @ARGV = @_ ; $_ = $ARGV [ 0 ]; s #/##; $ARGV [ 0 ] = $_ ; $ARGV [ 1 ] = \"/index.html\" ; $t -> delete ( \"1.0\" , \"end\" ); & show_page ; } # ........... Grab the http pages from http server ...................... sub show_page { ## \u4e0b\u65b9\u986f\u793a\u9023\u63a5\u7db2\u5740 $info = \"\u76ee\u524d\u9023\u63a5 '$url_name'\" ; ## \u6e05\u9664\u986f\u793a\u5340 $t -> delete ( \"1.0\" , \"end\" ); ## \u6aa2\u67e5\u7db2\u5740\u662f\u5426\u6b63\u78ba unless ( @ARGV > 1 ) { die \"usage: $0 host document ...\\n\" } $host = shift ( @ARGV ); foreach $document ( @ARGV ) { #\u4f7f\u7528 socket \u9023\u63a5 http server $remote = IO::Socket::INET -> new ( Proto => \"tcp\" , PeerAddr => $host , PeerPort => \"http(80)\" ,); unless ( $remote ){ die \"cannot connect to http daemon on $host\" } $remote -> autoflush ( 1 ); ## \u8207 http \u4ea4\u8ac7 \u6293\u53d6\u7db2\u9801 print $remote \"GET /$document HTTP/1.0\\n\\n\" ; $counter = 0 ; #\u4f7f HTML \u7684 A Tag \u4f5c\u7528 while ( <$remote> ){ #\u53bb\u6389 A Tag \u4e2d\u4e0d\u7528\u986f\u793a\u7684\u5b57\u5143 if ( index ( $_ , \"<a href=\" ) == 0 ) { ~ s #<a href=\"http://##; $where = index ( $_ , \">\" ); $tt1 = substr ( $_ , 0 ,( $where - 1 )); ~ s #$tt1\">##; $where = index ( $_ , \"</a>\" ); $tt2 = substr ( $_ , 0 , $where ); $counter ++ ; $aTag { 'd' . $counter } = $tt1 ; $t -> insert ( 'end' , $tt2 . \"\\n\" , 'd' . $counter ); } #\u76ee\u524d\u5176\u4ed6\u7684 HTML Tag \u76f4\u63a5\u986f\u793a else { $t -> insert ( \"end\" , $_ );} } # ................ Display A tag ................................... foreach $tag ( %aTag ) { ## \u986f\u793a A tag \u4e26\u4e14\u6e38\u6a19\u79fb\u5230 A tag \u6703\u5c07 \u8a72 A tag \u5b57\u4e32\u80cc\u666f\u8b8a\u6210 \u7da0\u8272 $t -> tag ( 'bind' , $tag , '<Any-Enter>' => sub { shift -> tag ( 'configure' , $tag , @bold )}); $t -> tag ( 'bind' , $tag , '<Any-Leave>' => sub { shift -> tag ( 'configure' , $tag , @normal )}); ## \u4f7f A tag \u8d85\u9023\u7d50 \u529f\u80fd\u751f\u6548 $t -> tag ( \"bind\" , $tag , \"<1>\" => sub { & linkSite ( $aTag { $tag })}); } $t -> mark ( qw/set insert 0.0/ ); close $remote ; } } Advanced User can press F12 to observative how Chrome works step-by-step. $author: Jin-Wen (Ed) Lai $date: Oct. 2001 $revised: Mar. 2018 $keywords: computer, networks, network, http, RFC.","title":"Hypertext Transfer Protocol(HTTP)"},{"location":"net/hypertext-transfer-protocol/#hypertext-transfer-protocol-http","text":"Do the HTTP experiment as explained in the lecture. - At last try to get a html file, show your process and partial result (no need to print all stuff you get to hand in). - You are welcome and hand them in for grading (refer to RFC2068 if you want).","title":"HyperText Transfer Protocol (HTTP)"},{"location":"net/hypertext-transfer-protocol/#concept","text":"Users use below application Web Browsers (e.q. Microsoft Internet Explorer ; Netscape Navigator and so on) to access the Web Services. but we will not use any client-side application to access above HTTP Services, instead of telnet . It will help us to know more detail of HTTP protocol.","title":"Concept"},{"location":"net/hypertext-transfer-protocol/#requirements","text":"Red-Hat Linux 6.2 + KDE/X-window Perl/TK","title":"Requirements"},{"location":"net/hypertext-transfer-protocol/#telnet","text":"","title":"Telnet"},{"location":"net/hypertext-transfer-protocol/#step-by-step-by-telnet","text":"Issue below command on Terminal to access Yahoo Website telnet www.yahoo.com.tw 80 Issue below HTTP commands talking with Yahoo Website to fetch Web content index.html # PROMPT DESCRIPTION 1 GET /index.html HTTP/1.0 \u23ce GET index.htm page using HTTP/1.0 property 2 USER-agent: Lynx/2.8.4 \u23ce Tell Yahoo server our client-side application is Lynx 3 Accept: text/html, image/gif, image/jpeg \u23ce This client accepts html, gif and jpeg format images 4 Accept-language: ch \u23ce The http client is able to accept ch language, according to RFC1766 5 Enter Enter \u23ce Press two Enter keys","title":"Step-by-Step by telnet"},{"location":"net/hypertext-transfer-protocol/#screenshots-of-running-telnet","text":"Initial the connection to yahoo website, and issue the HTTP commands to grab index.html page It'll display the HTML result on Terminal User can also save index.html to the file yahoo.txt by using Shell command telnet 140 .124.13.2 80 >> yahoo.txt ` Check the result by reading file yahoo.txt (the same index.html ) by using Shell command also cat yahoo.txt | more Users can read the file yahoo.txt by using Web Browser also","title":"Screenshots of running telnet"},{"location":"net/hypertext-transfer-protocol/#a-tiny-browser","text":"","title":"A Tiny Browser"},{"location":"net/hypertext-transfer-protocol/#proposal","text":"Basic Concept: \u4f7f\u7528 Socket \u958b\u555f\u9060\u7aef\u7684 http port (80),\u8b80\u53d6\u5176 \u7db2\u9801\u6a94\u6848,\u5256\u6790 \u5176\u6a94\u6848\u5167\u5bb9\u7684 HTML tag , \u4e26\u5c07\u4e4b\u8f49\u6210 \u7d66\u700f\u89bd\u5668\u7684\u6240\u770b\u5230\u7684\u5916\u89c0 \u3002 Current Status: \u76ee\u524d\u53ea\u80fd\u5256\u6790\u57fa\u790e\u7684 A tag(\u8d85\u9023\u7d50 Tag) . Languages used: Perl (GUI framework is Tk) . Screenshot: \u65bc\u7db2\u5740\u8655\u8f38\u5165\u6b32\u9023\u7d50\u7db2\u5740\u5373\u53ef\u8b80\u53d6\u8a72\u7db2\u9801\u6a94\u6848\uff0c\u8b80\u53d6\u5f8c,\u6e38\u6a19\u79fb\u5230\u6709\u8d85\u9023\u7d50\u529f\u80fd\u8655\u984f\u8272\u6703\u6539\u8b8a,\u6309\u4e00\u4e0b\u5f8c,\u5373\u53ef\u9023\u7d50\u5230\u8a72\u7db2\u9801\u4e26\u958b\u555f\u3002","title":"Proposal"},{"location":"net/hypertext-transfer-protocol/#programming","text":"#!/usr/local/bin/perl ################################### webget.pl ############################### # Proposal: a tiny browser # # Description: 1. \u521d\u7d1a\u529f\u80fd # 2. \u9023\u7dda HTTP Server \u5f8c # 3. \u53d6\u5f97 Html Tag \u505a\u51fa <A> tag (\u8d85\u9023\u7d50) \u7684\u529f\u80fd # # Usage: 1. Unix-like OS # 1.1 install Perl on Unix-like OS (Unix ,Linux ,Free BSD ,Sun..) # 1.2 invoke Terminal mode on Xwindow # <s9360511@sun:~/task/ss>[46] chmod 755 webget.pl (chmod to 755) # <s9360511@sun:~/task/ss>[48] ./webget.pl (Running) # # 2. MS Windows \u5e73\u53f0 # 2.1 \u9700\u5148\u5b89\u88dd Perl(www.perl.org) # 2.2 \u5728\u76f4\u63a5\u6309\u672c\u6a94\u6848\u555f\u52d5\u6216\u9032\u5165 MS-DOS \u5e95\u4e0b\u555f\u52d5 # C:\\>perl webget.pl (\u4ee5 Perl\u76f4\u8b6f \u672c\u7a0b\u5f0f\u6a94) # ^^^^ ^^^^^^ # \u76f4\u8b6f\u5668 \u672c\u7a0b\u5f0f # # Limitation: 1. A tag \u529f\u80fd \u4e26\u4e0d\u5b8c\u5168 # Reference: # Issue : # History: n/a ############################################################################### use Tk ; use IO::Socket ; $FONT = '#a0b7ce' ; ############################################################################### ## GUI Layout [ Start ] ############################################################################### $mw = MainWindow -> new ; $mw -> title ( \"Perl \u700f\u89bd\u5668\" ); $f = $mw -> Frame -> pack ( - side => 'top' , - fill => 'x' ); # IP Address/or URL $f -> Label ( - text => \"\u7db2\u5740:\" ) -> pack ( - side => 'left' , - anchor => 'w' ); $f -> Entry ( - textvariable => \\ $url_name ) -> pack ( - side => 'left' , - anchor => 'w' , - fill => 'x' , - expand => 1 ); # Button $f -> Button ( - text => \"Exit\" , - relief => 'ridge' , - command => sub { exit ; } ) -> pack ( - side => 'right' ); $f -> Button ( - text => \"\u9996\u9801\" , - relief => 'ridge' , - command => \\& home_web ) -> pack ( - side => 'right' , - anchor => 'e' ); $f -> Button ( - text => \"\u9023\u7d50\" , - relief => 'ridge' , - command => \\& link_web ) -> pack ( - side => 'right' , - anchor => 'e' ); # Display Area $t = $mw -> Scrolled ( qw/Text -setgrid true -width 60 -height 24 -scrollbars e -wrap word/ , - font => $FONT ); $t -> pack ( qw/-expand yes -fill both/ ); # Set up display styles my ( @bold , @normal , $tag ); if ( $mw -> depth > 1 ) { @bold = ( - background => '#43ce80' , qw/-relief raised -borderwidth 1/ ); @normal = ( - background => undef , qw/-relief flat/ ); } else { @bold = ( qw/-foreground white -background black/ ); @normal = ( - foreground => undef , - background => undef ); } MainLoop ; ############################################################################### ## GUI Layout [ End ] ############################################################################### # ................... Access Website ........................................ sub link_web { @ARGV = split /\\// , $url_name ; & show_page ; } # .............. Default Portal Site is \"www.yahoo.com.tw\" ................ sub home_web { @ARGV = qw(www.yahoo.com.tw /index.html) ; & show_page ; } sub linkSite { @ARGV = @_ ; $_ = $ARGV [ 0 ]; s #/##; $ARGV [ 0 ] = $_ ; $ARGV [ 1 ] = \"/index.html\" ; $t -> delete ( \"1.0\" , \"end\" ); & show_page ; } # ........... Grab the http pages from http server ...................... sub show_page { ## \u4e0b\u65b9\u986f\u793a\u9023\u63a5\u7db2\u5740 $info = \"\u76ee\u524d\u9023\u63a5 '$url_name'\" ; ## \u6e05\u9664\u986f\u793a\u5340 $t -> delete ( \"1.0\" , \"end\" ); ## \u6aa2\u67e5\u7db2\u5740\u662f\u5426\u6b63\u78ba unless ( @ARGV > 1 ) { die \"usage: $0 host document ...\\n\" } $host = shift ( @ARGV ); foreach $document ( @ARGV ) { #\u4f7f\u7528 socket \u9023\u63a5 http server $remote = IO::Socket::INET -> new ( Proto => \"tcp\" , PeerAddr => $host , PeerPort => \"http(80)\" ,); unless ( $remote ){ die \"cannot connect to http daemon on $host\" } $remote -> autoflush ( 1 ); ## \u8207 http \u4ea4\u8ac7 \u6293\u53d6\u7db2\u9801 print $remote \"GET /$document HTTP/1.0\\n\\n\" ; $counter = 0 ; #\u4f7f HTML \u7684 A Tag \u4f5c\u7528 while ( <$remote> ){ #\u53bb\u6389 A Tag \u4e2d\u4e0d\u7528\u986f\u793a\u7684\u5b57\u5143 if ( index ( $_ , \"<a href=\" ) == 0 ) { ~ s #<a href=\"http://##; $where = index ( $_ , \">\" ); $tt1 = substr ( $_ , 0 ,( $where - 1 )); ~ s #$tt1\">##; $where = index ( $_ , \"</a>\" ); $tt2 = substr ( $_ , 0 , $where ); $counter ++ ; $aTag { 'd' . $counter } = $tt1 ; $t -> insert ( 'end' , $tt2 . \"\\n\" , 'd' . $counter ); } #\u76ee\u524d\u5176\u4ed6\u7684 HTML Tag \u76f4\u63a5\u986f\u793a else { $t -> insert ( \"end\" , $_ );} } # ................ Display A tag ................................... foreach $tag ( %aTag ) { ## \u986f\u793a A tag \u4e26\u4e14\u6e38\u6a19\u79fb\u5230 A tag \u6703\u5c07 \u8a72 A tag \u5b57\u4e32\u80cc\u666f\u8b8a\u6210 \u7da0\u8272 $t -> tag ( 'bind' , $tag , '<Any-Enter>' => sub { shift -> tag ( 'configure' , $tag , @bold )}); $t -> tag ( 'bind' , $tag , '<Any-Leave>' => sub { shift -> tag ( 'configure' , $tag , @normal )}); ## \u4f7f A tag \u8d85\u9023\u7d50 \u529f\u80fd\u751f\u6548 $t -> tag ( \"bind\" , $tag , \"<1>\" => sub { & linkSite ( $aTag { $tag })}); } $t -> mark ( qw/set insert 0.0/ ); close $remote ; } }","title":"Programming"},{"location":"net/hypertext-transfer-protocol/#advanced","text":"User can press F12 to observative how Chrome works step-by-step. $author: Jin-Wen (Ed) Lai $date: Oct. 2001 $revised: Mar. 2018 $keywords: computer, networks, network, http, RFC.","title":"Advanced"},{"location":"net/simple-mail-transfer-protocol-and-post-office-protocol/","text":"Simple Mail Transfer Protocol and Post Office Protocol - Version 3 (SMTP and POP3) Read the E-mail materials, do the experiments: Send an E-mail without using application S/W. Connect to your POP3 server (not the POP3 client which is yourself) and experience the POP3 commands (e.g. message retrivel ). Concept Users use below applications Email Agents (e.q. outlook...) to access the Mail Services but we will not use any client-side applications to access above Services. instead of telnet . It will help us to know more detail of each low-level protocol. Requirements Red-Hat Linux 6.2 + KDE/X-window SMTP Step-by-Step of telnet Login NTUT's Telnet Server Telnet to NTUT's SNMP Services (TCP Port 25) # telnet 140.124.13.2 25 Issue SMTP Commands STEP PROMPT DESCRIPTION 1 helo ntut.edu.tw Initiate the SMTP conversation 2 MAIL FROM: s9360511@ntut.edu.tw Specifies the e-mail address of the sender 3 RCPT TO: s9360511@ntut.edu.tw Specifies the e-mail address of the recipient (send to myself in this case 4 DATA Start the transfer of the message contents, then Server will answer go ahead 5 . A single dot ( . ) must be sent in a line by itself . ,then Server will answer mail's number in queue 6 QUIT Exit the Mail Server Screenshot Screenshot POP3 Step-by-Step Following above step. After waiting around 10 minutes (depends on setting of Mail Server), we can test POP3 Service. Login NTUT's Telnet Server Telnet to NTUT's POP3 Services (TCP Port 110) # telnet 140.124.13.2 110 POP3 Command STEP PROMPT DESCRIPTION 1 user s9360511 Specifies the USERNAME 2 pass Specifies the PASSWORD 3 LIST List Message (how many) and size of message (according to above, my will have one mail at least 4 RETR 1 Retrieve selected message 1 5 DELE 1 Delete selected message 1 if we will not keep it 6 LIST List Message (how many), there is no message now, beacuse will delete it before 7 QUIT Exit POP3 Service Screenshot Screenshot $author: Ching-Wen (Ed) Lai $date: Oct. 2001 $revised: Mar. 2018 $keywords: computer, networks, network, http, RFC.","title":"Simple Mail Transfer Protocol and Post Office Protocol - Version 3 (IMAP/POP3)"},{"location":"net/simple-mail-transfer-protocol-and-post-office-protocol/#simple-mail-transfer-protocol-and-post-office-protocol-version-3-smtp-and-pop3","text":"Read the E-mail materials, do the experiments: Send an E-mail without using application S/W. Connect to your POP3 server (not the POP3 client which is yourself) and experience the POP3 commands (e.g. message retrivel ).","title":"Simple Mail Transfer Protocol and Post Office Protocol - Version 3 (SMTP and POP3)"},{"location":"net/simple-mail-transfer-protocol-and-post-office-protocol/#concept","text":"Users use below applications Email Agents (e.q. outlook...) to access the Mail Services but we will not use any client-side applications to access above Services. instead of telnet . It will help us to know more detail of each low-level protocol.","title":"Concept"},{"location":"net/simple-mail-transfer-protocol-and-post-office-protocol/#requirements","text":"Red-Hat Linux 6.2 + KDE/X-window","title":"Requirements"},{"location":"net/simple-mail-transfer-protocol-and-post-office-protocol/#smtp","text":"","title":"SMTP"},{"location":"net/simple-mail-transfer-protocol-and-post-office-protocol/#step-by-step-of-telnet","text":"Login NTUT's Telnet Server Telnet to NTUT's SNMP Services (TCP Port 25) # telnet 140.124.13.2 25 Issue SMTP Commands STEP PROMPT DESCRIPTION 1 helo ntut.edu.tw Initiate the SMTP conversation 2 MAIL FROM: s9360511@ntut.edu.tw Specifies the e-mail address of the sender 3 RCPT TO: s9360511@ntut.edu.tw Specifies the e-mail address of the recipient (send to myself in this case 4 DATA Start the transfer of the message contents, then Server will answer go ahead 5 . A single dot ( . ) must be sent in a line by itself . ,then Server will answer mail's number in queue 6 QUIT Exit the Mail Server","title":"Step-by-Step of telnet"},{"location":"net/simple-mail-transfer-protocol-and-post-office-protocol/#screenshot","text":"Screenshot","title":"Screenshot"},{"location":"net/simple-mail-transfer-protocol-and-post-office-protocol/#pop3","text":"","title":"POP3"},{"location":"net/simple-mail-transfer-protocol-and-post-office-protocol/#step-by-step","text":"Following above step. After waiting around 10 minutes (depends on setting of Mail Server), we can test POP3 Service. Login NTUT's Telnet Server Telnet to NTUT's POP3 Services (TCP Port 110) # telnet 140.124.13.2 110 POP3 Command STEP PROMPT DESCRIPTION 1 user s9360511 Specifies the USERNAME 2 pass Specifies the PASSWORD 3 LIST List Message (how many) and size of message (according to above, my will have one mail at least 4 RETR 1 Retrieve selected message 1 5 DELE 1 Delete selected message 1 if we will not keep it 6 LIST List Message (how many), there is no message now, beacuse will delete it before 7 QUIT Exit POP3 Service","title":"Step-by-Step"},{"location":"net/simple-mail-transfer-protocol-and-post-office-protocol/#screenshot_1","text":"Screenshot $author: Ching-Wen (Ed) Lai $date: Oct. 2001 $revised: Mar. 2018 $keywords: computer, networks, network, http, RFC.","title":"Screenshot"},{"location":"os/","text":"Operating Systems Compiler An Assembler Compiler ( perl )","title":"Operating Systems"},{"location":"os/#operating-systems","text":"","title":"Operating Systems"},{"location":"os/#compiler","text":"","title":"Compiler"},{"location":"os/#an-assembler-compiler-perl","text":"","title":"An Assembler Compiler ( perl )"},{"location":"os/assembler-compiler/","text":"An Assembler Compiler An implementation of an Assembler Compiler. Concept \u70ba\u4f55\u4f60\u6703\u64b0\u5beb \u53ef\u4e0a\u7db2\u64cd\u4f5c\u7684 \u7d44\u8b6f\u5668? \u4f7f\u7528\u4e2d\u9ad8\u968e\u8a9e\u8a00( C/Basic...) \u8207\u4f4e\u968e\u8a9e\u8a00(\u7d44\u5408\u8a9e\u8a00)\u4f86\u64b0\u5beb\u7684\u7bc4\u4f8b\u592a\u591a\u4e86\uff0c\u6211\u60f3\u8a66\u7528\u8207\u7db2\u8def\u7d50\u5408\u6027\u8f03\u4f73\u7684\u8a9e\u8a00\u4f86\u5beb\u7d44\u8b6f\u5668\u3002 \u53ef\u55ae\u6a5f\u64cd\u4f5c\u4ea6\u53ef\u4e0a\u7db2\u64cd\u4f5c\uff0c\u55ae\u6a5f\u7248\u4e26\u53ef\u767c\u5c55\u51fa DOS\u6a21\u5f0f\u76f8\u5bb9/Win9X/WinNT/Unix-like(Linux,FreeBSD...)\u5e73\u53f0\u7684\u7d42\u7aef\u6a5f\u6a21\u5f0f\u6216 X-window\u4e0b \u7686\u53ef\u4f7f\u7528\u7684\u8de8\u5e73\u53f0\u7d44\u8b6f\u5668\u3002 Script\u8a9e\u8a00\u9019\u9ebc\u591a(JSP,PHP,ASP...)\uff0c \u70ba\u4f55\u4f60\u6703\u9078\u7528 Perl/CGI \u4f86\u64b0\u5beb? \u57fa\u672c\u4e0a\uff0cPerl \u662f\u514d\u8cbb\u529f\u80fd\u5f37\u5927\u4e14\u8de8\u5e73\u53f0\u7684\u8a9e\u8a00\uff0c\u4e14\u5176 \u5b57\u4e32\u6bd4\u8f03(\u6a23\u677f\u6bd4\u5c0d) \u8207 Hash Table \u7684\u80fd\u529b \uff0c\u8b93\u6211\u5728\u77ed\u6642\u9593\u5167\u958b\u767c\u51fa \u6838\u5fc3\u7a0b\u5f0f\u78bc\u4e0d\u8d85\u904e200\u884c\u7684\u7d44\u8b6f\u5668\uff0c\u4e26\u4e14\u53ef\u4f9d\u7167\u9700\u6c42\u958b\u767c\u51fa\u55ae\u6a5f\u7248(\u7121\u7db2\u8def\u74b0\u5883)\u8207\u7db2\u8def\u7248(\u6709\u7db2\u8def\u74b0\u5883)\u7684\u7d44\u8b6f\u5668\u3002PHP\u662f\u4e0d\u932f\u7684 Script \u8a9e\u8a00\uff0c \u6709\u6a5f\u6703\u7684\u8a71\uff0c\u4e5f\u53ef\u8a66\u8a66\u770b\u3002 \u53ef\u8aaa\u660e\u4e00\u4e0b \u4f60\u7684\u7d44\u8b6f\u5668\u7684\u958b\u767c\u6d41\u7a0b\uff1f \u5148\u958b\u767c\u51fa \u55ae\u6a5f\u7248\u6838\u5fc3\u7a0b\u5f0f\uff0c \u518d\u52a0\u5f37\u70ba\u7db2\u8def\u7248\u7a0b\u5f0f(PERL/CGI) \u6216 \u55ae\u6a5f\u7248GUI \u7a0b\u5f0f(PERL/TK) \u3002 \u53ef\u8aaa\u660e\u4e00\u4e0b \u4f60\u7684\u7d44\u8b6f\u5668\u7684\u958b\u767c\u6d41\u7a0b\uff1f * \u5148\u958b\u767c\u51fa \u55ae\u6a5f\u7248\u6838\u5fc3\u7a0b\u5f0f\uff0c \u518d\u52a0\u5f37\u70ba\u7db2\u8def\u7248\u7a0b\u5f0f(PERL/CGI) \u6216 \u55ae\u6a5f\u7248GUI \u7a0b\u5f0f(PERL/TK) \u3002 \u53ef\u8aaa\u660e\u4e00\u4e0b \u7db2\u8def\u7248\u7d44\u8b6f\u5668 \u7684\u512a\u9ede\uff1f \u53ef\u651c\u6027\u6703\u52a0\u5927 : \u53ef\u4e0a\u7db2\u57f7\u884c\u53ea\u9700\u5728\u4e00\u53f0\u6a5f\u5668\u5b89\u88dd\u7d44\u8b6f\u5668 \u5176\u4ed6\u6a5f\u5668\u4e0d\u9700\u5b89\u88dd \u53ef\u96a8\u6642\u53ef\u4e0a\u7db2\u7d44\u8b6f\u3002 \u5b78\u7fd2\u66f2\u7dda\u63d0\u9ad8 : \u53ef\u52a0\u5f37\u70ba \u642d\u914d\u7db2\u8def\u8cc7\u6599\u5eab\u7684\u529f\u80fd\uff0c \u5b78\u7fd2\u8005/\u4f7f\u7528\u8005 \u53ef\u96a8\u6642\u4e0a\u7db2\u67e5\u8a62 \u6307\u4ee4\u7684\u5b9a\u7fa9 \u3001\u8aaa\u660e\u53ca\u7528\u6cd5 \u3002 \u4e26\u53ef\u5efa\u7acb\u81ea\u5df1\u7684\u7dda\u4e0aLibrary \uff0c\u8207\u7db2\u53cb\u5206\u4eab\u81ea\u5df1\u6240\u5beb\u7684\u526f\u7a0b\u5f0f\u3001\u5de8\u96c6\u8207\u51fd\u5f0f \u3002\u52a0\u5165\u8a0e\u8ad6\u5340\u53ef\u8b93\u4f7f\u7528\u8005\u5206\u4eab\u5fc3\u5f97\u3001\u7dda\u4e0a\u767c\u554f \uff0c \u63d0\u9ad8\u5b78\u7fd2\u6548\u7387\u3002 \u7d44\u8b6f\u5668\u7248\u672c\u66f4\u65b0\u6642 : \u7576\u7d44\u8b6f\u5668\u66f4\u65b0\u7248\u672c\u6642 \uff0c\u4f7f\u7528\u8005\u4e0d\u9700\u8981\u5728 Client \u7aef\u4e00\u76f4\u5b89\u88dd/\u66f4\u65b0\uff0c\u7531Server \u7aef\u66f4\u65b0\u3002 \u64c1\u6709\u8de8\u5e73\u53f0\u57f7\u884c\u7684\u80fd\u529b : \u76ee\u524dUnix-like \u8207 Win32 \u548c \u6a5f\u5668\u7686\u53ef\u4f7f\u7528\u3002 Mac \u61c9\u8a72\u4e5f\u53ef\u4ee5\uff0c \u4e0d\u904e\u6211\u6c92\u6a5f\u5668\u8a66\u9a57\u3002 \u64c1\u6709\u8de8\u5e73\u53f0\u4f7f\u7528\u7684\u80fd\u529b : \u4e0d\u7ba1\u4f7f\u7528\u8005\u662fMac \u6216 \u5b89\u88dd MS Windows/FreeBSD/Linux OS \u7684 x86\u7684\u96fb\u8166\u3002\u53ea\u8981\u80fd \u4e0a\u7db2\u7686\u53ef\u4f7f\u7528 \u3002 \u7576\u7136 \uff0c\u56e0\u70ba\u7d44\u5408\u8a9e\u8a00\u6709\u95dc\u4fc2\u5230\u786c\u9ad4\u7684\u529f\u80fd(ex.x86\u6a5f\u5668 \u7684 INT 21...) \uff0c\u9700\u76f8\u540c\u7684\u786c\u9ad4\u624d\u53ef\u9a57\u8b49 \uff1b\u4ea6\u9700\u4f9d\u7167\u7279\u5b9a\u7684\u786c \u9ad4 \u64b0\u5beb\u7279\u5b9aI/O\u529f\u80fd\u3002 \u4e3b\u6a5f\u8a66\u9a57 : \u6709\u6642\u4f7f\u7528\u8005\u6240\u64b0\u5beb\u7684\u7a0b\u5f0f\u4e26\u7121\u932f\u8aa4 \uff0c\u4f46\u537b\u56e0\u70ba\u786c\u9ad4\u6709\u8aa4\u800c\u7121\u6cd5\u9a57\u8b49(ex.\u4e3b\u6a5f\u677fI/O\u88ab\u5176\u4ed6\u4ecb\u9762\u4f54\u53bb)\u3002 \u53ef\u642d\u914d\u4e0b\u8f09\u5668(Loader)\u4e0b\u8f09\u5230\u5c08\u5b9a\u786c\u9ad4(\u9060\u7aef\u5c08\u7528\u6e2c\u8a66\u7cfb\u7d71)\u53bb\u57f7\u884c \uff0c\u4e0d\u904e\u9019\u90e8\u5206\u529f\u80fd\u6211\u4e26\u672a\u64b0\u5beb\u3002 \u7db2\u8def\u7248\u4fbf\u5229\u6027\u883b\u9ad8\u7684 \uff0c\u90a3\u4ed6\u6709\u7f3a\u9ede\u55ce\uff1f \u6709\u7684 \u3002 \u7db2\u8def\u7248\u5728\u6c92\u6709\u7db2\u8def\u7684\u74b0\u5883\u4e0b\u4e0d\u80fd\u4f7f\u7528\u3002\u4e0d\u904e\u76ee\u524d\u96fb\u8166\u53ef\u642d\u914d PHS \u4e0a\u7db2\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u96a8\u8457\u7db2\u8def\u7684\u666e\u53ca\uff0c\u9019\u7a2e\u7f3a\u9ede\u6703\u6162\u6162\u6539\u5584\u3002 \u7db2\u8def\u7248\u5728\u591a\u4eba\u4f7f\u7528\u6642 \uff0c\u7d44\u8b6f\u901f\u5ea6\u53ef\u80fd\u6703\u8b8a\u6162 \u3002\u4e0d\u904e\u53ef\u4ee5\u52a0\u5927 Server \u7aef\u914d\u5099\u52a0\u5927\u627f\u8f09\u80fd\u529b \u8207 \u4f7f\u7528\u5206\u6563\u5f0f\u8655\u7406\u529f\u80fd \u4f86\u6539\u5584\u3002 \u4e0d\u904e\uff0c\u8001\u5be6\u8aaa \u3002\u6211\u89ba\u5f97\u4ee5\u4e0a\u5169\u9ede\uff0c\u4e26\u4e0d\u80fd\u7b97\u662f\u7f3a\u9ede\u3002 \u53e6\u5916\u786c\u9ad4\u4e0b\u8f09\u5c0d\u6620\u65b9\u5f0f(\u4e0b\u8f09\u5668\uff1bLoader)\u9700\u5206\u5e73\u53f0\u64b0\u5beb\u3002 \u5728\u55ae\u6a5f\u7248\u4e2d\u5982\u4f55\u53ea\u6563\u64ad\u57f7\u884c\u6a94\uff1f Perl \u70ba\u76f4\u8b6f\u5668\u8a9e\u8a00 \uff0c\u5728\u57f7\u884c\u9700\u6709\u5b89\u88ddPerl \u7684\u6a5f\u5668\u624d\u53ef \u3002\u4e0d\u904e\u4f60\u53ef\u4ee5\u4f7f\u7528\u53ef\u5c07Perl Script\u8f49\u6210.exe (MS Windows \u4e0b\u7684 \u57f7\u884c\u6a94) \u7684\u8edf\u9ad4\u4f86\u6563\u64ad\u3002 \u5982\u679c\u6211\u8981\u5beb\u4e00\u500b\u8a72\u7d44\u8b6f\u5668\u7528\u7684\u7dda\u4e0a\u76f4\u63a5\u7de8\u8f2f\u5668 \uff0c\u90a3\u6211\u8a72\u5982\u4f55\u4e0b\u624b\u5462\uff1f \u55ae\u6a5f\u7248\u53ef\u4f7f\u7528\u73fe\u6210\u7684 \u8a18\u4e8b\u672c \u6216 PEIII \u7b49\u7de8\u8f2f\u5668\u7de8\u8f2f \u3002\u4f60\u7576\u7136\u4e5f\u53ef\u4ee5\u7528 Perl/Visual Basic \u64b0\u5beb\u4e00\u500b\u529f\u80fd\u66f4\u5f37\u7684\u7de8\u8f2f\u5668 \u3002\u82e5\u4f60\u8981\u5beb\u4e00\u500b\u7db2\u9801\u7248\u7dda\u4e0a\u7de8\u8f2f\u5668 \uff0c\u4f60\u53ef\u4f7f\u7528JavaScript\u4f86\u5beb \uff0c\u5982\u679c\u4f60\u9700\u8981\u66f4\u5f37\u7684\u529f\u80fd\u53ef\u4f7f\u7528JavaApplet \u4f86\u5beb\uff0c \u4e26\u8207\u5f8c\u7aef\u6307\u4ee4\u8cc7\u6599\u5eab\u642d\u914d\u63d0\u4f9b\u66f4\u8c50\u5bcc\u7684GUI\u529f\u80fd\u3002 \u4f9d\u7167\u8a9e\u8a00\u7684\u6b77\u53f2\u4f86\u770b\uff0c\u5148\u6709\u6a5f\u5668\u8a9e\u8a00\uff0c \u767c\u5c55\u7d44\u5408\u8a9e\u8a00\uff0c \u518d\u6709\u4e2d\u9ad8\u968e\u8a9e\u8a00 \u3002\u6211\u7684\u610f\u601d\u662f\uff0c \u4f60\u6703\u8003\u616e\u7528\u6a5f\u5668\u8a9e\u8a00 \u6216 \u7d44\u5408\u8a9e\u8a00\u4f86\u64b0\u5beb \u7d44\u5408\u8a9e\u8a00\u7d44\u8b6f\u5668\u55ce\uff1f \u6211\u6c92\u6709\u9019\u500b\u60f3\u6cd5 \uff0c\u6253\u500b\u6bd4\u65b9\uff0c\u4eba\u985e\u751f\u706b\u7684\u6280\u8853\u662f\u5148\u6709 \u947d\u6728\u53d6\u706b \uff0c\u518d\u767c\u660e\u7528 \u4f7f\u7528\u6253\u706b\u77f3\u53d6\u706b \uff0c\u7136\u4faf\u4e00\u76f4\u6f14\u9032 \u767c\u660e\u7528\u6253\u706b\u6a5f\u6216\u5176\u4ed6\u5148\u9032\u7684\u65b9\u6cd5\u4f86\u53d6\u706b \u3002\u7528\u6a5f\u5668\u8a9e\u8a00\u6216\u7d44\u5408\u8a9e\u8a00\u4f86\u5beb\u7d44\u5408\u8a9e\u8a00\u7d44\u8b6f\u5668\u7b49\u65bc\u4f60\u73fe\u5728\u53d6\u706b\u9084\u5728\u7528\u947d\u6728\u53d6\u706b\uff0c \u65e2\u5403\u529b\u53c8\u4e0d\u8a0e\u597d \u64b0\u5beb\u901f\u5ea6\u53c8\u6162 \u3002\u9019\u6a23\u4f60\u4e86\u89e3\u6211\u7684\u610f\u601d\u5427 \u3002\u9664\u975e\u6211\u60f3\u66f4\u52a0\u935b\u934a\u81ea\u5df1\u4f4e\u968e\u8a9e\u8a00\u7684\u529f\u529b \uff0c\u5426\u5247\u6211\u662f\u4e0d\u6703\u9019\u9ebc\u4f5c\u7684\u3002 \u6211\u8a72\u5982\u4f55\u81ea\u5df1\u8a2d\u8a08\u4e00\u9846 mPU\uff0c \u4e26\u5beb\u4e00\u500b\u8a72mPU \u7684\u7d44\u8b6f\u5668\u5462\uff1f \u5c31\u4e00\u822c\u5b78\u751f\u800c\u8a00 \uff0c\u4ee5\u5168\u5ba2\u6236\u88fd\u7a0b\u4f86\u8a2d\u8a08\u4e00\u9846mPU\u4e0d\u4f46\u8cbb\u6642\u8cbb\u529b \u3002\u4e14\u5c31\u7b97\u5b8c\u6210\u4e86\u9664\u975e\u662f\u6559\u80b2\u6027\u6676\u7247\u5426\u5247\u4e5f\u96e3\u4ee5\u4e0b\u55ae\u7d66\u4ee3\u5de5\u5ee0\u3002 \u4f60\u53ef\u4ee5\u8003\u616e\u4f7f\u7528FPGA/VHDL \u4f86\u64b0\u5beb\u4e00\u9846\u5c0f\u578b mPU \uff0c\u4e26\u767c\u5c55\u8a72 mPU \u7684\u7d44\u8b6f\u5668 \u8207 \u8f09\u5165\u5668 \u3002\u5c07\u6a5f\u5668\u78bc\u8f09\u5165\u8a72mPU\u5be6\u969b\u9a57\u8b49\uff0c\u9019\u53ef\u80fd\u6703\u6bd4\u8f03\u65b9\u4fbf\u4e00\u9ede\u3002 \u53ef\u8a73\u8ff0\u4e00\u4e0b\uff0c\u82e5\u4e0d\u540c\u6a5f\u5668\u7684\u7d44\u8b6f\u5668\u8a72\u5982\u4f55\u64b0\u5beb\u55ce\uff1f \u5c0d\u65bcSun(Ultra-Enterprise) \u7684\u6a5f\u5668\u6216 VAX\u67b6\u69cb\u6a5f\u5668(DEC) x86\u7684\u6a5f\u5668(IBM)\u7b49\u6a5f\u5668\u800c\u8a00\uff0c\u7cfb\u7d71\u7a0b\u5f0f\u6709\u5206\u70ba\u8207\u786c\u9ad4\u6709\u95dc\u548c\u8207\u786c\u9ad4\u7121\u95dc\u90e8\u5206\uff0c \u53ef\u5148\u4e00\u8d77\u64b0\u5beb\u8207\u786c\u9ad4\u7121\u95dc\u90e8\u4efd\u518d\u5206\u5225\u64b0\u5beb\u8207\u786c\u9ad4\u6709\u95dc\u90e8\u5206\u3002 \u53ef\u7a0d\u5fae\u6558\u8ff0\u4e00\u4e0b\u64b0\u5beb\u7d44\u8b6f\u5668\u7684\u91cd\u9ede\uff1f \u7d44\u8b6f\u5668\u7684\u8655\u7406\u53ef\u5206\u70baPASS I \u8207 PASS II \uff0c\u5176\u4ed6\u4f9d\u7167\u6b64\u5beb\u7d44\u8b6f\u5668\u7684\u6f14\u7b97\u6cd5\u5927\u7db1\u4e0b\u53bb\u64b0\u5beb\u5373\u53ef\u3002 Requirements Sun OS Perl Demonstration There are two versions of this Assembler Compiler Online Edition Stand-alone Edition (Personal Edition) Online Edition Demo Site (It\u2019s unavailable now after I was graduated from NTUT) We will use some examples to introduce the features of this Assembler Compiler. \u9032\u5165\u7cfb\u7d71\u9996\u9801 \u9078\u64c7 (1) Upload SIC \u4e0a\u50b3\u7d44\u5408\u8a9e\u8a00\u539f\u59cb\u78bc. \u6309\u4e0b\u700f\u89bd \u9375 \u9078\u5b9a\u4f60\u7684 Client \u7aef \u7684 \u7d44\u5408\u8a9e\u8a00\u539f\u59cb\u78bc\u6a94(ex: a3.sic ) \u6309\u4e0b \u50b3\u9001\u6a94\u6848 \u4e26 \u50b3\u9001\u7d44\u5408\u8a9e\u8a00\u539f\u59cb\u78bc(ex: a3.sic )\u81f3 Server \u7aef\u3002 \u6a94\u6848 (ex: a3.sic ) \u50b3\u9001\u5b8c\u6210\u3002 \u56de Picture (1) \u9078\u64c7 (2) Assembler \u9032\u5165\u7d44\u8b6f\u6a21\u5f0f \u9078\u64c7\u8981\u7d44\u8b6f\u7684\u6a94\u6848(ex: a3.sic )\u3002 \u7d44\u8b6f\u5b8c\u6210 \u986f\u793a\u8f09\u5165\u4f4d\u5740 \u8207 \u7d44\u8b6f\u5f8c\u7684\u6a5f\u5668\u78bc \u65bc\u7db2\u9801\u4e0a. [ \u986f\u793a\u683c\u5f0f :: \u8f09\u5165\u4f4d\u5740 ==> \u6a5f\u5668\u78bc ] \u3002 \u56de Picture (1) \u9078\u64c7 (3) Machine code \u986f\u793a\u7d44\u8b6f\u5f8c\u6a5f\u5668\u78bc. \u9078\u64c7 \u525b\u525b\u5b8c\u6210\u7d44\u8b6f\u7d44\u5408\u8a9e\u8a00(ex: a3 .sic )\u7684 \u7684\u6a5f\u5668\u78bc\u6a94(ex: a3.obj ). \u986f\u793a\u6a5f\u5668\u78bc(ex: a3.obj ). Stand-alone edition \u9023\u4e0a \u5b78\u6821 Sun OS \u4e3b\u6a5f, \u8f38\u5165\u5e33\u865f\u8207\u5bc6\u78bc\u3002 $ telnet://140.124.13.2 \u7de8\u8f2f\u7d44\u5408\u8a9e\u8a00\u4e26\u5b58\u6a94\u3002 $ vim copy.sic \u7d44\u8b6f\u7d44\u5408\u8a9e\u8a00( \u5167\u5b9a \u7d44\u8b6f copy.sic \u6a94) \u5373\u53ef\u8f38\u51fa\u7d44\u8b6f\u7d50\u679c\u3002 $ perl sic.pl copy.sic \u6aa2\u8996\u6a5f\u5668\u78bc\u6a94(shell command : cat copy.obj). $ cat copy.obj Advanced \u4f60\u6240\u64b0\u5beb\u7684\u7d44\u8b6f\u5668\u9084\u6709\u5176\u4ed6\u7684\u767c\u5c55\u7a7a\u9593\u55ce\uff1f \u662f\u7684\u3002\u64b0\u5beb\u7d44\u8b6f\u5668\u53ea\u662f\u5b78\u6821\u7cfb\u7d71\u7a0b\u5f0f\u8ab2\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u4e26\u4e0d\u662f\u5168\u90e8 \uff0c\u70ba\u4e86\u6709\u6642\u9593\u5b78\u7fd2\u5176\u4ed6\u90e8\u5206\uff0c \u6211\u4e26\u6c92\u6709\u82b1\u8a31\u591a\u6642\u9593\u5beb\u7684\u7279\u5225\u5b8c\u6574 \u3002\u6240\u4ee5\u767c\u5c55\u7a7a\u9593\u883b\u5927\u7684 \uff0c\u57fa\u672c\u4e0a\u53ef\u52a0\u5f37\u4ee5\u4e0b\u7684\u529f\u80fd\u3002 \u529f\u80fd\u7684\u5b8c\u6574\u6027,\u9664\u932f\u5668\u548c... \u6539\u6210 SIC/XE \u7248 \u3002 \u4ee5 Perl/Tk \u52a0\u5165\u89aa\u548c\u6027\u66f4\u4f73\u7684 GUI \u4ecb\u9762\u3002 \u4ee5 Perl/Tk \u52a0\u5165 GUI \u7de8\u8f2f\u5668,\u4e26\u53ef\u4f9d\u984f\u8272\u5340\u5225\u5167\u90e8\u7279\u6b8a\u5b57\u4e32 \u3002 \u52a0\u5165\u865b\u6307\u4ee4\u53caM+\u78bc \u3002 Macro\u53caSub\u7684\u5ef6\u4f38... \u53ef\u4ee5\u6539\u6210\u91dd\u5c0d\u5be6\u969b\u7684 \u7cfb\u7d71 \u4f86\u5beb \u3002 \u5b8c\u6210\u8f09\u5165\u5668(Loader)\u8edf\u9ad4\u53ca\u786c\u9ad4\u90e8\u5206\u3002 Reference Operating System Concepts by Peter B. Galvin, Greg Gagne and A Silberschatz Abraham Silberschatz (Author) $author: Jin-Wen (Ed) Lai $date: May. 2001 $revised: Mar. 2018 $keywords: operating, systems, assembler, compiler, perl","title":"An Assembler Compiler"},{"location":"os/assembler-compiler/#an-assembler-compiler","text":"An implementation of an Assembler Compiler.","title":"An Assembler Compiler"},{"location":"os/assembler-compiler/#concept","text":"\u70ba\u4f55\u4f60\u6703\u64b0\u5beb \u53ef\u4e0a\u7db2\u64cd\u4f5c\u7684 \u7d44\u8b6f\u5668? \u4f7f\u7528\u4e2d\u9ad8\u968e\u8a9e\u8a00( C/Basic...) \u8207\u4f4e\u968e\u8a9e\u8a00(\u7d44\u5408\u8a9e\u8a00)\u4f86\u64b0\u5beb\u7684\u7bc4\u4f8b\u592a\u591a\u4e86\uff0c\u6211\u60f3\u8a66\u7528\u8207\u7db2\u8def\u7d50\u5408\u6027\u8f03\u4f73\u7684\u8a9e\u8a00\u4f86\u5beb\u7d44\u8b6f\u5668\u3002 \u53ef\u55ae\u6a5f\u64cd\u4f5c\u4ea6\u53ef\u4e0a\u7db2\u64cd\u4f5c\uff0c\u55ae\u6a5f\u7248\u4e26\u53ef\u767c\u5c55\u51fa DOS\u6a21\u5f0f\u76f8\u5bb9/Win9X/WinNT/Unix-like(Linux,FreeBSD...)\u5e73\u53f0\u7684\u7d42\u7aef\u6a5f\u6a21\u5f0f\u6216 X-window\u4e0b \u7686\u53ef\u4f7f\u7528\u7684\u8de8\u5e73\u53f0\u7d44\u8b6f\u5668\u3002 Script\u8a9e\u8a00\u9019\u9ebc\u591a(JSP,PHP,ASP...)\uff0c \u70ba\u4f55\u4f60\u6703\u9078\u7528 Perl/CGI \u4f86\u64b0\u5beb? \u57fa\u672c\u4e0a\uff0cPerl \u662f\u514d\u8cbb\u529f\u80fd\u5f37\u5927\u4e14\u8de8\u5e73\u53f0\u7684\u8a9e\u8a00\uff0c\u4e14\u5176 \u5b57\u4e32\u6bd4\u8f03(\u6a23\u677f\u6bd4\u5c0d) \u8207 Hash Table \u7684\u80fd\u529b \uff0c\u8b93\u6211\u5728\u77ed\u6642\u9593\u5167\u958b\u767c\u51fa \u6838\u5fc3\u7a0b\u5f0f\u78bc\u4e0d\u8d85\u904e200\u884c\u7684\u7d44\u8b6f\u5668\uff0c\u4e26\u4e14\u53ef\u4f9d\u7167\u9700\u6c42\u958b\u767c\u51fa\u55ae\u6a5f\u7248(\u7121\u7db2\u8def\u74b0\u5883)\u8207\u7db2\u8def\u7248(\u6709\u7db2\u8def\u74b0\u5883)\u7684\u7d44\u8b6f\u5668\u3002PHP\u662f\u4e0d\u932f\u7684 Script \u8a9e\u8a00\uff0c \u6709\u6a5f\u6703\u7684\u8a71\uff0c\u4e5f\u53ef\u8a66\u8a66\u770b\u3002 \u53ef\u8aaa\u660e\u4e00\u4e0b \u4f60\u7684\u7d44\u8b6f\u5668\u7684\u958b\u767c\u6d41\u7a0b\uff1f \u5148\u958b\u767c\u51fa \u55ae\u6a5f\u7248\u6838\u5fc3\u7a0b\u5f0f\uff0c \u518d\u52a0\u5f37\u70ba\u7db2\u8def\u7248\u7a0b\u5f0f(PERL/CGI) \u6216 \u55ae\u6a5f\u7248GUI \u7a0b\u5f0f(PERL/TK) \u3002 \u53ef\u8aaa\u660e\u4e00\u4e0b \u4f60\u7684\u7d44\u8b6f\u5668\u7684\u958b\u767c\u6d41\u7a0b\uff1f * \u5148\u958b\u767c\u51fa \u55ae\u6a5f\u7248\u6838\u5fc3\u7a0b\u5f0f\uff0c \u518d\u52a0\u5f37\u70ba\u7db2\u8def\u7248\u7a0b\u5f0f(PERL/CGI) \u6216 \u55ae\u6a5f\u7248GUI \u7a0b\u5f0f(PERL/TK) \u3002 \u53ef\u8aaa\u660e\u4e00\u4e0b \u7db2\u8def\u7248\u7d44\u8b6f\u5668 \u7684\u512a\u9ede\uff1f \u53ef\u651c\u6027\u6703\u52a0\u5927 : \u53ef\u4e0a\u7db2\u57f7\u884c\u53ea\u9700\u5728\u4e00\u53f0\u6a5f\u5668\u5b89\u88dd\u7d44\u8b6f\u5668 \u5176\u4ed6\u6a5f\u5668\u4e0d\u9700\u5b89\u88dd \u53ef\u96a8\u6642\u53ef\u4e0a\u7db2\u7d44\u8b6f\u3002 \u5b78\u7fd2\u66f2\u7dda\u63d0\u9ad8 : \u53ef\u52a0\u5f37\u70ba \u642d\u914d\u7db2\u8def\u8cc7\u6599\u5eab\u7684\u529f\u80fd\uff0c \u5b78\u7fd2\u8005/\u4f7f\u7528\u8005 \u53ef\u96a8\u6642\u4e0a\u7db2\u67e5\u8a62 \u6307\u4ee4\u7684\u5b9a\u7fa9 \u3001\u8aaa\u660e\u53ca\u7528\u6cd5 \u3002 \u4e26\u53ef\u5efa\u7acb\u81ea\u5df1\u7684\u7dda\u4e0aLibrary \uff0c\u8207\u7db2\u53cb\u5206\u4eab\u81ea\u5df1\u6240\u5beb\u7684\u526f\u7a0b\u5f0f\u3001\u5de8\u96c6\u8207\u51fd\u5f0f \u3002\u52a0\u5165\u8a0e\u8ad6\u5340\u53ef\u8b93\u4f7f\u7528\u8005\u5206\u4eab\u5fc3\u5f97\u3001\u7dda\u4e0a\u767c\u554f \uff0c \u63d0\u9ad8\u5b78\u7fd2\u6548\u7387\u3002 \u7d44\u8b6f\u5668\u7248\u672c\u66f4\u65b0\u6642 : \u7576\u7d44\u8b6f\u5668\u66f4\u65b0\u7248\u672c\u6642 \uff0c\u4f7f\u7528\u8005\u4e0d\u9700\u8981\u5728 Client \u7aef\u4e00\u76f4\u5b89\u88dd/\u66f4\u65b0\uff0c\u7531Server \u7aef\u66f4\u65b0\u3002 \u64c1\u6709\u8de8\u5e73\u53f0\u57f7\u884c\u7684\u80fd\u529b : \u76ee\u524dUnix-like \u8207 Win32 \u548c \u6a5f\u5668\u7686\u53ef\u4f7f\u7528\u3002 Mac \u61c9\u8a72\u4e5f\u53ef\u4ee5\uff0c \u4e0d\u904e\u6211\u6c92\u6a5f\u5668\u8a66\u9a57\u3002 \u64c1\u6709\u8de8\u5e73\u53f0\u4f7f\u7528\u7684\u80fd\u529b : \u4e0d\u7ba1\u4f7f\u7528\u8005\u662fMac \u6216 \u5b89\u88dd MS Windows/FreeBSD/Linux OS \u7684 x86\u7684\u96fb\u8166\u3002\u53ea\u8981\u80fd \u4e0a\u7db2\u7686\u53ef\u4f7f\u7528 \u3002 \u7576\u7136 \uff0c\u56e0\u70ba\u7d44\u5408\u8a9e\u8a00\u6709\u95dc\u4fc2\u5230\u786c\u9ad4\u7684\u529f\u80fd(ex.x86\u6a5f\u5668 \u7684 INT 21...) \uff0c\u9700\u76f8\u540c\u7684\u786c\u9ad4\u624d\u53ef\u9a57\u8b49 \uff1b\u4ea6\u9700\u4f9d\u7167\u7279\u5b9a\u7684\u786c \u9ad4 \u64b0\u5beb\u7279\u5b9aI/O\u529f\u80fd\u3002 \u4e3b\u6a5f\u8a66\u9a57 : \u6709\u6642\u4f7f\u7528\u8005\u6240\u64b0\u5beb\u7684\u7a0b\u5f0f\u4e26\u7121\u932f\u8aa4 \uff0c\u4f46\u537b\u56e0\u70ba\u786c\u9ad4\u6709\u8aa4\u800c\u7121\u6cd5\u9a57\u8b49(ex.\u4e3b\u6a5f\u677fI/O\u88ab\u5176\u4ed6\u4ecb\u9762\u4f54\u53bb)\u3002 \u53ef\u642d\u914d\u4e0b\u8f09\u5668(Loader)\u4e0b\u8f09\u5230\u5c08\u5b9a\u786c\u9ad4(\u9060\u7aef\u5c08\u7528\u6e2c\u8a66\u7cfb\u7d71)\u53bb\u57f7\u884c \uff0c\u4e0d\u904e\u9019\u90e8\u5206\u529f\u80fd\u6211\u4e26\u672a\u64b0\u5beb\u3002 \u7db2\u8def\u7248\u4fbf\u5229\u6027\u883b\u9ad8\u7684 \uff0c\u90a3\u4ed6\u6709\u7f3a\u9ede\u55ce\uff1f \u6709\u7684 \u3002 \u7db2\u8def\u7248\u5728\u6c92\u6709\u7db2\u8def\u7684\u74b0\u5883\u4e0b\u4e0d\u80fd\u4f7f\u7528\u3002\u4e0d\u904e\u76ee\u524d\u96fb\u8166\u53ef\u642d\u914d PHS \u4e0a\u7db2\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u96a8\u8457\u7db2\u8def\u7684\u666e\u53ca\uff0c\u9019\u7a2e\u7f3a\u9ede\u6703\u6162\u6162\u6539\u5584\u3002 \u7db2\u8def\u7248\u5728\u591a\u4eba\u4f7f\u7528\u6642 \uff0c\u7d44\u8b6f\u901f\u5ea6\u53ef\u80fd\u6703\u8b8a\u6162 \u3002\u4e0d\u904e\u53ef\u4ee5\u52a0\u5927 Server \u7aef\u914d\u5099\u52a0\u5927\u627f\u8f09\u80fd\u529b \u8207 \u4f7f\u7528\u5206\u6563\u5f0f\u8655\u7406\u529f\u80fd \u4f86\u6539\u5584\u3002 \u4e0d\u904e\uff0c\u8001\u5be6\u8aaa \u3002\u6211\u89ba\u5f97\u4ee5\u4e0a\u5169\u9ede\uff0c\u4e26\u4e0d\u80fd\u7b97\u662f\u7f3a\u9ede\u3002 \u53e6\u5916\u786c\u9ad4\u4e0b\u8f09\u5c0d\u6620\u65b9\u5f0f(\u4e0b\u8f09\u5668\uff1bLoader)\u9700\u5206\u5e73\u53f0\u64b0\u5beb\u3002 \u5728\u55ae\u6a5f\u7248\u4e2d\u5982\u4f55\u53ea\u6563\u64ad\u57f7\u884c\u6a94\uff1f Perl \u70ba\u76f4\u8b6f\u5668\u8a9e\u8a00 \uff0c\u5728\u57f7\u884c\u9700\u6709\u5b89\u88ddPerl \u7684\u6a5f\u5668\u624d\u53ef \u3002\u4e0d\u904e\u4f60\u53ef\u4ee5\u4f7f\u7528\u53ef\u5c07Perl Script\u8f49\u6210.exe (MS Windows \u4e0b\u7684 \u57f7\u884c\u6a94) \u7684\u8edf\u9ad4\u4f86\u6563\u64ad\u3002 \u5982\u679c\u6211\u8981\u5beb\u4e00\u500b\u8a72\u7d44\u8b6f\u5668\u7528\u7684\u7dda\u4e0a\u76f4\u63a5\u7de8\u8f2f\u5668 \uff0c\u90a3\u6211\u8a72\u5982\u4f55\u4e0b\u624b\u5462\uff1f \u55ae\u6a5f\u7248\u53ef\u4f7f\u7528\u73fe\u6210\u7684 \u8a18\u4e8b\u672c \u6216 PEIII \u7b49\u7de8\u8f2f\u5668\u7de8\u8f2f \u3002\u4f60\u7576\u7136\u4e5f\u53ef\u4ee5\u7528 Perl/Visual Basic \u64b0\u5beb\u4e00\u500b\u529f\u80fd\u66f4\u5f37\u7684\u7de8\u8f2f\u5668 \u3002\u82e5\u4f60\u8981\u5beb\u4e00\u500b\u7db2\u9801\u7248\u7dda\u4e0a\u7de8\u8f2f\u5668 \uff0c\u4f60\u53ef\u4f7f\u7528JavaScript\u4f86\u5beb \uff0c\u5982\u679c\u4f60\u9700\u8981\u66f4\u5f37\u7684\u529f\u80fd\u53ef\u4f7f\u7528JavaApplet \u4f86\u5beb\uff0c \u4e26\u8207\u5f8c\u7aef\u6307\u4ee4\u8cc7\u6599\u5eab\u642d\u914d\u63d0\u4f9b\u66f4\u8c50\u5bcc\u7684GUI\u529f\u80fd\u3002 \u4f9d\u7167\u8a9e\u8a00\u7684\u6b77\u53f2\u4f86\u770b\uff0c\u5148\u6709\u6a5f\u5668\u8a9e\u8a00\uff0c \u767c\u5c55\u7d44\u5408\u8a9e\u8a00\uff0c \u518d\u6709\u4e2d\u9ad8\u968e\u8a9e\u8a00 \u3002\u6211\u7684\u610f\u601d\u662f\uff0c \u4f60\u6703\u8003\u616e\u7528\u6a5f\u5668\u8a9e\u8a00 \u6216 \u7d44\u5408\u8a9e\u8a00\u4f86\u64b0\u5beb \u7d44\u5408\u8a9e\u8a00\u7d44\u8b6f\u5668\u55ce\uff1f \u6211\u6c92\u6709\u9019\u500b\u60f3\u6cd5 \uff0c\u6253\u500b\u6bd4\u65b9\uff0c\u4eba\u985e\u751f\u706b\u7684\u6280\u8853\u662f\u5148\u6709 \u947d\u6728\u53d6\u706b \uff0c\u518d\u767c\u660e\u7528 \u4f7f\u7528\u6253\u706b\u77f3\u53d6\u706b \uff0c\u7136\u4faf\u4e00\u76f4\u6f14\u9032 \u767c\u660e\u7528\u6253\u706b\u6a5f\u6216\u5176\u4ed6\u5148\u9032\u7684\u65b9\u6cd5\u4f86\u53d6\u706b \u3002\u7528\u6a5f\u5668\u8a9e\u8a00\u6216\u7d44\u5408\u8a9e\u8a00\u4f86\u5beb\u7d44\u5408\u8a9e\u8a00\u7d44\u8b6f\u5668\u7b49\u65bc\u4f60\u73fe\u5728\u53d6\u706b\u9084\u5728\u7528\u947d\u6728\u53d6\u706b\uff0c \u65e2\u5403\u529b\u53c8\u4e0d\u8a0e\u597d \u64b0\u5beb\u901f\u5ea6\u53c8\u6162 \u3002\u9019\u6a23\u4f60\u4e86\u89e3\u6211\u7684\u610f\u601d\u5427 \u3002\u9664\u975e\u6211\u60f3\u66f4\u52a0\u935b\u934a\u81ea\u5df1\u4f4e\u968e\u8a9e\u8a00\u7684\u529f\u529b \uff0c\u5426\u5247\u6211\u662f\u4e0d\u6703\u9019\u9ebc\u4f5c\u7684\u3002 \u6211\u8a72\u5982\u4f55\u81ea\u5df1\u8a2d\u8a08\u4e00\u9846 mPU\uff0c \u4e26\u5beb\u4e00\u500b\u8a72mPU \u7684\u7d44\u8b6f\u5668\u5462\uff1f \u5c31\u4e00\u822c\u5b78\u751f\u800c\u8a00 \uff0c\u4ee5\u5168\u5ba2\u6236\u88fd\u7a0b\u4f86\u8a2d\u8a08\u4e00\u9846mPU\u4e0d\u4f46\u8cbb\u6642\u8cbb\u529b \u3002\u4e14\u5c31\u7b97\u5b8c\u6210\u4e86\u9664\u975e\u662f\u6559\u80b2\u6027\u6676\u7247\u5426\u5247\u4e5f\u96e3\u4ee5\u4e0b\u55ae\u7d66\u4ee3\u5de5\u5ee0\u3002 \u4f60\u53ef\u4ee5\u8003\u616e\u4f7f\u7528FPGA/VHDL \u4f86\u64b0\u5beb\u4e00\u9846\u5c0f\u578b mPU \uff0c\u4e26\u767c\u5c55\u8a72 mPU \u7684\u7d44\u8b6f\u5668 \u8207 \u8f09\u5165\u5668 \u3002\u5c07\u6a5f\u5668\u78bc\u8f09\u5165\u8a72mPU\u5be6\u969b\u9a57\u8b49\uff0c\u9019\u53ef\u80fd\u6703\u6bd4\u8f03\u65b9\u4fbf\u4e00\u9ede\u3002 \u53ef\u8a73\u8ff0\u4e00\u4e0b\uff0c\u82e5\u4e0d\u540c\u6a5f\u5668\u7684\u7d44\u8b6f\u5668\u8a72\u5982\u4f55\u64b0\u5beb\u55ce\uff1f \u5c0d\u65bcSun(Ultra-Enterprise) \u7684\u6a5f\u5668\u6216 VAX\u67b6\u69cb\u6a5f\u5668(DEC) x86\u7684\u6a5f\u5668(IBM)\u7b49\u6a5f\u5668\u800c\u8a00\uff0c\u7cfb\u7d71\u7a0b\u5f0f\u6709\u5206\u70ba\u8207\u786c\u9ad4\u6709\u95dc\u548c\u8207\u786c\u9ad4\u7121\u95dc\u90e8\u5206\uff0c \u53ef\u5148\u4e00\u8d77\u64b0\u5beb\u8207\u786c\u9ad4\u7121\u95dc\u90e8\u4efd\u518d\u5206\u5225\u64b0\u5beb\u8207\u786c\u9ad4\u6709\u95dc\u90e8\u5206\u3002 \u53ef\u7a0d\u5fae\u6558\u8ff0\u4e00\u4e0b\u64b0\u5beb\u7d44\u8b6f\u5668\u7684\u91cd\u9ede\uff1f \u7d44\u8b6f\u5668\u7684\u8655\u7406\u53ef\u5206\u70baPASS I \u8207 PASS II \uff0c\u5176\u4ed6\u4f9d\u7167\u6b64\u5beb\u7d44\u8b6f\u5668\u7684\u6f14\u7b97\u6cd5\u5927\u7db1\u4e0b\u53bb\u64b0\u5beb\u5373\u53ef\u3002","title":"Concept"},{"location":"os/assembler-compiler/#requirements","text":"Sun OS Perl","title":"Requirements"},{"location":"os/assembler-compiler/#demonstration","text":"There are two versions of this Assembler Compiler Online Edition Stand-alone Edition (Personal Edition)","title":"Demonstration"},{"location":"os/assembler-compiler/#online-edition","text":"Demo Site (It\u2019s unavailable now after I was graduated from NTUT) We will use some examples to introduce the features of this Assembler Compiler. \u9032\u5165\u7cfb\u7d71\u9996\u9801 \u9078\u64c7 (1) Upload SIC \u4e0a\u50b3\u7d44\u5408\u8a9e\u8a00\u539f\u59cb\u78bc. \u6309\u4e0b\u700f\u89bd \u9375 \u9078\u5b9a\u4f60\u7684 Client \u7aef \u7684 \u7d44\u5408\u8a9e\u8a00\u539f\u59cb\u78bc\u6a94(ex: a3.sic ) \u6309\u4e0b \u50b3\u9001\u6a94\u6848 \u4e26 \u50b3\u9001\u7d44\u5408\u8a9e\u8a00\u539f\u59cb\u78bc(ex: a3.sic )\u81f3 Server \u7aef\u3002 \u6a94\u6848 (ex: a3.sic ) \u50b3\u9001\u5b8c\u6210\u3002 \u56de Picture (1) \u9078\u64c7 (2) Assembler \u9032\u5165\u7d44\u8b6f\u6a21\u5f0f \u9078\u64c7\u8981\u7d44\u8b6f\u7684\u6a94\u6848(ex: a3.sic )\u3002 \u7d44\u8b6f\u5b8c\u6210 \u986f\u793a\u8f09\u5165\u4f4d\u5740 \u8207 \u7d44\u8b6f\u5f8c\u7684\u6a5f\u5668\u78bc \u65bc\u7db2\u9801\u4e0a. [ \u986f\u793a\u683c\u5f0f :: \u8f09\u5165\u4f4d\u5740 ==> \u6a5f\u5668\u78bc ] \u3002 \u56de Picture (1) \u9078\u64c7 (3) Machine code \u986f\u793a\u7d44\u8b6f\u5f8c\u6a5f\u5668\u78bc. \u9078\u64c7 \u525b\u525b\u5b8c\u6210\u7d44\u8b6f\u7d44\u5408\u8a9e\u8a00(ex: a3 .sic )\u7684 \u7684\u6a5f\u5668\u78bc\u6a94(ex: a3.obj ). \u986f\u793a\u6a5f\u5668\u78bc(ex: a3.obj ).","title":"Online Edition"},{"location":"os/assembler-compiler/#stand-alone-edition","text":"\u9023\u4e0a \u5b78\u6821 Sun OS \u4e3b\u6a5f, \u8f38\u5165\u5e33\u865f\u8207\u5bc6\u78bc\u3002 $ telnet://140.124.13.2 \u7de8\u8f2f\u7d44\u5408\u8a9e\u8a00\u4e26\u5b58\u6a94\u3002 $ vim copy.sic \u7d44\u8b6f\u7d44\u5408\u8a9e\u8a00( \u5167\u5b9a \u7d44\u8b6f copy.sic \u6a94) \u5373\u53ef\u8f38\u51fa\u7d44\u8b6f\u7d50\u679c\u3002 $ perl sic.pl copy.sic \u6aa2\u8996\u6a5f\u5668\u78bc\u6a94(shell command : cat copy.obj). $ cat copy.obj","title":"Stand-alone edition"},{"location":"os/assembler-compiler/#advanced","text":"\u4f60\u6240\u64b0\u5beb\u7684\u7d44\u8b6f\u5668\u9084\u6709\u5176\u4ed6\u7684\u767c\u5c55\u7a7a\u9593\u55ce\uff1f \u662f\u7684\u3002\u64b0\u5beb\u7d44\u8b6f\u5668\u53ea\u662f\u5b78\u6821\u7cfb\u7d71\u7a0b\u5f0f\u8ab2\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u4e26\u4e0d\u662f\u5168\u90e8 \uff0c\u70ba\u4e86\u6709\u6642\u9593\u5b78\u7fd2\u5176\u4ed6\u90e8\u5206\uff0c \u6211\u4e26\u6c92\u6709\u82b1\u8a31\u591a\u6642\u9593\u5beb\u7684\u7279\u5225\u5b8c\u6574 \u3002\u6240\u4ee5\u767c\u5c55\u7a7a\u9593\u883b\u5927\u7684 \uff0c\u57fa\u672c\u4e0a\u53ef\u52a0\u5f37\u4ee5\u4e0b\u7684\u529f\u80fd\u3002 \u529f\u80fd\u7684\u5b8c\u6574\u6027,\u9664\u932f\u5668\u548c... \u6539\u6210 SIC/XE \u7248 \u3002 \u4ee5 Perl/Tk \u52a0\u5165\u89aa\u548c\u6027\u66f4\u4f73\u7684 GUI \u4ecb\u9762\u3002 \u4ee5 Perl/Tk \u52a0\u5165 GUI \u7de8\u8f2f\u5668,\u4e26\u53ef\u4f9d\u984f\u8272\u5340\u5225\u5167\u90e8\u7279\u6b8a\u5b57\u4e32 \u3002 \u52a0\u5165\u865b\u6307\u4ee4\u53caM+\u78bc \u3002 Macro\u53caSub\u7684\u5ef6\u4f38... \u53ef\u4ee5\u6539\u6210\u91dd\u5c0d\u5be6\u969b\u7684 \u7cfb\u7d71 \u4f86\u5beb \u3002 \u5b8c\u6210\u8f09\u5165\u5668(Loader)\u8edf\u9ad4\u53ca\u786c\u9ad4\u90e8\u5206\u3002","title":"Advanced"},{"location":"os/assembler-compiler/#reference","text":"Operating System Concepts by Peter B. Galvin, Greg Gagne and A Silberschatz Abraham Silberschatz (Author) $author: Jin-Wen (Ed) Lai $date: May. 2001 $revised: Mar. 2018 $keywords: operating, systems, assembler, compiler, perl","title":"Reference"},{"location":"tv/","text":"Television Engineering ID Proof-of-Concept Computer Programming 1 Multimedia Player vb 2 Digital Vedio Conversion - MPEG-1 3 Digital Vedio Conversion - MPEG2, MPEG3, MPEG4(DivX)","title":"Television Engineering"},{"location":"tv/#television-engineering","text":"ID Proof-of-Concept Computer Programming 1 Multimedia Player vb 2 Digital Vedio Conversion - MPEG-1 3 Digital Vedio Conversion - MPEG2, MPEG3, MPEG4(DivX)","title":"Television Engineering"},{"location":"tv/mpeg1/","text":"Television Engineering Digital Video Conversion -- MPEG-1 $author: Ching-Wen (Ed) Lai $date: May. 2003 $revised: Mar. 2018 $Keywords: digital, video, conversion, mpeg1 An exercise of Digital Video Conversion for below cases Extracting MPEG-1 file from Standard VCD Cutting and Joining MPEG-1 file MPEG-4 Compression Compare Picture Quality and File Size in Step 3 Content Requirements Running Extracting MPEG-1 file from Standard VCD Cutting and Joining MPEG-1 file MPEG-4 Compression Compare Picture Quality and File Size Observation Advanced Reference Requirements Software VCDGear TMPGEnc FlaskMPEG Media File Mulan ( .DAT Format) Running 1. Extracting MPEG-1 file from Standard VCD \u5c07 VCD \u5167\u6240\u4f7f\u7528\u7684 .DAT \u7684\u6a94\u6848\u683c\u5f0f \u8f49\u63db\u6210\u5f71\u50cf\u8655\u7406\u8edf\u9ad4\u6240\u80fd\u8655\u7406\u7684\u5f71\u7247\u6a94 .MPG \u683c\u5f0f\uff0c Download and Install VCDGear \u7531 VCDGear \u5b98\u65b9\u7db2\u7ad9 \u4e0b\u8f09 \uff0c\u4e0b\u9762\u4ee5 3.50a \u677f\u9032\u884c\u64cd\u4f5c\u3002 \u89e3\u58d3\u7e2e\u5f8c\uff0c\u76f4\u63a5\u9ede\u9078 vcdgear.exe \u6a94\u6848\u5f8c\uff0c\u9032\u5165 VCDGear \u3002 Using VCDGear to convert AVSEQ01 data file to MPEG-1 format file \u5b9a\u7fa9 Extraction / Conversion \u70ba dat - > mpeg \u6309\u4e0b load \u6307\u5b9a\u6b32\u8655\u7406\u7684 .dat \u6a94\u3002( C:\\Documents and Settings\\Sam\\\u684c\u9762\\\u82b1\u6728\u862d\\AVSEQ01.DAT ) \u8207 \u8f49\u63db\u5f8c\u5132\u5b58\u7684\u6a94\u540d\u3002( C:\\Documents and Settings\\Sam\\\u684c\u9762\\\u82b1\u6728\u862d\\AVSEQ01.mpg ) \u6309\u4e0b start \u958b\u59cb\u9032\u884c\u8f49\u63db\u3002 \u5982\u679c\u6709 Fix MPEG Errors \uff0c\u8f49\u63db\u5f8c\u6703\u56de\u5831\u932f\u8aa4\u4fee\u6b63\u6578\u76ee\u3002\u5728\u672c\u6a94\u6848\u4e2d\u6709 266 \u500b\u5df2\u4fee\u6b63 ( Fixes : 226 ) 2. Cutting and Joining MPEG-1 file Download and Install TMPGEnc \u7531 TMPGEnc \u5b98\u65b9\u7db2\u7ad9 \u4e0b\u8f09 \u3002 \u6216\u76f4\u63a5\u4e0b\u8f09 \u4e2d\u6587\u5316\u5f8c\u7248\u672c (\u4ee5\u4e0b\u7531\u6b64\u4e2d\u6587\u5316\u5f8c\u7248\u672c\u8edf\u9ad4\u9032\u884c\u64cd\u4f5c )\u3002 \u76f4\u63a5\u6309\u4e0b TMPGEnc(2.50.32.120CT).exe \u6a94\u6848\u9032\u884c\u5b89\u88dd \u3002 Cut and Join 5-minutes vedio clip from MPEG-1 file \u958b\u555f TMPGEnc \uff0c\u9032\u5165 \u6a94\u6848 / MPEG \u5de5\u5177 / \u5408\u4f75\u53ca\u526a\u4e0b , \u9069\u7576\u7684\u52a0\u5165\u4f60\u6240\u8981\u526a\u8f2f\u7684\u6a94\u6848\u3002\u4e26\u5c07\u9078\u5b9a\u526a\u8f2f\u8207\u5408\u4f75\u7684\u5340\u6bb5, \u9069\u7576\u7684\u52a0\u5165\u6e05\u55ae\u4e2d\u3002\u9078\u5b9a\u8f38\u51fa\u6a94\u6848\u540d\u7a31\u3002 \u6309\u4e0b \u57f7\u884c \u5373\u53ef\u958b\u59cb\u57f7\u884c\u3002 3. MPEG-4 Compression Download and Install FlaskMPEG \u7531 FlaskMPEG \u5b98\u65b9\u7db2\u7ad9 \u4e0b\u8f09 \u3002 Using different in FlashMPEG to convert MPEG-1 video clip to DivX \u9ede\u9078 FlasKMPEG.exe \u555f\u52d5 FlaskMPEG \u3002 \u9078\u64c7 File / Open Media , \u6253\u958b\u6b32\u8655\u7406\u7684\u6a94\u6848 (\u4f8b\u5982 C:\\Documents and Settings\\Sam\\\u684c\u9762\\\u82b1\u6728\u862d\\3. mpeg 5 \u5206\u9418\u526a\u63a5\\AVSEQ01_Cutting&Joining .mpg ). \u9078\u5b9a\u5f8c\u6703\u5c07\u8a72 mpeg \u6a94\u7684\u5c6c\u6027\u986f\u793a\u65bc Control Panel Window\u3002 \u9078\u64c7 Options/ Advanced Options \uff0c\u6aa2\u8996\u8a2d\u5b9a Video : \u5c07 Deinterlace output (slow) \u6253\u52fe\uff0c\u53d6\u5f97\u8f03\u9ad8\u7684\u8f38\u51fa\u54c1\u8cea\u3002 Post Processing : \u9078 HQ Bicubic Fultering \u3002 Files : \u8f38\u51fa\u6a94\u6848\u6309\u7cfb\u7d71\u5167\u5b9a\u653e\u65bc C:\\flaskOut \u3002 \u9078\u64c7 Options/ Select Output Format \uff0c\u5c07 AVI Output \u6253\u52fe\u3002\u4f7f\u8f38\u51fa\u70ba AVI \u683c\u5f0f\u3002 \u9078\u64c7 Options/ Output Format Options \uff0c\u6253\u958b Flask MPEG AVI Output Options Window\u3002 \u6b64\u7247 ( \u82b1\u6728\u862d )\u4e0d\u7b97\u662f\u611b\u60c5\u6587\u85dd\u7247\uff0c\u5076\u6709\u4e9b\u8f03\u5feb\u7684\u5834\u666f\uff0c\u6545\u5c07 Video Codecs.Double Click to configure : \u8a2d\u70ba Dix ;-) MPEG-4 Fast-Motion . \u6309\u4e0b Configure \u9032\u884c\u4ee5\u4e0b\u8a2d\u5b9a\uff0c\u5c07 Keyframe \u8abf\u6210\u6bcf\u79d2 12 \uff1b Smoothness \u6700\u4f73\u5316 100 % \uff1b Data Rate \u70ba 600 Audio Codecs \u8a2d\u6210 MPEG Layer-3 Codec (professional) , Available formats for audio codec \u8a2d\u70ba MPEG Layer-3 - 112 kBit/s, 44,100 Hz, Stereo , \u8abf\u6574\u5b8c\u8a2d\u5b9a\u5f8c\u6309\u4e0b OK \u3002 \u5728 Control Panel Window \u6309\u4e0b Flask it! \u9032\u884c \u8f49\u6210 MPEG 4 \u58d3\u7e2e\u3002 \u25bc\u58d3\u7e2e\u4e2d\u756b\u9762 \u6700\u5f8c\u7684\u58d3\u7e2e\u7d50\u679c\u6703\u5b58\u65bc\u5167\u5b9a\u7684 C:\\flaskOut.avi \u6a94\u6848\u5167\u3002 4. Compare Picture Quality and File Size \u53f3\u5716\u70ba\u539f\u672c\u58d3\u7e2e\u524d( MPEG-1 \u898f\u683c ) \u7684\u756b\u9762\uff0c\u6a94\u6848\u5927\u5c0f\u70ba 51,821 KB. \u7d93\u904e FlaskMPEG \u4e2d MPEG-4 Video Codecs.Double Click to configure : \u8a2d\u70ba Dix ;-) MPEG-4 Fast-Motion Audio Codecs : \u8a2d\u6210 MPEG Layer-3 Codec (professional) Available formats for audio codec : \u8a2d\u70ba MPEG Layer-3 - 112 kBit/s, 44,100 Hz, Stereo \u3002 \u58d3\u7e2e\u540e\u7684\u5927\u5c0f\u70ba 19,730KB \uff0c\u6bd4\u539f\u5148\u6a94\u6848\u8db3\u8db3\u5c11\u4e86 2.62 \u500d\u3002 \u4f46\u4ea6\u53ef\u7531\u53f3\u5716\u770b\u51fa\u4f86\uff0c\u756b\u9762\u54c1\u8cea\u7cbe\u7d30\u5ea6\u4ea6\u8b8a\u7684\u8f03\u5dee\u3002 \u5728 FlaskMPEG \u5c07 Video Codecs \u6539\u6210 Low-Motion \u5176\u4ed6\u8a2d\u5b9a\u7dad\u6301\u4e0d\u8b8a\uff0c\u767c\u73fe\u6a94\u6848\u5927\u5c0f\u8b8a\u5927\u6210 25,535 KB \uff0c\u96d6\u7136\u756b\u9762\u7d30\u7dfb\u5ea6\u589e\u52a0\u4e86\uff0c\u4f46\u6a94\u6848\u5927\u5c0f\u4ea6\u589e\u5927 1.29 \u500d \u3002 \u5728 FlaskMPEG \u5c07 \u4e2d Video Codecs : \u8a2d\u56d8\u539f\u4f86\u7684 Dix ;-) MPEG-4 Fast-Motion Available formats for audio codec \u6539\u6210 MPEG Layer-3 - 24 kBit/s, 44,100 Hz, Stereo , \u53ef\u4ee5\u767c\u73fe\u6a94\u6848\u5927\u5c0f\u6e1b\u5c0f 0.21\u500d \uff0c\u4f46\u97f3\u8cea\u4ea6\u53ef\u4ee5\u63a5\u53d7\u3002 \u518d\u5c07 Available formats for audio codec \u6539\u6210 MPEG Layer-3 - 18 kBit/s, 44,100 Hz, Stereo ,\u6a94\u6848\u5927\u5c0f\u96d6\u6e1b\u5c11\u4e86\uff0c\u4f46\u537b\u4e0d\u591a\uff0c\u97f3\u8cea\u4e5f\u9084\u53ef\u4ee5\u63a5\u53d7\u3002 \u4f46\u5f9e 24 k \u8abf\u6210 18 k \u56e0\u5176\u6a94\u6848\u5927\u5c0f\u6e1b\u5c11\u4e0d\u591a\uff0c\u6709\u6642\u537b\u4e5f\u4e0d\u662f\u5f88\u5fc5\u8981\u3002 Observation \u6a94\u6848\u5927\u5c0f\u76f8\u95dc\u6bd4\u8f03 | ID | Description | Filename | Runtime | File Size | |-----|-------------------------------------------------------|-------------------------------------------|------------| |1 | \u539f\u59cb AVI \u683c\u5f0f | AVSEQ01.DAT | 21:45 secs | 224,846KB | |2 | \u8f49\u6210 MPEG -1 \u683c\u5f0f | AVSEQ01.mpg | 21:45 secs | 221,611KB | |3 | \u526a\u63a5\u6210 5 \u5206\u9418\u5de6\u53f3 MPEG-1 \u683c\u5f0f\u5f71\u7247 | AVSEQ01_Cutting&Joining .mpg | 5:04 secs | 54,821KB | |4 | \u5c07 5 \u5206\u9418\u5de6\u53f3\u5f71\u7247\u8f49\u6210 MPEG-4 ( Fast-Motion )\u683c\u5f0f | flaskOut_fastMotion.avi | 5:04 secs | 19,730KB | |5 | \u5c07 5 \u5206\u9418\u5de6\u53f3\u5f71\u7247\u8f49\u6210 MPEG-4 ( Low-Motion )\u683c\u5f0f | flaskOut_lowMotion.avi | 5:04 secs | 25,535KB | |6 | \u5c07 5 \u5206\u9418\u5de6\u53f3\u5f71\u7247\u8f49\u6210 MPEG-4 ( Fast-Motion/ 24k )\u683c\u5f0f | flaskOut_24k.avi | 5:04 secs | 16,256KB | |7 | \u5c07 5 \u5206\u9418\u5de6\u53f3\u5f71\u7247\u8f49\u6210 MPEG-4 ( Fast-Motion/ 18k )\u683c\u5f0f | flaskOut_18k.avi | 5:04 secs | 16,043KB | Advanced There is another free Movie Big Buck Bunny , we can use it to do this test also. Reference VCDGear \u8edf\u9ad4\u8aaa\u660e Link TMPGEnc \u8edf\u9ad4\u64cd\u4f5c Link 1 Link 2 VCDGear \u8207 FlaskMPEG \u8edf\u9ad4\u6559\u5b78 Link","title":"Digital Vedio Conversion - MPEG-1"},{"location":"tv/mpeg1/#television-engineering","text":"","title":"Television Engineering"},{"location":"tv/mpeg1/#digital-video-conversion-mpeg-1","text":"$author: Ching-Wen (Ed) Lai $date: May. 2003 $revised: Mar. 2018 $Keywords: digital, video, conversion, mpeg1 An exercise of Digital Video Conversion for below cases Extracting MPEG-1 file from Standard VCD Cutting and Joining MPEG-1 file MPEG-4 Compression Compare Picture Quality and File Size in Step 3","title":"Digital Video Conversion -- MPEG-1"},{"location":"tv/mpeg1/#content","text":"Requirements Running Extracting MPEG-1 file from Standard VCD Cutting and Joining MPEG-1 file MPEG-4 Compression Compare Picture Quality and File Size Observation Advanced Reference","title":"Content"},{"location":"tv/mpeg1/#requirements","text":"","title":"Requirements"},{"location":"tv/mpeg1/#software","text":"VCDGear TMPGEnc FlaskMPEG","title":"Software"},{"location":"tv/mpeg1/#media-file","text":"Mulan ( .DAT Format)","title":"Media File"},{"location":"tv/mpeg1/#running","text":"","title":"Running"},{"location":"tv/mpeg1/#1-extracting-mpeg-1-file-from-standard-vcd","text":"\u5c07 VCD \u5167\u6240\u4f7f\u7528\u7684 .DAT \u7684\u6a94\u6848\u683c\u5f0f \u8f49\u63db\u6210\u5f71\u50cf\u8655\u7406\u8edf\u9ad4\u6240\u80fd\u8655\u7406\u7684\u5f71\u7247\u6a94 .MPG \u683c\u5f0f\uff0c Download and Install VCDGear \u7531 VCDGear \u5b98\u65b9\u7db2\u7ad9 \u4e0b\u8f09 \uff0c\u4e0b\u9762\u4ee5 3.50a \u677f\u9032\u884c\u64cd\u4f5c\u3002 \u89e3\u58d3\u7e2e\u5f8c\uff0c\u76f4\u63a5\u9ede\u9078 vcdgear.exe \u6a94\u6848\u5f8c\uff0c\u9032\u5165 VCDGear \u3002 Using VCDGear to convert AVSEQ01 data file to MPEG-1 format file \u5b9a\u7fa9 Extraction / Conversion \u70ba dat - > mpeg \u6309\u4e0b load \u6307\u5b9a\u6b32\u8655\u7406\u7684 .dat \u6a94\u3002( C:\\Documents and Settings\\Sam\\\u684c\u9762\\\u82b1\u6728\u862d\\AVSEQ01.DAT ) \u8207 \u8f49\u63db\u5f8c\u5132\u5b58\u7684\u6a94\u540d\u3002( C:\\Documents and Settings\\Sam\\\u684c\u9762\\\u82b1\u6728\u862d\\AVSEQ01.mpg ) \u6309\u4e0b start \u958b\u59cb\u9032\u884c\u8f49\u63db\u3002 \u5982\u679c\u6709 Fix MPEG Errors \uff0c\u8f49\u63db\u5f8c\u6703\u56de\u5831\u932f\u8aa4\u4fee\u6b63\u6578\u76ee\u3002\u5728\u672c\u6a94\u6848\u4e2d\u6709 266 \u500b\u5df2\u4fee\u6b63 ( Fixes : 226 )","title":"1. Extracting MPEG-1 file from Standard VCD"},{"location":"tv/mpeg1/#2-cutting-and-joining-mpeg-1-file","text":"Download and Install TMPGEnc \u7531 TMPGEnc \u5b98\u65b9\u7db2\u7ad9 \u4e0b\u8f09 \u3002 \u6216\u76f4\u63a5\u4e0b\u8f09 \u4e2d\u6587\u5316\u5f8c\u7248\u672c (\u4ee5\u4e0b\u7531\u6b64\u4e2d\u6587\u5316\u5f8c\u7248\u672c\u8edf\u9ad4\u9032\u884c\u64cd\u4f5c )\u3002 \u76f4\u63a5\u6309\u4e0b TMPGEnc(2.50.32.120CT).exe \u6a94\u6848\u9032\u884c\u5b89\u88dd \u3002 Cut and Join 5-minutes vedio clip from MPEG-1 file \u958b\u555f TMPGEnc \uff0c\u9032\u5165 \u6a94\u6848 / MPEG \u5de5\u5177 / \u5408\u4f75\u53ca\u526a\u4e0b , \u9069\u7576\u7684\u52a0\u5165\u4f60\u6240\u8981\u526a\u8f2f\u7684\u6a94\u6848\u3002\u4e26\u5c07\u9078\u5b9a\u526a\u8f2f\u8207\u5408\u4f75\u7684\u5340\u6bb5, \u9069\u7576\u7684\u52a0\u5165\u6e05\u55ae\u4e2d\u3002\u9078\u5b9a\u8f38\u51fa\u6a94\u6848\u540d\u7a31\u3002 \u6309\u4e0b \u57f7\u884c \u5373\u53ef\u958b\u59cb\u57f7\u884c\u3002","title":"2. Cutting and Joining MPEG-1 file"},{"location":"tv/mpeg1/#3-mpeg-4-compression","text":"Download and Install FlaskMPEG \u7531 FlaskMPEG \u5b98\u65b9\u7db2\u7ad9 \u4e0b\u8f09 \u3002 Using different in FlashMPEG to convert MPEG-1 video clip to DivX \u9ede\u9078 FlasKMPEG.exe \u555f\u52d5 FlaskMPEG \u3002 \u9078\u64c7 File / Open Media , \u6253\u958b\u6b32\u8655\u7406\u7684\u6a94\u6848 (\u4f8b\u5982 C:\\Documents and Settings\\Sam\\\u684c\u9762\\\u82b1\u6728\u862d\\3. mpeg 5 \u5206\u9418\u526a\u63a5\\AVSEQ01_Cutting&Joining .mpg ). \u9078\u5b9a\u5f8c\u6703\u5c07\u8a72 mpeg \u6a94\u7684\u5c6c\u6027\u986f\u793a\u65bc Control Panel Window\u3002 \u9078\u64c7 Options/ Advanced Options \uff0c\u6aa2\u8996\u8a2d\u5b9a Video : \u5c07 Deinterlace output (slow) \u6253\u52fe\uff0c\u53d6\u5f97\u8f03\u9ad8\u7684\u8f38\u51fa\u54c1\u8cea\u3002 Post Processing : \u9078 HQ Bicubic Fultering \u3002 Files : \u8f38\u51fa\u6a94\u6848\u6309\u7cfb\u7d71\u5167\u5b9a\u653e\u65bc C:\\flaskOut \u3002 \u9078\u64c7 Options/ Select Output Format \uff0c\u5c07 AVI Output \u6253\u52fe\u3002\u4f7f\u8f38\u51fa\u70ba AVI \u683c\u5f0f\u3002 \u9078\u64c7 Options/ Output Format Options \uff0c\u6253\u958b Flask MPEG AVI Output Options Window\u3002 \u6b64\u7247 ( \u82b1\u6728\u862d )\u4e0d\u7b97\u662f\u611b\u60c5\u6587\u85dd\u7247\uff0c\u5076\u6709\u4e9b\u8f03\u5feb\u7684\u5834\u666f\uff0c\u6545\u5c07 Video Codecs.Double Click to configure : \u8a2d\u70ba Dix ;-) MPEG-4 Fast-Motion . \u6309\u4e0b Configure \u9032\u884c\u4ee5\u4e0b\u8a2d\u5b9a\uff0c\u5c07 Keyframe \u8abf\u6210\u6bcf\u79d2 12 \uff1b Smoothness \u6700\u4f73\u5316 100 % \uff1b Data Rate \u70ba 600 Audio Codecs \u8a2d\u6210 MPEG Layer-3 Codec (professional) , Available formats for audio codec \u8a2d\u70ba MPEG Layer-3 - 112 kBit/s, 44,100 Hz, Stereo , \u8abf\u6574\u5b8c\u8a2d\u5b9a\u5f8c\u6309\u4e0b OK \u3002 \u5728 Control Panel Window \u6309\u4e0b Flask it! \u9032\u884c \u8f49\u6210 MPEG 4 \u58d3\u7e2e\u3002 \u25bc\u58d3\u7e2e\u4e2d\u756b\u9762 \u6700\u5f8c\u7684\u58d3\u7e2e\u7d50\u679c\u6703\u5b58\u65bc\u5167\u5b9a\u7684 C:\\flaskOut.avi \u6a94\u6848\u5167\u3002","title":"3. MPEG-4 Compression"},{"location":"tv/mpeg1/#4-compare-picture-quality-and-file-size","text":"\u53f3\u5716\u70ba\u539f\u672c\u58d3\u7e2e\u524d( MPEG-1 \u898f\u683c ) \u7684\u756b\u9762\uff0c\u6a94\u6848\u5927\u5c0f\u70ba 51,821 KB. \u7d93\u904e FlaskMPEG \u4e2d MPEG-4 Video Codecs.Double Click to configure : \u8a2d\u70ba Dix ;-) MPEG-4 Fast-Motion Audio Codecs : \u8a2d\u6210 MPEG Layer-3 Codec (professional) Available formats for audio codec : \u8a2d\u70ba MPEG Layer-3 - 112 kBit/s, 44,100 Hz, Stereo \u3002 \u58d3\u7e2e\u540e\u7684\u5927\u5c0f\u70ba 19,730KB \uff0c\u6bd4\u539f\u5148\u6a94\u6848\u8db3\u8db3\u5c11\u4e86 2.62 \u500d\u3002 \u4f46\u4ea6\u53ef\u7531\u53f3\u5716\u770b\u51fa\u4f86\uff0c\u756b\u9762\u54c1\u8cea\u7cbe\u7d30\u5ea6\u4ea6\u8b8a\u7684\u8f03\u5dee\u3002 \u5728 FlaskMPEG \u5c07 Video Codecs \u6539\u6210 Low-Motion \u5176\u4ed6\u8a2d\u5b9a\u7dad\u6301\u4e0d\u8b8a\uff0c\u767c\u73fe\u6a94\u6848\u5927\u5c0f\u8b8a\u5927\u6210 25,535 KB \uff0c\u96d6\u7136\u756b\u9762\u7d30\u7dfb\u5ea6\u589e\u52a0\u4e86\uff0c\u4f46\u6a94\u6848\u5927\u5c0f\u4ea6\u589e\u5927 1.29 \u500d \u3002 \u5728 FlaskMPEG \u5c07 \u4e2d Video Codecs : \u8a2d\u56d8\u539f\u4f86\u7684 Dix ;-) MPEG-4 Fast-Motion Available formats for audio codec \u6539\u6210 MPEG Layer-3 - 24 kBit/s, 44,100 Hz, Stereo , \u53ef\u4ee5\u767c\u73fe\u6a94\u6848\u5927\u5c0f\u6e1b\u5c0f 0.21\u500d \uff0c\u4f46\u97f3\u8cea\u4ea6\u53ef\u4ee5\u63a5\u53d7\u3002 \u518d\u5c07 Available formats for audio codec \u6539\u6210 MPEG Layer-3 - 18 kBit/s, 44,100 Hz, Stereo ,\u6a94\u6848\u5927\u5c0f\u96d6\u6e1b\u5c11\u4e86\uff0c\u4f46\u537b\u4e0d\u591a\uff0c\u97f3\u8cea\u4e5f\u9084\u53ef\u4ee5\u63a5\u53d7\u3002 \u4f46\u5f9e 24 k \u8abf\u6210 18 k \u56e0\u5176\u6a94\u6848\u5927\u5c0f\u6e1b\u5c11\u4e0d\u591a\uff0c\u6709\u6642\u537b\u4e5f\u4e0d\u662f\u5f88\u5fc5\u8981\u3002","title":"4. Compare Picture Quality and File Size"},{"location":"tv/mpeg1/#observation","text":"\u6a94\u6848\u5927\u5c0f\u76f8\u95dc\u6bd4\u8f03 | ID | Description | Filename | Runtime | File Size | |-----|-------------------------------------------------------|-------------------------------------------|------------| |1 | \u539f\u59cb AVI \u683c\u5f0f | AVSEQ01.DAT | 21:45 secs | 224,846KB | |2 | \u8f49\u6210 MPEG -1 \u683c\u5f0f | AVSEQ01.mpg | 21:45 secs | 221,611KB | |3 | \u526a\u63a5\u6210 5 \u5206\u9418\u5de6\u53f3 MPEG-1 \u683c\u5f0f\u5f71\u7247 | AVSEQ01_Cutting&Joining .mpg | 5:04 secs | 54,821KB | |4 | \u5c07 5 \u5206\u9418\u5de6\u53f3\u5f71\u7247\u8f49\u6210 MPEG-4 ( Fast-Motion )\u683c\u5f0f | flaskOut_fastMotion.avi | 5:04 secs | 19,730KB | |5 | \u5c07 5 \u5206\u9418\u5de6\u53f3\u5f71\u7247\u8f49\u6210 MPEG-4 ( Low-Motion )\u683c\u5f0f | flaskOut_lowMotion.avi | 5:04 secs | 25,535KB | |6 | \u5c07 5 \u5206\u9418\u5de6\u53f3\u5f71\u7247\u8f49\u6210 MPEG-4 ( Fast-Motion/ 24k )\u683c\u5f0f | flaskOut_24k.avi | 5:04 secs | 16,256KB | |7 | \u5c07 5 \u5206\u9418\u5de6\u53f3\u5f71\u7247\u8f49\u6210 MPEG-4 ( Fast-Motion/ 18k )\u683c\u5f0f | flaskOut_18k.avi | 5:04 secs | 16,043KB |","title":"Observation"},{"location":"tv/mpeg1/#advanced","text":"There is another free Movie Big Buck Bunny , we can use it to do this test also.","title":"Advanced"},{"location":"tv/mpeg1/#reference","text":"VCDGear \u8edf\u9ad4\u8aaa\u660e Link TMPGEnc \u8edf\u9ad4\u64cd\u4f5c Link 1 Link 2 VCDGear \u8207 FlaskMPEG \u8edf\u9ad4\u6559\u5b78 Link","title":"Reference"},{"location":"tv/mpeg2/","text":"Television Engineering MPEG-2 of Digital Video Conversion $author: Ching-Wen (Ed) Lai $date: May. 2001 $revised: Mar. 2018 $Keywords: An implementation of an Assembler Compiler Content Requirements Programming Running Result Analysis Conclusion Advanced Comment Reference Requirements Programming Running Result Analysis Conclusion Advanced Comment Reference","title":"Television Engineering"},{"location":"tv/mpeg2/#television-engineering","text":"","title":"Television Engineering"},{"location":"tv/mpeg2/#mpeg-2-of-digital-video-conversion","text":"$author: Ching-Wen (Ed) Lai $date: May. 2001 $revised: Mar. 2018 $Keywords: An implementation of an Assembler Compiler","title":"MPEG-2 of Digital Video Conversion"},{"location":"tv/mpeg2/#content","text":"Requirements Programming Running Result Analysis Conclusion Advanced Comment Reference","title":"Content"},{"location":"tv/mpeg2/#requirements","text":"","title":"Requirements"},{"location":"tv/mpeg2/#programming","text":"","title":"Programming"},{"location":"tv/mpeg2/#running","text":"","title":"Running"},{"location":"tv/mpeg2/#result","text":"","title":"Result"},{"location":"tv/mpeg2/#analysis","text":"","title":"Analysis"},{"location":"tv/mpeg2/#conclusion","text":"","title":"Conclusion"},{"location":"tv/mpeg2/#advanced","text":"","title":"Advanced"},{"location":"tv/mpeg2/#comment","text":"","title":"Comment"},{"location":"tv/mpeg2/#reference","text":"","title":"Reference"},{"location":"tv/player/","text":"Television Engineering Multimedia Player $author: Ching-Wen (Ed) Lai $date: May. 2003 $revised: Mar. 2018 $keywords: television, engineering, multimedia, player An implementation of Multimedia Player Content Concept Requirements Background GUI Interface Programming References Concept \u8a2d\u8a08\u4e00\u591a\u5a92\u9ad4\u7a0b\u5f0f, \u53ef\u4ee5\u64ad\u653e AVI \u8207 MIDI \u985e\u578b\u7684\u591a\u5a92\u9ad4\u6a94\u6848\u3002 Requirements Visual Basic 6.0 Background \u4f7f\u7528 Visual Basic \u7684 API \u4e2d\u7684 MCI(Media Control Interface) \u8a9e\u97f3\u64ad\u653e\u51fd\u5f0f, \u64ad\u653e\u591a\u5a92\u9ad4\u6a94. \u5728\u7a0b\u5f0f\u5167\u5373\u662f\u5229\u7528API \u7684 mciSendString \u51fd\u5f0f,\u4f86\u64ad\u653e *.wav , *.mid , *.avi \u6a94. \u5ba3\u544a API \u51fd\u6578,\u5728\u8868\u55ae\u6216\u6a21\u7d44\u4f5c\u4ee5\u4e0b\u5ba3\u544a Public Const WS_CHILD = &H40000000 Declare Function mciSendString Lib \"winmm\" Alias \"mciSendStringA\" (ByVal lpstrCommand As String, ByVal lpstrReturnString As String, ByVal uReturnLength As Long, ByVal hwndCallback As Long) As Long Public FrameNO As Integer \u4f7f\u7528 mciSendString \u51fd\u6578\u64ad\u653e\u591a\u5a92\u9ad4\u6a94 Ret=mciSendString (\"MCI Command\",0,0,0 ) \u4ee5 flags \u53c3\u6578\u6307\u5b9a\u65b9\u5f0f\u64ad\u653e\u8a9e\u97f3\u6a94 ret \u70ba\u547c\u53eb mciSendString \u7684\u50b3\u56de\u503c \u5176\u503c\u70ba 0 \u4ee3\u8868\u5931\u6557,\u70ba 1 \u4ee3\u8868\u6210\u529f MCI Command Strings MCI Command Strings Parameters Function open \u8a2d\u5099\u540d\u7a31 [tape \u8a2d\u5099\u5f62\u5f0f] [alias \u5225\u540d ] \u958b\u555f\u8a2d\u5099 close \u8a2d\u5099\u540d\u7a31 \u95dc\u9589 play \u8a2d\u5099\u540d\u7a31 \u64ad\u653e pause - \u66ab\u505c resume \u8a2d\u5099\u540d\u7a31 \u6062\u5fa9\u64ad\u653e seek \u8a2d\u5099\u540d\u7a31 [ to \u4f4d\u7f6e | to start | to end ] \u79fb\u5230 stop \u8a2d\u5099\u540d\u7a31 \u505c\u6b62 GUI Interface \u8868\u55ae\u8a2d\u8a08 \u64ad\u653e\u5340 : \u6700\u9802\u7aef\u70ba \u64ad\u653e\u5340 ,\u653e\u6620\u591a\u5a92\u9ad4\u6a94\u6848 \u64ad\u653e\u6e05\u55ae : \u53ef\u52a0\u5165\u4e94\u7b46\u8cc7\u6599 \u96d9\u64ca\u64ad\u653e\u6e05\u55ae\u53ef\u64ad\u653e\u9078\u5b9a\u7684\u66f2\u76ee Play : \u64ad\u653e\u9078\u5b9a\u7684\u66f2\u76ee Pause : \u66ab\u6642\u505c\u6b62\u64ad\u653e Resume : \u89e3\u9664\u66ab\u505c\u64ad\u653e\u7684\u72c0\u614b \u7e7c\u7e8c\u64ad\u653e STOP : \u505c\u6b62\u64ad\u653e Add to List : \u958b\u555f\u901a\u7528\u578b\u6a94\u6848\u5c0d\u8a71\u76d2 \u5c07\u6240\u9078\u5b9a\u7684\u6a94\u6848\u52a0\u5165 \u64ad\u653e\u6e05\u55ae Del List Item : \u522a\u9664\u64ad\u653e\u6e05\u55ae\u5167\u7684\u9078\u5b9a\u7684\u8cc7\u6599 Play now : \u76ee\u524d\u64ad\u653e\u7684\u66f2\u76ee State : \u986f\u793a\u7cfb\u7d71\u72c0\u614b \u7269\u4ef6\u91cd\u8981\u5c6c\u6027\u503c \u7269\u4ef6 Name (\u7269\u4ef6\u540d\u7a31) Buttom cmdPlay Buttom cmdPause Buttom cmdResume Buttom stopComm Text Text1 Text1 Text Text2 Text2 List List1 List1 Buttom openComm Buttom delListComm CommonDialog CommonDialog1 Programming Dim item(5) As String Dim sel As Integer Dim delCounter As Integer Private Sub cmdPause_Click() Ret& = mciSendString(\"pause Animation\", 0&, 0, 0) cmdPause.Enabled = False cmdResume.Enabled = True End Sub Private Sub cmdPlay_Click() cmdPause.Enabled = True cmdResume.Enabled = False Call List1_DblClick End Sub Private Sub cmdResume_Click() Ret& = mciSendString(\"resume Animation\", 0&, 0, 0) cmdPause.Enabled = True cmdResume.Enabled = False End Sub Private Sub Command1_Click() Form_Unload (True) End Sub Private Sub delListComm_Click() If List1.ListIndex <> -1 Then Text2 = \"\u522a\u9664\" + item(List1.ListIndex) delCounter = Val(List1.ListIndex) List1.RemoveItem List1.ListIndex If sel < 6 Then For delCounter = delCounter To sel item(delCounter) = item(delCounter + 1) Next End If sel = sel - 1 If sel = -1 Then delListComm.Enabled = False End If Else Text2 = \"\u64ad\u653e\u6e05\u55ae\u662f\u7a7a\u7684\" delListComm.Enabled = False End If End Sub Private Sub Form_Load() Form1.Show delListComm.Enabled = False Text1 = \"\u4f7f\u7528 Add to List \u52a0\u5165\u64ad\u653e\u6e05\u55ae\" sel = -1 End Sub Private Sub Form_Unload(Cancel As Integer) Ret& = mciSendString(\"close Animation\", 0&, 0, 0) End Sub Private Sub List1_DblClick() If List1.ListIndex > -1 Then Call mciSendString(\"close Animation\", 0, 0, 0) cmdPlay.Enabled = False CmdString$ = (\"open \" + item(List1.ListIndex) + \" type MPEGVideo alias Animation parent \" + Str$(Form1.hWnd) + \" style \" + Str$(WS_CHILD)) Ret& = mciSendString(CmdString$, 0&, 0, 0) Ret& = mciSendString(\"break Animation on 114\", 0&, 0, 0) Ret& = mciSendString(\"set Animation time format frames\", 0&, 0, 0) Ret& = mciSendString(\"put Animation window at 10 10 320 240\", 0&, 0, 0) Ret& = mciSendString(\"play Animation\", 0&, 0, 0) Text1 = item(List1.ListIndex) Else Text1 = \"\u8acb\u9078\u64c7\u66f2\u76ee\" End If End Sub Private Sub openComm_Click() If sel < 4 And sel > -2 Then CommonDialog1.ShowOpen List1.AddItem CommonDialog1.FileName sel = sel + 1 Text2 = \"\u52a0\u5165 \" + CommonDialog1.FileName + \" \u81f3\u64ad\u653e\u6e05\u55ae\" item(sel) = CommonDialog1.FileName delListComm.Enabled = True Else Text2 = \"\u64ad\u653e\u6e05\u55ae\u5df2\u6eff,\u8acb\u79fb\u9664\u4e0d\u9700\u8981\u7684\u6e05\u55ae\u8cc7\u6599\" End If End Sub Private Sub stopComm_Click() Call mciSendString(\"close Animation\", 0, 0, 0) cmdPlay.Enabled = True End Sub Running \u6309\u4e0b Add to List \u5c07\u5f71\u7247\u52a0\u5165\u64ad\u653e\u6e05\u55ae, \u96d9\u64ca\u64ad\u653e\u6e05\u55ae\u5167\u7684 Item \u5373\u53ef\u64ad\u653e\u591a\u5a92\u9ad4\u6a94\u6848 , \u64ad\u653e\u4e2d\u53ef\u4ee5\u6309\u4e0b Pause \u66ab\u505c, Resume \u7e7c\u7e8c, \u6216 STOP \u505c\u6b62\u64ad\u653e\u3002 \u82e5\u9700\u5c07\u8a72\u7b46\u8cc7\u6599\u7531\u64ad\u653e\u6e05\u55ae\u5167\u79fb\u9664,\u8acb\u6309 Del List Item \u3002 Reference Visual Basic 6.0\u5b78\u7fd2\u7bc4\u672c \u9ec3\u4e16\u967d\u7b49\u7de8\u8457 \u677e\u5d17","title":"Multimedia Player"},{"location":"tv/player/#television-engineering","text":"","title":"Television Engineering"},{"location":"tv/player/#multimedia-player","text":"$author: Ching-Wen (Ed) Lai $date: May. 2003 $revised: Mar. 2018 $keywords: television, engineering, multimedia, player An implementation of Multimedia Player","title":"Multimedia Player"},{"location":"tv/player/#content","text":"Concept Requirements Background GUI Interface Programming References","title":"Content"},{"location":"tv/player/#concept","text":"\u8a2d\u8a08\u4e00\u591a\u5a92\u9ad4\u7a0b\u5f0f, \u53ef\u4ee5\u64ad\u653e AVI \u8207 MIDI \u985e\u578b\u7684\u591a\u5a92\u9ad4\u6a94\u6848\u3002","title":"Concept"},{"location":"tv/player/#requirements","text":"Visual Basic 6.0","title":"Requirements"},{"location":"tv/player/#background","text":"\u4f7f\u7528 Visual Basic \u7684 API \u4e2d\u7684 MCI(Media Control Interface) \u8a9e\u97f3\u64ad\u653e\u51fd\u5f0f, \u64ad\u653e\u591a\u5a92\u9ad4\u6a94. \u5728\u7a0b\u5f0f\u5167\u5373\u662f\u5229\u7528API \u7684 mciSendString \u51fd\u5f0f,\u4f86\u64ad\u653e *.wav , *.mid , *.avi \u6a94. \u5ba3\u544a API \u51fd\u6578,\u5728\u8868\u55ae\u6216\u6a21\u7d44\u4f5c\u4ee5\u4e0b\u5ba3\u544a Public Const WS_CHILD = &H40000000 Declare Function mciSendString Lib \"winmm\" Alias \"mciSendStringA\" (ByVal lpstrCommand As String, ByVal lpstrReturnString As String, ByVal uReturnLength As Long, ByVal hwndCallback As Long) As Long Public FrameNO As Integer \u4f7f\u7528 mciSendString \u51fd\u6578\u64ad\u653e\u591a\u5a92\u9ad4\u6a94 Ret=mciSendString (\"MCI Command\",0,0,0 ) \u4ee5 flags \u53c3\u6578\u6307\u5b9a\u65b9\u5f0f\u64ad\u653e\u8a9e\u97f3\u6a94 ret \u70ba\u547c\u53eb mciSendString \u7684\u50b3\u56de\u503c \u5176\u503c\u70ba 0 \u4ee3\u8868\u5931\u6557,\u70ba 1 \u4ee3\u8868\u6210\u529f MCI Command Strings MCI Command Strings Parameters Function open \u8a2d\u5099\u540d\u7a31 [tape \u8a2d\u5099\u5f62\u5f0f] [alias \u5225\u540d ] \u958b\u555f\u8a2d\u5099 close \u8a2d\u5099\u540d\u7a31 \u95dc\u9589 play \u8a2d\u5099\u540d\u7a31 \u64ad\u653e pause - \u66ab\u505c resume \u8a2d\u5099\u540d\u7a31 \u6062\u5fa9\u64ad\u653e seek \u8a2d\u5099\u540d\u7a31 [ to \u4f4d\u7f6e | to start | to end ] \u79fb\u5230 stop \u8a2d\u5099\u540d\u7a31 \u505c\u6b62","title":"Background"},{"location":"tv/player/#gui-interface","text":"\u8868\u55ae\u8a2d\u8a08 \u64ad\u653e\u5340 : \u6700\u9802\u7aef\u70ba \u64ad\u653e\u5340 ,\u653e\u6620\u591a\u5a92\u9ad4\u6a94\u6848 \u64ad\u653e\u6e05\u55ae : \u53ef\u52a0\u5165\u4e94\u7b46\u8cc7\u6599 \u96d9\u64ca\u64ad\u653e\u6e05\u55ae\u53ef\u64ad\u653e\u9078\u5b9a\u7684\u66f2\u76ee Play : \u64ad\u653e\u9078\u5b9a\u7684\u66f2\u76ee Pause : \u66ab\u6642\u505c\u6b62\u64ad\u653e Resume : \u89e3\u9664\u66ab\u505c\u64ad\u653e\u7684\u72c0\u614b \u7e7c\u7e8c\u64ad\u653e STOP : \u505c\u6b62\u64ad\u653e Add to List : \u958b\u555f\u901a\u7528\u578b\u6a94\u6848\u5c0d\u8a71\u76d2 \u5c07\u6240\u9078\u5b9a\u7684\u6a94\u6848\u52a0\u5165 \u64ad\u653e\u6e05\u55ae Del List Item : \u522a\u9664\u64ad\u653e\u6e05\u55ae\u5167\u7684\u9078\u5b9a\u7684\u8cc7\u6599 Play now : \u76ee\u524d\u64ad\u653e\u7684\u66f2\u76ee State : \u986f\u793a\u7cfb\u7d71\u72c0\u614b \u7269\u4ef6\u91cd\u8981\u5c6c\u6027\u503c \u7269\u4ef6 Name (\u7269\u4ef6\u540d\u7a31) Buttom cmdPlay Buttom cmdPause Buttom cmdResume Buttom stopComm Text Text1 Text1 Text Text2 Text2 List List1 List1 Buttom openComm Buttom delListComm CommonDialog CommonDialog1","title":"GUI Interface"},{"location":"tv/player/#programming","text":"Dim item(5) As String Dim sel As Integer Dim delCounter As Integer Private Sub cmdPause_Click() Ret& = mciSendString(\"pause Animation\", 0&, 0, 0) cmdPause.Enabled = False cmdResume.Enabled = True End Sub Private Sub cmdPlay_Click() cmdPause.Enabled = True cmdResume.Enabled = False Call List1_DblClick End Sub Private Sub cmdResume_Click() Ret& = mciSendString(\"resume Animation\", 0&, 0, 0) cmdPause.Enabled = True cmdResume.Enabled = False End Sub Private Sub Command1_Click() Form_Unload (True) End Sub Private Sub delListComm_Click() If List1.ListIndex <> -1 Then Text2 = \"\u522a\u9664\" + item(List1.ListIndex) delCounter = Val(List1.ListIndex) List1.RemoveItem List1.ListIndex If sel < 6 Then For delCounter = delCounter To sel item(delCounter) = item(delCounter + 1) Next End If sel = sel - 1 If sel = -1 Then delListComm.Enabled = False End If Else Text2 = \"\u64ad\u653e\u6e05\u55ae\u662f\u7a7a\u7684\" delListComm.Enabled = False End If End Sub Private Sub Form_Load() Form1.Show delListComm.Enabled = False Text1 = \"\u4f7f\u7528 Add to List \u52a0\u5165\u64ad\u653e\u6e05\u55ae\" sel = -1 End Sub Private Sub Form_Unload(Cancel As Integer) Ret& = mciSendString(\"close Animation\", 0&, 0, 0) End Sub Private Sub List1_DblClick() If List1.ListIndex > -1 Then Call mciSendString(\"close Animation\", 0, 0, 0) cmdPlay.Enabled = False CmdString$ = (\"open \" + item(List1.ListIndex) + \" type MPEGVideo alias Animation parent \" + Str$(Form1.hWnd) + \" style \" + Str$(WS_CHILD)) Ret& = mciSendString(CmdString$, 0&, 0, 0) Ret& = mciSendString(\"break Animation on 114\", 0&, 0, 0) Ret& = mciSendString(\"set Animation time format frames\", 0&, 0, 0) Ret& = mciSendString(\"put Animation window at 10 10 320 240\", 0&, 0, 0) Ret& = mciSendString(\"play Animation\", 0&, 0, 0) Text1 = item(List1.ListIndex) Else Text1 = \"\u8acb\u9078\u64c7\u66f2\u76ee\" End If End Sub Private Sub openComm_Click() If sel < 4 And sel > -2 Then CommonDialog1.ShowOpen List1.AddItem CommonDialog1.FileName sel = sel + 1 Text2 = \"\u52a0\u5165 \" + CommonDialog1.FileName + \" \u81f3\u64ad\u653e\u6e05\u55ae\" item(sel) = CommonDialog1.FileName delListComm.Enabled = True Else Text2 = \"\u64ad\u653e\u6e05\u55ae\u5df2\u6eff,\u8acb\u79fb\u9664\u4e0d\u9700\u8981\u7684\u6e05\u55ae\u8cc7\u6599\" End If End Sub Private Sub stopComm_Click() Call mciSendString(\"close Animation\", 0, 0, 0) cmdPlay.Enabled = True End Sub","title":"Programming"},{"location":"tv/player/#running","text":"\u6309\u4e0b Add to List \u5c07\u5f71\u7247\u52a0\u5165\u64ad\u653e\u6e05\u55ae, \u96d9\u64ca\u64ad\u653e\u6e05\u55ae\u5167\u7684 Item \u5373\u53ef\u64ad\u653e\u591a\u5a92\u9ad4\u6a94\u6848 , \u64ad\u653e\u4e2d\u53ef\u4ee5\u6309\u4e0b Pause \u66ab\u505c, Resume \u7e7c\u7e8c, \u6216 STOP \u505c\u6b62\u64ad\u653e\u3002 \u82e5\u9700\u5c07\u8a72\u7b46\u8cc7\u6599\u7531\u64ad\u653e\u6e05\u55ae\u5167\u79fb\u9664,\u8acb\u6309 Del List Item \u3002","title":"Running"},{"location":"tv/player/#reference","text":"Visual Basic 6.0\u5b78\u7fd2\u7bc4\u672c \u9ec3\u4e16\u967d\u7b49\u7de8\u8457 \u677e\u5d17","title":"Reference"}]}